# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
NGSIv2 geo-queries as payload in NGSIv1 queryContext ('near' cases)

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# Inspired by 0000_ngsi10_geolocation_query tests
#
# 01. Create entity corresponding to Madrid
# 02. Create entity corresponding to Alcobendas
# 03. Create entity corresponding to Leganes
# 04. Query inside 13.5 kms radius from Madrid center -> Madrid, Leganes
# 05. Query inside 15 kms radius from Madrid center  -> Madrid, Alcobendas, Leganes
# 06. Query in 13.5 kms radius outside Madrid center -> Alcobendas
#

echo "01. Create entity corresponding to Madrid"
echo "========================================="
payload='{
  "id": "Madrid",
  "type": "City",
  "location": {
    "value": "40.418889, -3.691944",
    "type": "geo:point"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo
sleep 1.1


echo "02. Create entity corresponding to Alcobendas"
echo "============================================="
payload='{
  "id": "Alcobendas",
  "type": "City",
  "location": {
    "value": "40.533333, -3.633333",
    "type": "geo:point"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo
sleep 1.1


echo "03. Create entity corresponding to Leganes"
echo "=========================================="
payload='{
  "id": "Leganes",
  "type": "City",
  "location": {
    "value": "40.316667, -3.75",
    "type": "geo:point"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. Query inside 13.5 kms radius from Madrid center -> Madrid, Leganes"
echo "======================================================================"
payload='{
  "entities": [
  {
    "type": "City",
    "isPattern": "true",
    "id": ".*"
  }
  ],
  "restriction": {
    "scopes": [
    {
      "type" : "FIWARE::Location::NGSIv2",
      "value" : {
        "georel": [ "near", "maxDistance:13500", "minDistance:0" ],
        "geometry": "point",
        "coords": [ [40.418889,-3.691944] ]
      }
    }
    ]
  }
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


echo "05. Query inside 15 kms radius from Madrid center -> Madrid, Alcobendas, Leganes"
echo "================================================================================"
payload='{
  "entities": [
  {
    "type": "City",
    "isPattern": "true",
    "id": ".*"
  }
  ],
  "restriction": {
    "scopes": [
    {
      "type" : "FIWARE::Location::NGSIv2",
      "value" : {
        "georel": [ "near", "maxDistance:15000" ],
        "geometry": "point",
        "coords": [ [40.418889,-3.691944] ]
      }
    }
    ]
  }
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


echo "06. Query in 13.5 kms radius outside Madrid center -> Alcobendas"
echo "================================================================"
payload='{
  "entities": [
  {
    "type": "City",
    "isPattern": "true",
    "id": ".*"
  }
  ],
  "restriction": {
    "scopes": [
    {
      "type" : "FIWARE::Location::NGSIv2",
      "value" : {
        "georel": [ "near", "minDistance:13500" ],
        "geometry": "point",
        "coords": [ [40.418889,-3.691944] ]
      }
    }
    ]
  }
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


--REGEXPECT--
01. Create entity corresponding to Madrid
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/Madrid?type=City
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity corresponding to Alcobendas
=============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/Alcobendas?type=City
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create entity corresponding to Leganes
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/Leganes?type=City
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Query inside 13.5 kms radius from Madrid center -> Madrid, Leganes
======================================================================
HTTP/1.1 200 OK
Content-Length: 423
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": "40.418889, -3.691944"
                    }
                ],
                "id": "Madrid",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": "40.316667, -3.75"
                    }
                ],
                "id": "Leganes",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. Query inside 15 kms radius from Madrid center -> Madrid, Alcobendas, Leganes
================================================================================
HTTP/1.1 200 OK
Content-Length: 629
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": "40.418889, -3.691944"
                    }
                ],
                "id": "Madrid",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": "40.533333, -3.633333"
                    }
                ],
                "id": "Alcobendas",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": "40.316667, -3.75"
                    }
                ],
                "id": "Leganes",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. Query in 13.5 kms radius outside Madrid center -> Alcobendas
================================================================
HTTP/1.1 200 OK
Content-Length: 228
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": "40.533333, -3.633333"
                    }
                ],
                "id": "Alcobendas",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
