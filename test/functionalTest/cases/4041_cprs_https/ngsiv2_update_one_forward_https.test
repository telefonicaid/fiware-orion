# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
One Forward Update To Context Provider (using HTTPS)

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB 0 IPV4 -insecureNotif

# Run CP1 using HTTPS
${SCRIPT_HOME}/httpsPrepare.sh --keyFileName /tmp/harnessTest.key --certFileName /tmp/harnessTest.pem
export BROKER_AWAIT_SLEEP_TIME=6
brokerStart CP1 0-255 IPV4 -https -key /tmp/harnessTest.key -cert /tmp/harnessTest.pem
unset BROKER_AWAIT_SLEEP_TIME

--SHELL--

#
# 01. Update/APPEND E1/T1/A1 in CP1
# 02. Register E1/T1/A1 in CB, provApp: HTTPS CP1
# 03. Update/UPDATE E1/T1/A1
# 04. Query E1/T1/A1 in CB
# 05. Query E1/T1/A1 in CP1
#

echo "01. Update/APPEND E1/T1/A1 in CP1"
echo "================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "A1 in CP1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --host "https://localhost" --url /v1/updateContext --payload "$payload" --port $CP1_PORT --cacert /tmp/harnessTest.pem
echo
echo


echo "02. Register E1/T1/A1 in CB, provApp: HTTPS CP1"
echo "==============================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string"
      }
    ],
    "providingApplication": "https://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "03. Update/UPDATE E1/T1/A1"
echo "=========================="
payload='{
  "A1": {
      "type": "string",
      "value": "A1 via CB"
  }
}'
orionCurl --url /v2/entities/E1/attrs?type=T1 --payload "$payload" -X PATCH
echo
echo


echo "04. Query E1/T1/A1 in CB"
echo "========================"
payload='{
  "entities": [
    {
      "id":   "E1",
      "type": "T1"
    }
  ],
  "attributes": [
    "A1"
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


echo "05. Query E1/T1/A1 in CP1"
echo "========================="
payload='{
  "entities": [
    {
      "id":   "E1",
      "type": "T1"
    }
  ],
  "attributes": [
    "A1"
  ]
}'
orionCurl --host "https://localhost" --url /v1/queryContext --port $CP1_PORT --payload "$payload" --cacert /tmp/harnessTest.pem
echo
echo


--REGEXPECT--
01. Update/APPEND E1/T1/A1 in CP1
=================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


02. Register E1/T1/A1 in CB, provApp: HTTPS CP1
===============================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


03. Update/UPDATE E1/T1/A1
==========================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Query E1/T1/A1 in CB
========================
HTTP/1.1 200 OK
Content-Length: 198
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "A1 via CB"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. Query E1/T1/A1 in CP1
=========================
HTTP/1.1 200 OK
Content-Length: 198
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "A1 via CB"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
