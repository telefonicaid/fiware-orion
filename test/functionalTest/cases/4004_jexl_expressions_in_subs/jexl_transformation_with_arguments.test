# Copyright 2024 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh
# JEXL_EXPR_FLAVOUR - to mark the test has to execute only when contextBroker includes jexl-expr flavour

--NAME--
JEXL expression in custom notification (using transformation with arguments)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create custom sub with custom expression included: S|includes(R)
# 02. Create entity E1 with S=a given string, R=given
# 03. Update entity E1 with S=anotherstring, R=strong
# 04. Update entity E1 with S=morestringarecoming, R=string
# 05. Dump accumulator and see notifications (included: true, included: false, include: true)
#


echo "01. Create custom sub with custom expression included: S|includes(R)"
echo "===================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1",
        "type": "T"
      }
    ]
  },
  "notification": {
    "httpCustom": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "ngsi": {
        "includes": {
          "value": "${S|includes(R)}",
          "type": "Boolean"
        }
      }      
    },
    "attrs": [ "includes" ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E1 with S=a given string, R=given"
echo "==================================================="
payload='{
  "id": "E1",
  "type": "T",
  "S": {
    "value": "a given string",
    "type": "Text"
  },
  "R": {
    "value": "given",
    "type": "Text"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Update entity E1 with S=anotherstring, R=strong"
echo "==================================================="
payload='{
  "S": {
    "value": "anotherstring",
    "type": "Text"
  },
  "R": {
    "value": "strong",
    "type": "Text"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "04. Update entity E1 with S=morestringarecoming, R=string"
echo "========================================================="
payload='{
  "S": {
    "value": "morestringarecoming",
    "type": "Text"
  },
  "R": {
    "value": "string",
    "type": "Text"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "05. Dump accumulator and see notifications (included: true, included: false, include: true)"
echo "==========================================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create custom sub with custom expression included: S|includes(R)
====================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity E1 with S=a given string, R=given
===================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



03. Update entity E1 with S=anotherstring, R=strong
===================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. Update entity E1 with S=morestringarecoming, R=string
=========================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Dump accumulator and see notifications (included: true, included: false, include: true)
===========================================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 134
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "id": "E1",
            "includes": {
                "metadata": {},
                "type": "Boolean",
                "value": true
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 135
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "id": "E1",
            "includes": {
                "metadata": {},
                "type": "Boolean",
                "value": false
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 134
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "id": "E1",
            "includes": {
                "metadata": {},
                "type": "Boolean",
                "value": true
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
