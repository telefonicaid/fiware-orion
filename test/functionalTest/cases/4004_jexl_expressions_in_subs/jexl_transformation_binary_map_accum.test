# Copyright 2024 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh
# JEXL_EXPR_FLAVOUR - to mark the test has to execute only when contextBroker includes jexl-expr flavour

--NAME--
JEXL basic expression in custom notification (binary map accumulation)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create custom sub with several attributes with transformations
# 02. Create entity E1
# 03. Update entity E1
# 05. Dump accumulator and see two expected notifications
#


echo "01. Create custom sub with several attributes with transformations"
echo "=================================================================="
# NOTE: '\'' is the way of scaping a ' in the payload variable below (see https://stackoverflow.com/a/1250279/1485926)
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1",
        "type": "T"
      }
    ]
  },
  "notification": {
    "httpCustom": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "ngsi": {
        "occupied": {
          "value": "${slots|values|arrSum}",
          "type": "Calculated"
        },
        "free": {
          "value": "${(slots|values|len)-(slots|values|arrSum)}",
          "type": "Calculated"
        }
      }
    },
    "attrs": [ "free", "occupied" ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E1"
echo "===================="
payload='{
  "id": "E1",
  "type": "T",
  "slots": {
    "value": {
      "s1": 0,
      "s2": 1,
      "s3": 0,
      "s4": 1,
      "s5": 0
    },
    "type": "Text"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Update entity E1"
echo "===================="
payload='{
  "slots": {
    "value": {
      "s1": 0,
      "s2": 1,
      "s3": 1,
      "s4": 1,
      "s5": 0
    },
    "type": "Text"
  }
}'
orionCurl --url /v2/entities/E1/attrs -X PATCH --payload "$payload"
echo
echo


echo "05. Dump accumulator and see two expected notifications"
echo "======================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create custom sub with several attributes with transformations
==================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity E1
====================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



03. Update entity E1
====================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Dump accumulator and see two expected notifications
=======================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 187
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "free": {
                "metadata": {},
                "type": "Calculated",
                "value": 3
            },
            "id": "E1",
            "occupied": {
                "metadata": {},
                "type": "Calculated",
                "value": 2
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 187
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "free": {
                "metadata": {},
                "type": "Calculated",
                "value": 2
            },
            "id": "E1",
            "occupied": {
                "metadata": {},
                "type": "Calculated",
                "value": 3
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
