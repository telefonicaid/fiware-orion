# Copyright 2023 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notification with retain true (mqtt variant)

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

# To avoid an existing hanged accumulator due to a previous test could interfere
accumulatorStop

--SHELL--

#
# 01. Create subscription with retain true
# 02. Create entity so notification is sent to MQTT broker
# 03. Connect accumulator-server as MQTT client to the notification topic
# 04. Update entity to sent a second notification
# 05. Dump accumular and check two notifications arrived
#


echo "01. Create subscription with retain true"
echo "========================================"
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : ".*",
        "type": "T"
      }
    ]
  },
  "notification": {
    "mqtt": {
      "url": "mqtt://localhost:1883",
      "topic": "orion/retain",
      "retain": true
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity so notification is sent to MQTT broker"
echo "========================================================"
payload='{
   "id": "E",
   "type": "T",
   "A": {
     "value": 1,
     "type": "Number"
   }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Connect accumulator-server as MQTT client to the notification topic"
echo "======================================================================="
accumulatorStart --pretty-print --mqttHost ${MQTT_HOST} --mqttPort ${MQTT_PORT} --mqttTopic "orion/retain"
echo
echo


echo "04. Update entity to sent a second notification"
echo "==============================================="
payload='{
   "A": {
     "value": 2,
     "type": "Number"
   }
}'
orionCurl --url /v2/entities/E/attrs --payload "$payload"
echo
echo


echo "05. Dump accumular and check two notifications arrived"
echo "======================================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription with retain true
========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity so notification is sent to MQTT broker
========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E?type=T
Content-Length: 0



03. Connect accumulator-server as MQTT client to the notification topic
=======================================================================
accumulator running as PID REGEX(\d+)


04. Update entity to sent a second notification
===============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Dump accumular and check two notifications arrived
======================================================
MQTT message at topic orion/retain:
{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Number",
                "value": 1
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
MQTT message at topic orion/retain:
{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Number",
                "value": 2
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
