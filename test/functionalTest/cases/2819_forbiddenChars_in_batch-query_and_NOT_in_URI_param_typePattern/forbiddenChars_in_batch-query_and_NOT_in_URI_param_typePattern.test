# Copyright 2017 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Quotes in LHS of String Filters

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. GET /v2/entities  with forbidden chars '<>=;' in URI param typePattern, see it work (no matches though)
# 02. POST /v2/op/query with forbidden chars '<>=;' in entity::id, see it fail due to forbidden chars
# 03. POST /v2/op/query with forbidden chars '<>=;' in entity::type, see it fail due to forbidden chars
# 04. POST /v2/op/query with forbidden chars '<>=;' in entity::idPattern, see it work (no matches though)
# 05. POST /v2/op/query with forbidden chars '<>=;' in entity::typePattern, see it work (no matches though)
#

echo "01. GET /v2/entities with forbidden chars '<>=;' in URI param typePattern, see it work (no matches though)"
echo "=========================================================================================================="
orionCurl --url '/v2/entities?typePattern=<>=;'
echo
echo


echo "02. POST /v2/op/query with forbidden chars '<>=;' in entity::id, see it fail due to forbidden chars"
echo "==================================================================================================="
payload='{
  "entities": [
    {
      "id": "<>=;"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "03. POST /v2/op/query with forbidden chars '<>=;' in entity::type, see it fail due to forbidden chars"
echo "====================================================================================================="
payload='{
  "entities": [
    {
      "id": "E",
      "type": "<>=;"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "04. POST /v2/op/query with forbidden chars '<>=;' in entity::idPattern, see it work (no matches though)"
echo "======================================================================================================="
payload='{
  "entities": [
    {
      "idPattern": "<>=;"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "05. POST /v2/op/query with forbidden chars '<>=;' in entity::typePattern, see it work (no matches though)"
echo "========================================================================================================="
payload='{
  "entities": [
    {
      "id": "E",
      "typePattern": "<>=;"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


--REGEXPECT--
01. GET /v2/entities with forbidden chars '<>=;' in URI param typePattern, see it work (no matches though)
==========================================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


02. POST /v2/op/query with forbidden chars '<>=;' in entity::id, see it fail due to forbidden chars
===================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 70

{
    "description": "Invalid characters in entity id",
    "error": "BadRequest"
}


03. POST /v2/op/query with forbidden chars '<>=;' in entity::type, see it fail due to forbidden chars
=====================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 72

{
    "description": "Invalid characters in entity type",
    "error": "BadRequest"
}


04. POST /v2/op/query with forbidden chars '<>=;' in entity::idPattern, see it work (no matches though)
=======================================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


05. POST /v2/op/query with forbidden chars '<>=;' in entity::typePattern, see it work (no matches though)
=========================================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
