# Copyright 2023 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Disable NGSIv1 CLI

--SHELL-INIT--
dbInit CB
brokerStart CB 0 IPV4 -logDeprecate

--SHELL--

#
# 01. Query E1-T1
# 02. GET /v1/contextEntities/E
# 03. Create entity using NGSIv1 metadata location
# 04. Create entity using NGSIv1 and geo:point
# 05. Create entity using NGSIv2 and geo:point
# 06. Get WARNING trace in logs
#

echo "01. Query E1-T1"
echo "==============="
payload='{
  "entities": [
    {
      "type": "T1",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}"
echo
echo


echo "02. GET /v1/contextEntities/E/attributes/A"
echo "=========================================="
orionCurl --url /v1/contextEntities/E/attributes/A
echo
echo


echo "03. Create entity using NGSIv1 metadata location"
echo "================================================"
payload='{
  "contextElements": [
  {
    "type": "City",
    "isPattern": "false",
    "id": "Madrid",
    "attributes": [
    {
      "name": "location",
      "type": "coords",
      "value": "40.418889, -3.691944",
      "metadatas": [
        {
          "name": "location",
          "type": "string",
          "value": "WSG84"
        }
      ]
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "04. Create entity using NGSIv1 and geo:point"
echo "============================================"
payload='{
  "contextElements": [
  {
    "type": "City",
    "isPattern": "false",
    "id": "Barcelona",
    "attributes": [
    {
      "name": "location",
      "type": "geo:point",
      "value": "40.418889, -3.691944"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "05. Create entity using NGSIv2 and geo:point"
echo "============================================"
payload='{
  "id": "Sevilla",
  "type": "City",
  "location": {
      "type": "geo:point",
      "value": "40.418889, -3.691944"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "06. Get WARNING trace in logs"
echo "============================="
cat /tmp/contextBroker.log | grep 'WARN' | awk -F 'msg=' '{print $2}'
echo
echo


--REGEXPECT--
01. Query E1-T1
===============
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 70

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


02. GET /v1/contextEntities/E/attributes/A
==========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 98

{
    "statusCode": {
        "code": "404",
        "details": "Entity id: /E/",
        "reasonPhrase": "No context element found"
    }
}


03. Create entity using NGSIv1 metadata location
================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 267

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "location",
                                "type": "string",
                                "value": "WSG84"
                            }
                        ],
                        "name": "location",
                        "type": "coords",
                        "value": ""
                    }
                ],
                "id": "Madrid",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. Create entity using NGSIv1 and geo:point
============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 207

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": ""
                    }
                ],
                "id": "Barcelona",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. Create entity using NGSIv2 and geo:point
============================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/Sevilla?type=City
Content-Length: 0



06. Get WARNING trace in logs
=============================
Deprecated NGSIv1 request received: POST /v1/queryContext, request payload (48 bytes): { "entities": [ { "type": "T1", "id": "E1" } ] }, response code: 200
Deprecated NGSIv1 request received: GET /v1/contextEntities/E/attributes/A, response code: 200
Deprecated usage of metadata location coords detected in attribute location at entity update, please use geo:json instead
Deprecated NGSIv1 request received: POST /v1/updateContext, request payload (279 bytes): { "contextElements": [ { "type": "City", "isPattern": "false", "id": "Madrid", "attributes": [ { "name": "location", "type": "coords", "value": "40.418889, -3.691944", "metadatas": [ { "name": "location", "type": "string", "value": "WSG84" } ] } ] } ], "updateAction": "APPEND" }, response code: 200
Deprecated usage of geo:point detected in attribute location at entity update, please use geo:json instead
Deprecated NGSIv1 request received: POST /v1/updateContext, request payload (208 bytes): { "contextElements": [ { "type": "City", "isPattern": "false", "id": "Barcelona", "attributes": [ { "name": "location", "type": "geo:point", "value": "40.418889, -3.691944" } ] } ], "updateAction": "APPEND" }, response code: 200
Deprecated usage of geo:point detected in attribute location at entity update, please use geo:json instead


--TEARDOWN--
brokerStop CB
dbDrop CB
