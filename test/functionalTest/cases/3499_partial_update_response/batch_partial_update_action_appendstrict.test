# Copyright 2023 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
PartialUpdate response for appendStrict case in batch operation

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity E-A=1
# 02. POST /v2/op/update appendStrict E A=10, B=20, C=30, get error about already existing attribute A
# 03. Get E, check A=1, B=20, C=30
# 04. POST /v2/op/update appendStrict E D=400 B=200, get error about about already existing attribute B
# 05. Get E, check A=1, B=20, C=30, D=400
#

echo "01. Create entity E-A=1"
echo "======================="
payload='{
  "actionType": "appendStrict",
  "entities":
  [
    {
      "type": "T",
      "id":   "E",
      "A": {
         "value": 1,
         "type": "Number"
      }
    }
  ]
}'
orionCurl --url /v2/op/update --payload "$payload"
echo
echo


echo "02. POST /v2/op/update appendStrict E A=10, B=20, C=30, get error about already existing attribute A"
echo "===================================================================================================="
payload='{
  "actionType": "appendStrict",
  "entities":
  [
    {
      "type": "T",
      "id":   "E",
      "A": {
         "value": 10,
         "type": "Number"
      },
      "B": {
         "value": 20,
         "type": "Number"
      },
      "C": {
         "value": 30,
         "type": "Number"
      }
    }
  ]
}'
orionCurl --url /v2/op/update --payload "$payload"
echo
echo


echo "03. Get E, check A=1, B=20, C=30"
echo "================================"
orionCurl --url /v2/entities/E
echo
echo


echo "04. POST /v2/op/update appendStrict E D=400 B=200, get error about about already existing attribute B"
echo "====================================================================================================="
payload='{
  "actionType": "appendStrict",
  "entities":
  [
    {
      "type": "T",
      "id":   "E",
      "D": {
         "value": 400,
         "type": "Number"
      },
      "B": {
         "value": 200,
         "type": "Number"
      }
    }
  ]
}'
orionCurl --url /v2/op/update --payload "$payload"
echo
echo


echo "05. Get E, check A=1, B=20, C=30, D=400"
echo "======================================="
orionCurl --url /v2/entities/E
echo
echo


--REGEXPECT--
01. Create entity E-A=1
=======================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



02. POST /v2/op/update appendStrict E A=10, B=20, C=30, get error about already existing attribute A
====================================================================================================
HTTP/1.1 422 Unprocessable Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 113

{
    "description": "one or more of the attributes in the request already exist: E/T - [ A ]",
    "error": "PartialUpdate"
}


03. Get E, check A=1, B=20, C=30
================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 161

{
    "A": {
        "metadata": {},
        "type": "Number",
        "value": 1
    },
    "B": {
        "metadata": {},
        "type": "Number",
        "value": 20
    },
    "C": {
        "metadata": {},
        "type": "Number",
        "value": 30
    },
    "id": "E",
    "type": "T"
}


04. POST /v2/op/update appendStrict E D=400 B=200, get error about about already existing attribute B
=====================================================================================================
HTTP/1.1 422 Unprocessable Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 113

{
    "description": "one or more of the attributes in the request already exist: E/T - [ B ]",
    "error": "PartialUpdate"
}


05. Get E, check A=1, B=20, C=30, D=400
=======================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 209

{
    "A": {
        "metadata": {},
        "type": "Number",
        "value": 1
    },
    "B": {
        "metadata": {},
        "type": "Number",
        "value": 20
    },
    "C": {
        "metadata": {},
        "type": "Number",
        "value": 30
    },
    "D": {
        "metadata": {},
        "type": "Number",
        "value": 400
    },
    "id": "E",
    "type": "T"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
