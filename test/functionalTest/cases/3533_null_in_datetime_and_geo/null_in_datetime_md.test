# Copyright 2021 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Null support in DateTime metadata

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity E1 with attribute A with DateTime metadata T with value 2018-12-03T13:21:42.000Z
# 02. Create entity E2 with attribute A with DateTime metadata T with value null
# 03. Get entities (E1-A-T: 2018-12-03T13:21:42.000Z, E2-A-T: null)
# 04. Update E1-A-T: null
# 05. Update E2-A-T: 2020-10-01T12:43:18.000Z
# 06. Get entities (E1-A-T: null, E2-A-T: 2020-10-01T12:43:18.000Z)
# 07. Update E1-A-T: foo, see error
# 08. Update E2-A-T: bar, see error
#

echo "01. Create entity E1 with attribute A with DateTime metadata T with value 2018-12-03T13:21:42.000Z"
echo "=================================================================================================="
payload='{
  "id": "E1",
  "type": "T",
  "A": {
    "value": 42,
    "type": "Number",
    "metadata": {
      "T": {
        "value": "2018-12-03T13:21:42.000Z",
        "type": "DateTime"
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create entity E2 with attribute A with DateTime metadata T with value null"
echo "=============================================================================="
payload='{
  "id": "E2",
  "type": "T",
  "A": {
    "value": 24,
    "type": "Number",
    "metadata": {
      "T": {
        "value": null,
        "type": "DateTime"
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Get entities (E1-A-T: 2018-12-03T13:21:42.000Z, E2-A-T: null)"
echo "================================================================="
orionCurl --url /v2/entities
echo
echo


echo "04. Update E1-A-T: null"
echo "======================="
payload='{
  "A": {
    "value": 42,
    "type": "Number",
    "metadata": {
      "T": {
        "value": null,
        "type": "DateTime"
      }
    }
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "05. Update E2-A-T: 2020-10-01T12:43:18.000Z"
echo "==========================================="
payload='{
  "A": {
    "value": 24,
    "type": "Number",
    "metadata": {
      "T": {
        "value": "2020-10-01T12:43:18.000Z",
        "type": "DateTime"
      }
    }
  }
}'
orionCurl --url /v2/entities/E2/attrs --payload "$payload"
echo
echo


echo "06. Get entities (E1-A-T: null, E2-A-T: 2020-10-01T12:43:18.000Z)"
echo "================================================================="
orionCurl --url /v2/entities
echo
echo


echo "07. Update E1-A-T: foo, see error"
echo "================================="
payload='{
  "A": {
    "value": 42,
    "type": "Number",
    "metadata": {
      "T": {
        "value": "foo",
        "type": "DateTime"
      }
    }
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "08. Update E2-A-T: bar, see error"
echo "================================="
payload='{
  "A": {
    "value": 24,
    "type": "Number",
    "metadata": {
      "T": {
        "value": "bar",
        "type": "DateTime"
      }
    }
  }
}'
orionCurl --url /v2/entities/E2/attrs --payload "$payload"
echo
echo


--REGEXPECT--
01. Create entity E1 with attribute A with DateTime metadata T with value 2018-12-03T13:21:42.000Z
==================================================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



02. Create entity E2 with attribute A with DateTime metadata T with value null
==============================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T
Content-Length: 0



03. Get entities (E1-A-T: 2018-12-03T13:21:42.000Z, E2-A-T: null)
=================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 235

[
    {
        "A": {
            "metadata": {
                "T": {
                    "type": "DateTime",
                    "value": "2018-12-03T13:21:42.000Z"
                }
            },
            "type": "Number",
            "value": 42
        },
        "id": "E1",
        "type": "T"
    },
    {
        "A": {
            "metadata": {
                "T": {
                    "type": "DateTime",
                    "value": null
                }
            },
            "type": "Number",
            "value": 24
        },
        "id": "E2",
        "type": "T"
    }
]


04. Update E1-A-T: null
=======================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Update E2-A-T: 2020-10-01T12:43:18.000Z
===========================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. Get entities (E1-A-T: null, E2-A-T: 2020-10-01T12:43:18.000Z)
=================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 235

[
    {
        "A": {
            "metadata": {
                "T": {
                    "type": "DateTime",
                    "value": null
                }
            },
            "type": "Number",
            "value": 42
        },
        "id": "E1",
        "type": "T"
    },
    {
        "A": {
            "metadata": {
                "T": {
                    "type": "DateTime",
                    "value": "2020-10-01T12:43:18.000Z"
                }
            },
            "type": "Number",
            "value": 24
        },
        "id": "E2",
        "type": "T"
    }
]


07. Update E1-A-T: foo, see error
=================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 62

{
    "description": "date has invalid format",
    "error": "BadRequest"
}


08. Update E2-A-T: bar, see error
=================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 62

{
    "description": "date has invalid format",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
