# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Restrict chars in name and type attributes

--SHELL-INIT--
dbInit CB
brokerStart CB 0

--SHELL--

#
# 01. POST /v2/entities attr name España
# 02. GET /v2/entities
# 03. POST /v2/entities attr type olé
# 04. GET /v2/entities
# 05. POST /v2/entities attr name A?
# 06. GET /v2/entities
# 07. POST /v2/entities attr type A?
# 08. GET /v2/entities
#

echo "01. POST /v2/entities"
echo "===================="
payload='{
  "id": "E1",
  "type": "T1",
  "España": {
    "value": "06",
    "type":  "AT",
    "metadata": {
      "m1": { "value": "m1"  },
      "m2": { "value": 2     },
      "m3": { "value": false }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. GET /v2/entities/E1"
echo "======================="
orionCurl --url /v2/entities/E1
echo
echo


echo "03. POST /v2/entities attr type olé"
echo "==================================="
payload='{
  "id": "E1",
  "type": "T1",
  "A1": {
    "value": "06",
    "type":  "olé",
    "metadata": {
      "m1": { "value": "m1"  },
      "m2": { "value": 2     },
      "m3": { "value": false }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. GET /v2/entities/E1"
echo "======================="
orionCurl --url /v2/entities/E1
echo
echo


echo "05. POST /v2/entities attr name A?"
echo "=================================="
payload='{
  "id": "E1",
  "type": "T1",
  "A?": {
    "value": "06",
    "type":  "AT1",
    "metadata": {
      "m1": { "value": "m1"  },
      "m2": { "value": 2     },
      "m3": { "value": false }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "06. GET /v2/entities/E1"
echo "======================="
orionCurl --url /v2/entities/E1
echo
echo


echo "07. POST /v2/entities attr type A/"
echo "=================================="
payload='{
  "id": "E1",
  "type": "T1",
  "AX": {
    "value": "06",
    "type":  "A/",
    "metadata": {
      "m1": { "value": "m1"  },
      "m2": { "value": 2     },
      "m3": { "value": false }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "08. GET /v2/entities/E1"
echo "======================="
orionCurl --url /v2/entities/E1
echo
echo


--REGEXPECT--
01. POST /v2/entities
====================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 75

{
    "description": "Invalid characters in attribute name",
    "error": "BadRequest"
}


02. GET /v2/entities/E1
=======================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


03. POST /v2/entities attr type olé
===================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 75

{
    "description": "Invalid characters in attribute type",
    "error": "BadRequest"
}


04. GET /v2/entities/E1
=======================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


05. POST /v2/entities attr name A?
==================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 75

{
    "description": "Invalid characters in attribute name",
    "error": "BadRequest"
}


06. GET /v2/entities/E1
=======================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


07. POST /v2/entities attr type A/
==================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 75

{
    "description": "Invalid characters in attribute type",
    "error": "BadRequest"
}


08. GET /v2/entities/E1
=======================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
