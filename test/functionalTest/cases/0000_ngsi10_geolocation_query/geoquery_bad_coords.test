# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Geo query with invalid coordinates

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

echo "1: +++++++++ Update/Append +++++++++++"
url="/v1/updateContext"
payload='{
  "contextElements": [
  {
    "type": "City",
    "isPattern": "false",
    "id": "Long200Lat100",
    "attributes": [
    {
      "name": "location",
      "type": "geo:point",
      "value": "200, 100"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "$payload"
echo
echo

echo "2: ++++++++++ OK Query ++++++++++"
# query according to issue #461
url=/v1/queryContext
payload='{
  "entities": [
    {
      "type": "Point",
      "isPattern": "true",
      "id": ".*"
    }
  ],
  "restriction": {
    "scopes": [
      {
        "type" : "FIWARE::Location",
        "value" : {
          "polygon": {
            "vertices": [
                          { "latitude" : 2.811371193331,  "longitude" : 130.078061      },
                          { "latitude" : 13.031027211328, "longitude" : 130.078061      },
                          { "latitude" : 13.031027211328, "longitude" : 140.24472766667 },
                          { "latitude" : 2.811371193331,  "longitude" : 140.24472766667 }
            ]
          }
        }
      }
    ]
  }
}'

orionCurl --url "$url" --payload "${payload}"
echo
echo

echo "3: ++++++++++ Query with invalid latitude ++++++++++"
url=/v1/queryContext
payload='{
  "entities": [
    {
      "type": "Point",
      "isPattern": "true",
      "id": ".*"
    }
  ],
  "restriction": {
    "scopes": [
      {
        "type" : "FIWARE::Location",
        "value" : {
          "polygon": {
            "vertices": [
                          { "latitude" : 92.811371193331, "longitude" : 130.078061      },
                          { "latitude" : 13.031027211328, "longitude" : 130.078061      },
                          { "latitude" : 13.031027211328, "longitude" : 140.24472766667 },
                          { "latitude" : 2.811371193331,  "longitude" : 140.24472766667 }
            ]
          }
        }
      }
    ]
  }
}'

orionCurl --url "$url" --payload "${payload}"
echo
echo


echo "4: ++++++++++ Query with invalid longitude ++++++++++"
url=/v1/queryContext
payload='{
  "entities": [
    {
      "type": "Point",
      "isPattern": "true",
      "id": ".*"
    }
  ],
  "restriction": {
    "scopes": [
      {
        "type" : "FIWARE::Location",
        "value" : {
          "polygon": {
            "vertices": [
                          { "latitude" : 12.811371193331, "longitude" : 130.078061      },
                          { "latitude" : 13.031027211328, "longitude" : 130.078061      },
                          { "latitude" : 13.031027211328, "longitude" : 240.24472766667 },
                          { "latitude" : 2.811371193331,  "longitude" : 140.24472766667 }
            ]
          }
        }
      }
    ]
  }
}'

orionCurl --url "$url" --payload "${payload}"
echo
echo


--REGEXPECT--
1: +++++++++ Update/Append +++++++++++
HTTP/1.1 200 OK
Content-Length: 324
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": ""
                    }
                ],
                "id": "Long200Lat100",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "472",
                "details": "geo coordinates format error [see Orion user manual]: 200, 100",
                "reasonPhrase": "request parameter is invalid/not allowed"
            }
        }
    ]
}


2: ++++++++++ OK Query ++++++++++
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


3: ++++++++++ Query with invalid latitude ++++++++++
HTTP/1.1 200 OK
Content-Length: 96
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "invalid value for latitude",
        "reasonPhrase": "Bad Request"
    }
}


4: ++++++++++ Query with invalid longitude ++++++++++
HTTP/1.1 200 OK
Content-Length: 97
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "invalid value for longitude",
        "reasonPhrase": "Bad Request"
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
