# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Query context response 404 doesn't hidden structured local attribute

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create entity E (local)
# 02. Register CPr which does not response correctly
# 03. Query for entity, get example_attr correctly
#

echo "01. Create entity E (local)"
echo "==========================="
payload='{
  "type": "TestType",
  "id":   "sensor001",
  "status": {
    "type": "Text",
    "value": " "
  },
  "name": {
    "type": "Text",
    "value": "Sensor 001"
  },
  "ping_status": {
    "type": "commandStatus",
    "value": "UNKNOWN"
  },
  "ping_info": {
    "type": "commandResult",
    "value": " "
  },
  "example_attr": {
    "type": "StructuredValue",
    "value": {
      "exampleField": "exampleValue"
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Register CPr which does not response correctly"
echo "=================================================="
payload='{
  "dataProvided": {
    "entities": [
      {
        "id": "sensor001",
        "type": "TestType"
      }
    ],
    "attrs": [
      "ping"
    ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${LISTENER_PORT}'/badresponse"
    },
    "legacyForwarding": true
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "03. Query for entity, get example_attr correctly"
echo "================================================"
orionCurl --url /v2/entities/sensor001
echo
echo


--REGEXPECT--
01. Create entity E (local)
===========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/sensor001?type=TestType
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Register CPr which does not response correctly
==================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Query for entity, get example_attr correctly
================================================
HTTP/1.1 200 OK
Content-Length: 375
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "example_attr": {
        "metadata": {},
        "type": "StructuredValue",
        "value": {
            "exampleField": "exampleValue"
        }
    },
    "id": "sensor001",
    "name": {
        "metadata": {},
        "type": "Text",
        "value": "Sensor 001"
    },
    "ping_info": {
        "metadata": {},
        "type": "commandResult",
        "value": " "
    },
    "ping_status": {
        "metadata": {},
        "type": "commandStatus",
        "value": "UNKNOWN"
    },
    "status": {
        "metadata": {},
        "type": "Text",
        "value": " "
    },
    "type": "TestType"
}


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
