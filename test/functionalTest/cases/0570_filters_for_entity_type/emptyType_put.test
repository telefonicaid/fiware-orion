# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
PUT /v1/ Individual Entities with !exist=type

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 1. Create entity E1, without type and with attribute A=222
# 2. Create entity E1, with type T1 and with attribute A=22
# 3. Update attribute E1/<empty> A=000
# 4. Lookup E1/<empty> to check A=000
# 5. Lookup E1/T1 to check A=22 (not touched)
#
# NOTE
# We have to start with the creation of the entity with type == <empty>
# because if there already exists an entity with the same ID, the updateContext
# with empty type will match that entity and do an UPDATE of that entity instead
# of creating a new entity with empty type. This is how the broker works.
#

echo "1. Create entity E1, without type and with attribute A=222"
echo "======================================================="
payload='{
  "contextElements": [
    {
      "id": "E1",
      "type": "",

      "attributes": [
        {
          "name": "A",
          "type": "T",
          "value": "222"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "2. Create entity E1, with type T1 and with attribute A=22"
echo "======================================================"
payload='{
  "contextElements": [
    {
      "id": "E1",
      "type": "T1",
      "attributes": [
        {
          "name": "A",
          "type": "T",
          "value": "22"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "3. Update attribute E1/<empty> A=000"
echo "==================================================================="
payload='{
  "attributes" : [
    {
      "name" : "A",
      "type" : "T",
      "value" : "000"
    }
  ]
}'
orionCurl --url '/v1/contextEntities/E1?!exist=entity::type' --payload "$payload" -X PUT
echo
echo


echo "4. Lookup E1/<empty> to check A=000"
echo "========================================================================="
orionCurl --url '/v1/contextEntities/E1?!exist=entity::type'
echo
echo


echo "5. Lookup E1/T1 to check A=22 (not touched)"
echo "========================================================================="
orionCurl --url '/v1/contextEntities/E1?exist=entity::type'
echo
echo

--REGEXPECT--
1. Create entity E1, without type and with attribute A=222
=======================================================
HTTP/1.1 200 OK
Content-Length: 181
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "T",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": ""
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


2. Create entity E1, with type T1 and with attribute A=22
======================================================
HTTP/1.1 200 OK
Content-Length: 183
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "T",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


3. Update attribute E1/<empty> A=000
===================================================================
HTTP/1.1 200 OK
Content-Length: 122
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "T",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


4. Lookup E1/<empty> to check A=000
=========================================================================
HTTP/1.1 200 OK
Content-Length: 161
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A",
                "type": "T",
                "value": "000"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": ""
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


5. Lookup E1/T1 to check A=22 (not touched)
=========================================================================
HTTP/1.1 200 OK
Content-Length: 162
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A",
                "type": "T",
                "value": "22"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
