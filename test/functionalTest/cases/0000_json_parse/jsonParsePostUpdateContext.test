# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
JSON Parse Post UpdateContext

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: ***********************************"

url="/v1/updateContext"
payload='{
  "contextElements": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom",
      "attributes": [
        {
          "name": "temperature",
          "type": "degree",
          "value": "20",
          "metadatas": [
            {
              "name": "attributeValueIdentifier",
              "type": "long",
              "value": "1"
            },
            {
              "name": "attributeValueIdentifier",
              "type": "long",
              "value": "2"
            },
            {
              "name": "attributeValueIdentifier",
              "type": "long",
              "value": "3"
            }
          ]
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url ${url} --payload "${payload}"

echo "2: ***********************************"

url="/v1/registry/registerContext"
payload='{
  "contextRegistrations": [
    {
      "entities": [
        {
          "type": "Room",
          "isPattern": "false",
          "id": "ConferenceRoom"
        },
        {
          "type": "Room",
          "isPattern": "false",
          "id": "OfficeRoom"
        }
      ],
      "attributes": [
        {
          "name": "temperature",
          "type": "degree"
        }
      ],
      "providingApplication": "http://192.168.100.1:70/application"
    }
  ],
  "duration": "PT1M"
}'
orionCurl --url ${url} --payload "${payload}"

echo "3: ***********************************"
url="/v1/updateContext"
payload='{
  "contextElements": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom",
      "attributes": [
        {
          "name": "temperature",
          "type": "degree",
          "value": "20",
          "metadatas": [
            {
              "name": "attributeValueIdentifier",
              "type": "long",
              "value": "1"
            },
            {
              "name": "attributeValueIdentifier",
              "type": "long",
              "value": "2"
            },
            {
              "name": "attributeValueIdentifier",
              "type": "long",
              "value": "3"
            }
          ]
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url ${url} --payload "${payload}"

echo "4: ***********************************"
--REGEXPECT--
1: ***********************************
HTTP/1.1 200 OK
Content-Length: 412
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "attributeValueIdentifier",
                                "type": "long",
                                "value": "1"
                            },
                            {
                                "name": "attributeValueIdentifier",
                                "type": "long",
                                "value": "2"
                            },
                            {
                                "name": "attributeValueIdentifier",
                                "type": "long",
                                "value": "3"
                            }
                        ],
                        "name": "temperature",
                        "type": "degree",
                        "value": ""
                    }
                ],
                "id": "ConferenceRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
2: ***********************************
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}
3: ***********************************
HTTP/1.1 200 OK
Content-Length: 412
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "attributeValueIdentifier",
                                "type": "long",
                                "value": "1"
                            },
                            {
                                "name": "attributeValueIdentifier",
                                "type": "long",
                                "value": "2"
                            },
                            {
                                "name": "attributeValueIdentifier",
                                "type": "long",
                                "value": "3"
                            }
                        ],
                        "name": "temperature",
                        "type": "degree",
                        "value": ""
                    }
                ],
                "id": "ConferenceRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
4: ***********************************
--TEARDOWN--
brokerStop CB
dbDrop CB
