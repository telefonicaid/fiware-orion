# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
JSON Parse IndividualContextEntity

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: ++++++++ GET that fails +++++++++++++++++++++"
orionCurl --url "/v1/contextEntities/ENTITY_ID"

echo "2: ++++++++ DELETE that fails +++++++++++++++++++++"
orionCurl --url "/v1/contextEntities/ENTITY_ID" -X "DELETE"

echo "3: ++++++++ POST that is OK ++++++++++++++++++++"
url="/v1/contextEntities/ENTITY_ID"
payload='{
  "attributes" : [
    {
      "name" : "pressure",
      "type" : "clima",
      "value" : "p23"
    }
  ]
}'
orionCurl --url ${url} --payload "${payload}"

echo "4: +++++++++ PUT that fails +++++++++++++++++++"
url="/v1/contextEntities/ENTITY_ID"
payload='{
  "attributes" : [
    {
      "name" : "temperature",
      "type" : "degree",
      "value" : "10"
    }
  ]
}'
orionCurl --url ${url} --payload "${payload}" -X "PUT"

echo "5: +++++++++ Register an entity +++++++++++++++++"
url="/v1/registry/registerContext"
payload='{
    "contextRegistrations": [
        {
            "entities": [
                {
                    "type": "Room",
                    "isPattern": "false",
                    "id": "ENTITY_ID"
                }
            ],
            "attributes": [
                {
                    "name": "temperature",
                    "type": "degree"
                }
            ],
            "providingApplication": "http://localhost:1028/application"
        }
    ],
    "duration": "PT1H"
}'
orionCurl --url ${url} --payload "${payload}"

echo "6: ++++++++++++ GET that is OK +++++++++++++++++"
orionCurl --url "/v1/contextEntities/ENTITY_ID"

echo "7: +++++++++++++ PUT that is OK ++++++++++++++++"
url="/v1/contextEntities/ENTITY_ID"
payload='{
  "attributes" : [
    {
      "name" : "pressure",
      "type" : "clima",
      "value" : "p40"
    }
  ]
}'
orionCurl --url ${url} --payload "${payload}" -X "PUT"

echo "8: ++++++++++++++ DELETE that is OK +++++++++++++++"
orionCurl --url "/v1/contextEntities/ENTITY_ID" -X "DELETE"

--REGEXPECT--
1: ++++++++ GET that fails +++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 172
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "id": "ENTITY_ID",
        "isPattern": "false",
        "type": ""
    },
    "statusCode": {
        "code": "404",
        "details": "Entity id: /ENTITY_ID/",
        "reasonPhrase": "No context element found"
    }
}
2: ++++++++ DELETE that fails +++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 78
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "404",
    "details": "ENTITY_ID",
    "reasonPhrase": "No context element found"
}
3: ++++++++ POST that is OK ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 180
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "pressure",
                    "type": "clima",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "ENTITY_ID",
    "isPattern": "false",
    "type": ""
}
4: +++++++++ PUT that fails +++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 172
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "472",
        "details": "action: UPDATE - entity: [ENTITY_ID, ] - offending attribute: temperature",
        "reasonPhrase": "request parameter is invalid/not allowed"
    }
}
5: +++++++++ Register an entity +++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1H",
    "registrationId": "REGEX([0-9a-f]{24})"
}
6: ++++++++++++ GET that is OK +++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 179
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "pressure",
                "type": "clima",
                "value": "p23"
            }
        ],
        "id": "ENTITY_ID",
        "isPattern": "false",
        "type": ""
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
7: +++++++++++++ PUT that is OK ++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 133
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "pressure",
                    "type": "clima",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
8: ++++++++++++++ DELETE that is OK +++++++++++++++
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}
--TEARDOWN--
brokerStop CB
dbDrop CB
