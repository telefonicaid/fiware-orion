# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
JSON Parse Post UpdateContextAvailabilitySubscription

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: ***********************************"
url="/v1/registry/updateContextAvailabilitySubscription"
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom"
    },
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom"
    }
  ],
  "attributes": [
    "temperature",
    "occupancy",
    "lightstatus"
  ],
  "duration": "PT1M",
  "restriction": {
    "attributeExpression" : "AE",
    "scopes": [
      {
        "type" : "st1",
        "value" : "1"
      },
      {
        "type" : "st2",
        "value" : "2"
      }
    ]
  },
  "subscriptionId" : "012345678901234567890123"
}'
orionCurl --url ${url} --payload "${payload}"

echo "2: ***********************************"

url="/v1/registry/subscribeContextAvailability"
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom"
    },
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom"
    }
  ],
  "attributes": [
    "temperature",
    "occupancy",
    "lightstatus"
  ],
  "reference": "http://10.1.1.1:80/test/interfaceNotification",
  "duration": "PT1M",
  "restriction" : {
    "attributeExpression" : "ATTR_EXPR",
    "scopes" : [
      {
        "value" : "sv1",
        "type"  : "st1"
      },
      {
        "value" : "sv2",
        "type"  : "st2"
      }
    ]
  }
}'
orionCurl --url ${url} --payload "${payload}"

SUB_ID=$(echo "$_response" | grep subscriptionId | awk -F\" '{ print $4}')

echo "3: ***********************************"

url="/v1/registry/updateContextAvailabilitySubscription"
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom"
    },
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom"
    }
  ],
  "attributes": [
    "temperature",
    "occupancy",
    "lightstatus"
  ],
  "duration": "PT1S",
  "restriction": {
    "attributeExpression" : "AE",
    "scopes": [
      {
        "type" : "st1",
        "value" : "1"
      },
      {
        "type" : "st2",
        "value" : "2"
      }
    ]
  },
  "subscriptionId" : "'${SUB_ID}'"
}'

orionCurl --url ${url} --payload "${payload}"

echo "4: ***********************************"
--REGEXPECT--
1: ***********************************
HTTP/1.1 200 OK
Content-Length: 114
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    },
    "subscriptionId": "012345678901234567890123"
}
2: ***********************************
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1M",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
3: ***********************************
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1S",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
4: ***********************************
--TEARDOWN--
brokerStop CB
dbDrop CB
