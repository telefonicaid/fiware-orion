# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
POST /v2/entities with key-values

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. POST /v2/entities, creating E1
# 02. POST /v2/entities/E1?options=keyValues, adding A1 to E1
# 03. GET /v2/entities/E1
# 04. POST /v2/entities/E1?options=keyValues, adding A2 to E1
# 05. GET /v2/entities/E1?options=keyValues
# 06. PUT /v2/entities/E1?options=keyValues, replacing A1+A2 with A3
# 07. GET /v2/entities/E1?options=keyValues
# 08. POST /v2/entities/E1?options=keyValues, adding A4 to E1
# 09. GET /v2/entities/E1?options=keyValues
# 10. PATCH /v2/entities/E1, setting A4 to 10
# 11. GET /v2/entities/E1, to see A4 == 10
# 12. POST /v2/entities, creating one more E1, different type
# 13. GET /v2/entities/E1?options=keyValues
#

echo "01. POST /v2/entities, creating E1"
echo "=================================="
payload='{
  "id": "E1",
  "type": "T1"
}'
orionCurl --url /v2/entities  --payload "$payload"
echo
echo


echo "02. POST /v2/entities/E1/attrs?options=keyValues, adding A1 to E1"
echo "================================================================="
payload='{
  "A1": 1
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues'  --payload "$payload"
echo
echo


echo "03. GET /v2/entities/E1"
echo "======================="
orionCurl --url /v2/entities/E1
echo
echo


echo "04. POST /v2/entities/E1/attrs?options=keyValues, adding A2 to E1"
echo "================================================================="
payload='{
  "A2": 2
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues'  --payload "$payload"
echo
echo


echo "05. GET /v2/entities/E1?options=keyValues"
echo "========================================="
orionCurl --url '/v2/entities/E1?options=keyValues'
echo
echo


echo "06. PUT /v2/entities/E1/attrs?options=keyValues, replacing A1+A2 with A3"
echo "========================================================================"
payload='{
  "A3": 3
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues'  --payload "$payload" -X PUT
echo
echo


echo "07. GET /v2/entities/E1?options=keyValues"
echo "========================================="
orionCurl --url '/v2/entities/E1?options=keyValues'
echo
echo


echo "08. POST /v2/entities/E1/attrs?options=keyValues, adding A4 to E1"
echo "================================================================="
payload='{
  "A4": 4
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues'  --payload "$payload" -X POST
echo
echo


echo "09. GET /v2/entities/E1?options=keyValues"
echo "========================================="
orionCurl --url '/v2/entities/E1?options=keyValues'
echo
echo


echo "10. PATCH /v2/entities/E1/attrs, setting A4 to 10"
echo "================================================="
payload='{
  "A4": 10
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues'  --payload "$payload" -X PATCH
echo
echo


echo "11. GET /v2/entities/E1, to see A4 == 10"
echo "========================================"
orionCurl --url '/v2/entities/E1?options=keyValues'
echo
echo


echo "12. POST /v2/entities, creating one more E1, different type"
echo "==========================================================="
payload='{
  "id": "E1",
  "type": "T2"
}'
orionCurl --url /v2/entities  --payload "$payload"
echo
echo


echo "13. GET /v2/entities/E1?options=keyValues"
echo "========================================="
orionCurl --url '/v2/entities/E1?options=keyValues'
echo
echo


--REGEXPECT--
01. POST /v2/entities, creating E1
==================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T1
Content-Length: 0



02. POST /v2/entities/E1/attrs?options=keyValues, adding A1 to E1
=================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



03. GET /v2/entities/E1
=======================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 70

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": 1
    },
    "id": "E1",
    "type": "T1"
}


04. POST /v2/entities/E1/attrs?options=keyValues, adding A2 to E1
=================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. GET /v2/entities/E1?options=keyValues
=========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 37

{
    "A1": 1,
    "A2": 2,
    "id": "E1",
    "type": "T1"
}


06. PUT /v2/entities/E1/attrs?options=keyValues, replacing A1+A2 with A3
========================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



07. GET /v2/entities/E1?options=keyValues
=========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 30

{
    "A3": 3,
    "id": "E1",
    "type": "T1"
}


08. POST /v2/entities/E1/attrs?options=keyValues, adding A4 to E1
=================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



09. GET /v2/entities/E1?options=keyValues
=========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 37

{
    "A3": 3,
    "A4": 4,
    "id": "E1",
    "type": "T1"
}


10. PATCH /v2/entities/E1/attrs, setting A4 to 10
=================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



11. GET /v2/entities/E1, to see A4 == 10
========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 38

{
    "A3": 3,
    "A4": 10,
    "id": "E1",
    "type": "T1"
}


12. POST /v2/entities, creating one more E1, different type
===========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T2
Content-Length: 0



13. GET /v2/entities/E1?options=keyValues
=========================================
HTTP/1.1 409 Conflict
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 98

{
    "description": "More than one matching entity. Please refine your query",
    "error": "TooManyResults"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
