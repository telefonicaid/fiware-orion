# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
POST /v2/entities with key-values

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create entity E1 with a compound attribute A1 having a field called 'value', using URI param 'options' = 'keyValues'
# 02. Same operation (entity id is E2) but without 'keyValues', to see that the attribute is NOT a compound
# 03. GET /v2/entities (E1/A1 is compound, E2/A1 is not compound)
#

echo "01. Create entity E1 with a compound attribute A1 having a field called 'value', using URI param 'options' = 'keyValues'"
echo "========================================================================================================================"
payload='{
  "id": "E1",
  "type": "T1",
  "A1": {
    "value": "25",
    "type": "intstring"
  }
}'
orionCurl --url /v2/entities?options=keyValues  --payload "$payload"
echo
echo


echo "02. Same operation (entity id is E2) but without 'keyValues', to see that the attribute is NOT a compound"
echo "========================================================================================================="
payload='{
  "id": "E2",
  "type": "T1",
  "A1": {
    "value": "25",
    "type": "intstring"
  }
}'
orionCurl --url /v2/entities  --payload "$payload"
echo
echo


echo "03. GET /v2/entities (E1/A1 is compound, E2/A1 is not compound)"
echo "==============================================================="
orionCurl --url /v2/entities?options=keyValues
echo
echo


--REGEXPECT--
01. Create entity E1 with a compound attribute A1 having a field called 'value', using URI param 'options' = 'keyValues'
========================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Same operation (entity id is E2) but without 'keyValues', to see that the attribute is NOT a compound
=========================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. GET /v2/entities (E1/A1 is compound, E2/A1 is not compound)
===============================================================
HTTP/1.1 200 OK
Content-Length: 98
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "type": "intstring",
            "value": "25"
        },
        "id": "E1",
        "type": "T1"
    },
    {
        "A1": "25",
        "id": "E2",
        "type": "T1"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
