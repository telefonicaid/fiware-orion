# Copyright 2017 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Invalid Chars in q at Sub Creation Time

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Attempt to create subscription with qstring filter 'house<flat>' - see error for invalid chars
# 02. Attempt to create subscription with qstring filter 'house==flat>' - see error for invalid chars
# 03. Attempt to create subscription with qstring filter 'house==flat,flat>' - see error for invalid chars
# 04. Attempt to create subscription with qstring filter 'house==flat..flat>' - see error for invalid chars
# 05. Attempt to create subscription with qstring filter  q=house'flat' - see error for invalid chars
# 06. Attempt to create subscription with qstring filter  q=a==house'flat' - see error for invalid chars
#

echo "01. Attempt to create subscription with qstring filter 'house<flat>' - see error for invalid chars"
echo "=================================================================================================="
payload='{
  "description": "invalid q",
  "subject": {
    "entities": [ { "idPattern": ".*" } ],
    "condition": {
      "attributes": [ "temperature" ],
      "expression": {
        "q": "house<flat>"
      }
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Attempt to create subscription with qstring filter 'house==flat>' - see error for invalid chars"
echo "==================================================================================================="
payload='{
  "description": "invalid q",
  "subject": {
    "entities": [ { "idPattern": ".*" } ],
    "condition": {
      "attributes": [ "temperature" ],
      "expression": {
        "q": "house==flat>"
      }
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "03. Attempt to create subscription with qstring filter 'house==flat,flat>' - see error for invalid chars"
echo "========================================================================================================"
payload='{
  "description": "invalid q",
  "subject": {
    "entities": [ { "idPattern": ".*" } ],
    "condition": {
      "attributes": [ "temperature" ],
      "expression": {
        "q": "house==flat,flat>"
      }
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "04. Attempt to create subscription with qstring filter 'house==flat..flat>' - see error for invalid chars"
echo "========================================================================================================="
payload='{
  "description": "invalid q",
  "subject": {
    "entities": [ { "idPattern": ".*" } ],
    "condition": {
      "attributes": [ "temperature" ],
      "expression": {
        "q": "house==flat..flat>"
      }
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "05. Attempt to create subscription with qstring filter  q=house'flat' - see error for invalid chars"
echo "==================================================================================================="
payload='{
  "description": "invalid q",
  "subject": {
    "entities": [ { "idPattern": ".*" } ],
    "condition": {
      "attributes": [ "temperature" ],
      "expression": {
        "q": "house'"'flat'"'"
      }
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "06. Attempt to create subscription with qstring filter  q=a==house'flat' - see error for invalid chars"
echo "======================================================================================================"
payload='{
  "description": "invalid q",
  "subject": {
    "entities": [ { "idPattern": ".*" } ],
    "condition": {
      "attributes": [ "temperature" ],
      "expression": {
        "q": "a==house'"'flat'"'"
      }
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


--REGEXPECT--
01. Attempt to create subscription with qstring filter 'house<flat>' - see error for invalid chars
==================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "description": "forbidden characters in String Filter",
    "error": "BadRequest"
}


02. Attempt to create subscription with qstring filter 'house==flat>' - see error for invalid chars
===================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "description": "forbidden characters in String Filter",
    "error": "BadRequest"
}


03. Attempt to create subscription with qstring filter 'house==flat,flat>' - see error for invalid chars
========================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "description": "forbidden characters in String Filter",
    "error": "BadRequest"
}


04. Attempt to create subscription with qstring filter 'house==flat..flat>' - see error for invalid chars
=========================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "description": "forbidden characters in String Filter",
    "error": "BadRequest"
}


05. Attempt to create subscription with qstring filter  q=house'flat' - see error for invalid chars
===================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "description": "forbidden characters in String Filter",
    "error": "BadRequest"
}


06. Attempt to create subscription with qstring filter  q=a==house'flat' - see error for invalid chars
======================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "description": "forbidden characters in String Filter",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
