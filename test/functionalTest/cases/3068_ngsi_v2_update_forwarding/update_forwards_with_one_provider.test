# Copyright 2019 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Forwarded update in pure NGSIv2 with one single provider

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB 38,186-187,235 IPV4
brokerStart CP1

--SHELL--

#
# 01. Register entities of type T1, with ID .*, and attribute A1, for CP1
# 02. Create E2/T1 with attribute A1='untouched' in CP1
# 03. Update entities E2 of type T1, in CB, setting A1 to 'updated-3'
# 04. Query CP1, see E2/A1 == 'updated-3'
#

echo "01. Register entities of type T1, with ID .*, and attribute A1, for CP1"
echo "======================================================================="
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T1",
        "idPattern": ".*"
      }
    ],
    "attrs": [ "A1" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP1_PORT}'/v2"
    },
    "legacyForwarding": false
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "02. Create E2/T1 with attribute A1='untouched' in CP1"
echo "====================================================="
payload='{
  "id": "E2",
  "type": "T1",
  "A1": {
    "value": "untouched"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "03. Update entities E2 of type T1, in CB, setting A1 to 'updated-3'"
echo "==================================================================="
payload='{
  "A1": {
    "value": "updated-3"
  }
}'
orionCurl --url /v2/entities/E2/attrs?type=T1 -X PATCH --payload "$payload"
echo
echo


echo "04. Query CP1, see E2/A1 == 'updated-3'"
echo "======================================="
orionCurl --url /v2/entities --port $CP1_PORT
echo
echo


--REGEXPECT--
01. Register entities of type T1, with ID .*, and attribute A1, for CP1
=======================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E2/T1 with attribute A1='untouched' in CP1
=====================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Update entities E2 of type T1, in CB, setting A1 to 'updated-3'
===================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Query CP1, see E2/A1 == 'updated-3'
=======================================
HTTP/1.1 200 OK
Content-Length: 80
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "Text",
            "value": "updated-3"
        },
        "id": "E2",
        "type": "T1"
    }
]


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
