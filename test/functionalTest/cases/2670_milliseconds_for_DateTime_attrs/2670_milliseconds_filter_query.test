# Copyright 2020 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Milliseconds query filter in DateTime

--SHELL-INIT--
dbInit CB
brokerStart CB 0

--SHELL--

#
# 01. Create E1 with attribute ts=2020-05-10T01:02:03.123Z
# 02. Create E2 with attribute ts=2020-05-10T01:02:03.456Z
# 03. Create E3 with attribute ts=2020-05-10T01:02:03.789Z
# 04. Query for entities ts>2020-05-10T01:02:03Z, get E1, E2, E3
# 05. Query for entities ts<2020-05-10T01:02:03.200Z, get E1
# 06. Query for entities ts=2020-05-10T01:02:03.200Z..2020-05-10T01:02:03.600Z, get E2
#

echo "01. Create E1 with attribute ts=2020-05-10T01:02:03.123Z"
echo "========================================================"
payload='{
  "id": "E1",
  "type": "T",
  "ts": {
    "type": "DateTime",
    "value": "2020-05-10T01:02:03.123Z"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create E2 with attribute ts=2020-05-10T01:02:03.456Z"
echo "========================================================"
payload='{
  "id": "E2",
  "type": "T",
  "ts": {
    "type": "DateTime",
    "value": "2020-05-10T01:02:03.456Z"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Create E3 with attribute ts=2020-05-10T01:02:03.789Z"
echo "========================================================"
payload='{
  "id": "E3",
  "type": "T",
  "ts": {
    "type": "DateTime",
    "value": "2020-05-10T01:02:03.789Z"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. Query for entities ts>2020-05-10T01:02:03Z, get E1, E2, E3"
echo "=============================================================="
orionCurl --url '/v2/entities?q=ts>2020-05-10T01:02:03Z'
echo
echo


echo "05. Query for entities ts<2020-05-10T01:02:03.200Z, get E1"
echo "=========================================================="
orionCurl --url '/v2/entities?q=ts<2020-05-10T01:02:03.200Z'
echo
echo



echo "06. Query for entities ts=2020-05-10T01:02:03.200Z..2020-05-10T01:02:03.600Z, get E2"
echo "===================================================================================="
orionCurl --url '/v2/entities?q=ts==2020-05-10T01:02:03.200Z..2020-05-10T01:02:03.600Z'
echo
echo



--REGEXPECT--
01. Create E1 with attribute ts=2020-05-10T01:02:03.123Z
========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



02. Create E2 with attribute ts=2020-05-10T01:02:03.456Z
========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T
Content-Length: 0



03. Create E3 with attribute ts=2020-05-10T01:02:03.789Z
========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E3?type=T
Content-Length: 0



04. Query for entities ts>2020-05-10T01:02:03Z, get E1, E2, E3
==============================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 292

[
    {
        "id": "E1",
        "ts": {
            "metadata": {},
            "type": "DateTime",
            "value": "2020-05-10T01:02:03.123Z"
        },
        "type": "T"
    },
    {
        "id": "E2",
        "ts": {
            "metadata": {},
            "type": "DateTime",
            "value": "2020-05-10T01:02:03.456Z"
        },
        "type": "T"
    },
    {
        "id": "E3",
        "ts": {
            "metadata": {},
            "type": "DateTime",
            "value": "2020-05-10T01:02:03.789Z"
        },
        "type": "T"
    }
]


05. Query for entities ts<2020-05-10T01:02:03.200Z, get E1
==========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 98

[
    {
        "id": "E1",
        "ts": {
            "metadata": {},
            "type": "DateTime",
            "value": "2020-05-10T01:02:03.123Z"
        },
        "type": "T"
    }
]


06. Query for entities ts=2020-05-10T01:02:03.200Z..2020-05-10T01:02:03.600Z, get E2
====================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 98

[
    {
        "id": "E2",
        "ts": {
            "metadata": {},
            "type": "DateTime",
            "value": "2020-05-10T01:02:03.456Z"
        },
        "type": "T"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
