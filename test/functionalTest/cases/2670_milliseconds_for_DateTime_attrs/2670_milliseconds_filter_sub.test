# Copyright 2020 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Milliseconds for a DateTime attribute

--SHELL-INIT--
dbInit CB
brokerStart CB 0
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create sub1 with filter ts>2020-05-10T01:02:03Z
# 02. Create sub2 with filter ts<2020-05-10T01:02:03.200Z
# 03. Create sub3 with filter ts=2020-05-10T01:02:03.200Z...2020-05-10T01:02:03.600Z
# 04. Create E1 with attribute ts=2020-05-10T01:02:03.123Z, triggers sub1 and sub3
# 05. Create E2 with attribute ts=2020-05-10T01:02:03.456Z, triggers sub1 and sub2
# 06. Create E3 with attribute ts=2020-05-10T01:02:03.789Z, triggers sub1
# 07. Dumps accumulator (see E1-sub1, E1-sub3, E2-sub1, E2-sub2, E3-sub1)
# 08. Gets sub1, 3 hits
# 09. Gets sub2, 1 hit
# 10. Gets sub3, 1 hit
#


echo "01. Create sub1 with filter ts>2020-05-10T01:02:03Z"
echo "==================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "idPattern": ".*",
        "type": "T"
      }
    ],
    "condition": {
      "expression": {
        "q": "ts>2020-05-10T01:02:03Z"
      }
    }
  },
  "notification": {
    "http": {"url": "http://localhost:'${LISTENER_PORT}'/notify"},
    "attrs": [ ]
  },
  "status": "active"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo
SUB1=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "02. Create sub2 with filter ts<2020-05-10T01:02:03.200Z"
echo "======================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "idPattern": ".*",
        "type": "T"
      }
    ],
    "condition": {
      "expression": {
        "q": "ts<2020-05-10T01:02:03.200Z"
      }
    }
  },
  "notification": {
    "http": {"url": "http://localhost:'${LISTENER_PORT}'/notify"},
    "attrs": [ ]
  },
  "status": "active"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo
SUB2=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "03. Create sub3 with filter ts=2020-05-10T01:02:03.200Z...2020-05-10T01:02:03.600Z"
echo "=================================================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "idPattern": ".*",
        "type": "T"
      }
    ],
    "condition": {
      "expression": {
        "q": "ts==2020-05-10T01:02:03.200Z..2020-05-10T01:02:03.600Z"
      }
    }
  },
  "notification": {
    "http": {"url": "http://localhost:'${LISTENER_PORT}'/notify"},
    "attrs": [ ]
  },
  "status": "active"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo
SUB3=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "04. Create E1 with attribute ts=2020-05-10T01:02:03.123Z, triggers sub1 and sub3"
echo "================================================================================"
payload='{
  "id": "E1",
  "type": "T",
  "ts": {
    "type": "DateTime",
    "value": "2020-05-10T01:02:03.123Z"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


sleep 0.2s


echo "05. Create E2 with attribute ts=2020-05-10T01:02:03.456Z, triggers sub1 and sub2"
echo "================================================================================"
payload='{
  "id": "E2",
  "type": "T",
  "ts": {
    "type": "DateTime",
    "value": "2020-05-10T01:02:03.456Z"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


sleep 0.2s


echo "06. Create E3 with attribute ts=2020-05-10T01:02:03.789Z, triggers sub1"
echo "======================================================================="
payload='{
  "id": "E3",
  "type": "T",
  "ts": {
    "type": "DateTime",
    "value": "2020-05-10T01:02:03.789Z"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "07. Dumps accumulator (see E1-sub1, E1-sub3, E2-sub1, E2-sub2, E3-sub1)"
echo "======================================================================="
accumulatorDump
echo
echo


echo "08. Gets sub1, 3 hits"
echo "====================="
orionCurl --url /v2/subscriptions/$SUB1
echo
echo


echo "09. Gets sub2, 1 hits"
echo "====================="
orionCurl --url /v2/subscriptions/$SUB2
echo
echo


echo "10. Gets sub3, 1 hits"
echo "====================="
orionCurl --url /v2/subscriptions/$SUB3
echo
echo


--REGEXPECT--
01. Create sub1 with filter ts>2020-05-10T01:02:03Z
===================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create sub2 with filter ts<2020-05-10T01:02:03.200Z
=======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create sub3 with filter ts=2020-05-10T01:02:03.200Z...2020-05-10T01:02:03.600Z
==================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Create E1 with attribute ts=2020-05-10T01:02:03.123Z, triggers sub1 and sub3
================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create E2 with attribute ts=2020-05-10T01:02:03.456Z, triggers sub1 and sub2
================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Create E3 with attribute ts=2020-05-10T01:02:03.789Z, triggers sub1
=======================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Dumps accumulator (see E1-sub1, E1-sub3, E2-sub1, E2-sub2, E3-sub1)
=======================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 151
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "E1",
            "ts": {
                "metadata": {},
                "type": "DateTime",
                "value": "2020-05-10T01:02:03.123Z"
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f\-]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 151
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "E1",
            "ts": {
                "metadata": {},
                "type": "DateTime",
                "value": "2020-05-10T01:02:03.123Z"
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f\-]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 151
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "E2",
            "ts": {
                "metadata": {},
                "type": "DateTime",
                "value": "2020-05-10T01:02:03.456Z"
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f\-]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 151
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "E2",
            "ts": {
                "metadata": {},
                "type": "DateTime",
                "value": "2020-05-10T01:02:03.456Z"
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f\-]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 151
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "id": "E3",
            "ts": {
                "metadata": {},
                "type": "DateTime",
                "value": "2020-05-10T01:02:03.789Z"
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f\-]{24})"
}
=======================================


08. Gets sub1, 3 hits
=====================
HTTP/1.1 200 OK
Content-Length: 441
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f\-]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "onlyChangedAttrs": false,
        "timesSent": 3
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "expression": {
                "q": "ts>2020-05-10T01:02:03Z"
            }
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


09. Gets sub2, 1 hits
=====================
HTTP/1.1 200 OK
Content-Length: 445
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f\-]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "onlyChangedAttrs": false,
        "timesSent": 1
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "expression": {
                "q": "ts<2020-05-10T01:02:03.200Z"
            }
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


10. Gets sub3, 1 hits
=====================
HTTP/1.1 200 OK
Content-Length: 472
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f\-]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "onlyChangedAttrs": false,
        "timesSent": 1
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "expression": {
                "q": "ts==2020-05-10T01:02:03.200Z..2020-05-10T01:02:03.600Z"
            }
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
