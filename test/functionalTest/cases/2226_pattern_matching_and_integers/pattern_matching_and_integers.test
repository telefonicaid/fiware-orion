# Copyright 2017 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Pattern Matching and integers

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity E1 with A1:101 (Number)
# 02. Create entity E2 with A1:"101" (String)
# 03. Create entity E3 with A1:103 (Number)
# 04. GET entities, q=A1~=100, see nothing
# 05. GET entities, q=A1~=101, see E2
# 06. GET entities, q=A1~='101', see error (forbidden chars)
#

echo "01. Create entity E1 with A1:101 (Number)"
echo "========================================="
payload='{
  "id": "E1",
  "A1": {
    "value": 101
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo '02. Create entity E2 with A1:"101" (String)'
echo '==========================================='
payload='{
  "id": "E2",
  "A1": {
    "value": "101"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Create entity E3 with A1:103 (Number)"
echo "========================================="
payload='{
  "id": "E3",
  "A1": {
    "value": 103
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. GET entities, q=A1~=100, see nothing"
echo "========================================"
orionCurl --url '/v2/entities?q=A1~=100'
echo
echo


echo "05. GET entities, q=A1~=101, see E2"
echo "==================================="
orionCurl --url '/v2/entities?q=A1~=101'
echo
echo


echo "06. GET entities, q=A1~='101', see error (forbidden chars)"
echo "=========================================================="
orionCurl --url "/v2/entities?q=A1~='101'"
echo
echo


--REGEXPECT--
01. Create entity E1 with A1:101 (Number)
=========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



02. Create entity E2 with A1:"101" (String)
===========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=Thing
Content-Length: 0



03. Create entity E3 with A1:103 (Number)
=========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E3?type=Thing
Content-Length: 0



04. GET entities, q=A1~=100, see nothing
========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


05. GET entities, q=A1~=101, see E2
===================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 77

[
    {
        "A1": {
            "metadata": {},
            "type": "Text",
            "value": "101"
        },
        "id": "E2",
        "type": "Thing"
    }
]


06. GET entities, q=A1~='101', see error (forbidden chars)
==========================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "description": "forbidden characters in String Filter",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
