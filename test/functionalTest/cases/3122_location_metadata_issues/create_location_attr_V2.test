# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Create 2 entities with NGSIV2 POST.
One with the location metadata, managed as a regular "custom" metadata as it is NGSIV2.
The other without a location metadata but with a geo:point attribute, then managed as
a location attribute for NGSIV2.

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1 with NGSIV2 with location metadata but not geo:xxx type
# 02. Create E2 with NGSIV2 without location metadata but with geo:xxx type
# 03. Check E1 entity in DB has location metadata but no location GeoJSON field
# 04. Check E2 entity in DB has no location metadata but location GeoJSON field

echo "01. Create E1 with NGSIV2 with location metadata but not geo:xxx type"
echo "====================================================================="
payload='
{
	"id": "E1",
	"type": "T",
	"A": {
		"value": "40, -3",
		"type": "whatever",
		"metadata": {
			"location": {
				"type": "string",
				"value": "WGS84"
			}
		}
	}
}
'
orionCurl --url '/v2/entities' --payload "$payload"
echo
echo


echo "02. Create E2 with NGSIV2 without location metadata but with geo:xxx type"
echo "========================================================================="
payload='
{
	"id": "E2",
	"type": "T",
	"A": {
		"value": "39, -2",
		"type": "geo:point"
	}
}
'
orionCurl --url '/v2/entities' --payload "$payload"
echo
echo


echo "03. Check E1 entity in DB has location metadata but no location GeoJSON field"
echo "============================================================================="
mongoCmd ${CB_DB_NAME} 'db.entities.find({ "_id" : { "id" : "E1",  "type": "T", "servicePath" : "/" } }, {_id:0, attrs: 1, location: 1})' | python ${SCRIPT_HOME}/jsonBeautifier.py
echo
echo


echo "04. Check E2 entity in DB has no location metadata but location GeoJSON field"
echo "============================================================================="
mongoCmd ${CB_DB_NAME} 'db.entities.find({ "_id" : { "id" : "E2",  "type": "T", "servicePath" : "/" } }, {_id:0, attrs: 1, location: 1})' | python ${SCRIPT_HOME}/jsonBeautifier.py
echo
echo


--REGEXPECT--
01. Create E1 with NGSIV2 with location metadata but not geo:xxx type
=====================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E2 with NGSIV2 without location metadata but with geo:xxx type
=========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Check E1 entity in DB has location metadata but no location GeoJSON field
=============================================================================
{
    "attrs": {
        "A": {
            "creDate": REGEX(.*),
            "md": {
                "location": {
                    "type": "string",
                    "value": "WGS84"
                }
            },
            "mdNames": [
                "location"
            ],
            "modDate": REGEX(.*),
            "type": "whatever",
            "value": "40, -3"
        }
    }
}


04. Check E2 entity in DB has no location metadata but location GeoJSON field
=============================================================================
{
    "attrs": {
        "A": {
            "creDate": REGEX(.*),
            "mdNames": [],
            "modDate": REGEX(.*),
            "type": "geo:point",
            "value": "39, -2"
        }
    },
    "location": {
        "attrName": "A",
        "coords": {
            "coordinates": [
                -2,
                39
            ],
            "type": "Point"
        }
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
