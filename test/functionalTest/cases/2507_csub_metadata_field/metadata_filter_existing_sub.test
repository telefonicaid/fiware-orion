# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Metadata filter with existing subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create sub with metadata: *
# 02. Create entity with attribute with metadata M1, M2, M3
# 03. Dump and reset: see notification with metadata M1+M2+M3
# 04. Update sub with metadata: M1, M2
# 05. Update entity to trigger notification
# 06. Dump and reset: see notification with metadata M1+M2
# 07. Update sub with metadata: actionType, M3
# 08. Update entity to trigger notification
# 09. Dump and reset: see notification with metadata actionType(on A)+M3
# 10. Update sub with metadata: actionType, *
# 11. Update entity to trigger notification
# 12. Dump and reset: see notification with metadata M1+M2+M3+actionType(on A)
#


echo "01. Create sub with metadata: *"
echo "==============================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ ],
    "metadata": [ "*" ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

SUB_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "02. Create entity with attribute with metadata M1, M2, M3"
echo "========================================================="
payload='{
  "type": "T",
  "id": "E",
  "A": {
    "type": "Number",
    "value": 1,
    "metadata": {
      "M1": { "value": "10", "type": "Number" },
      "M2": { "value": "20", "type": "Number" },
      "M3": { "value": "30", "type": "Number" }
    }
  },
  "B": {
    "type": "Number",
    "value": 2,
    "metadata": {
      "M2": { "value": "200", "type": "Number" }
    }
  },
  "C": {
    "type": "Number",
    "value": 3,
    "metadata": {
      "M3": { "value": "300", "type": "Number" }
    }
  },
  "D": {
    "type": "Number",
    "value": 4
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Dump and reset: see notification with metadata M1+M2+M3"
echo "==========================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "04. Update sub with metadata: M1, M2"
echo "===================================="
payload='{
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ ],
    "metadata": [ "M1", "M2" ]
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID -X PATCH --payload "$payload"
echo
echo


echo "05. Update entity to trigger notification"
echo "========================================="
payload='{
  "A": {
    "value": "x",
    "type": "Text",
    "metadata": {
      "M1": { "value": "10", "type": "Number" },
      "M2": { "value": "20", "type": "Number" },
      "M3": { "value": "30", "type": "Number" }
    }
  }
}'
orionCurl --url /v2/entities/E/attrs -X PATCH --payload "$payload"
echo
echo


echo "06. Dump and reset: see notification with metadata M1+M2"
echo "========================================================"
accumulatorDump
accumulatorReset
echo
echo


echo "07. Update sub with metadata: actionType, M3"
echo "============================================"
payload='{
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ ],
    "metadata": [ "actionType", "M3" ]
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID -X PATCH --payload "$payload"
echo
echo


echo "08. Update entity to trigger notification"
echo "========================================="
payload='{
  "A": {
    "value": "y",
    "type": "Text",
    "metadata": {
      "M1": { "value": "10", "type": "Number" },
      "M2": { "value": "20", "type": "Number" },
      "M3": { "value": "30", "type": "Number" }
    }
  }
}'
orionCurl --url /v2/entities/E/attrs -X PATCH --payload "$payload"
echo
echo


echo "09. Dump and reset: see notification with metadata actionType(on A)+M3"
echo "======================================================================"
accumulatorDump
accumulatorReset
echo
echo


echo "10. Update sub with metadata: actionType, *"
echo "==========================================="
payload='{
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ ],
    "metadata": [ "actionType", "*" ]
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID -X PATCH --payload "$payload"
echo
echo


echo "11. Update entity to trigger notification"
echo "========================================="
payload='{
  "A": {
    "value": "z",
    "type": "Text",
    "metadata": {
      "M1": { "value": "10", "type": "Number" },
      "M2": { "value": "20", "type": "Number" },
      "M3": { "value": "30", "type": "Number" }
    }
  }
}'
orionCurl --url /v2/entities/E/attrs -X PATCH --payload "$payload"
echo
echo


echo "12. Dump and reset: see notification with metadata M1+M2+M3+actionType(on A)"
echo "============================================================================"
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create sub with metadata: *
===============================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity with attribute with metadata M1, M2, M3
=========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E?type=T
Content-Length: 0



03. Dump and reset: see notification with metadata M1+M2+M3
===========================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 439
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {
                    "M1": {
                        "type": "Number",
                        "value": "10"
                    },
                    "M2": {
                        "type": "Number",
                        "value": "20"
                    },
                    "M3": {
                        "type": "Number",
                        "value": "30"
                    }
                },
                "type": "Number",
                "value": 1
            },
            "B": {
                "metadata": {
                    "M2": {
                        "type": "Number",
                        "value": "200"
                    }
                },
                "type": "Number",
                "value": 2
            },
            "C": {
                "metadata": {
                    "M3": {
                        "type": "Number",
                        "value": "300"
                    }
                },
                "type": "Number",
                "value": 3
            },
            "D": {
                "metadata": {},
                "type": "Number",
                "value": 4
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


04. Update sub with metadata: M1, M2
====================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Update entity to trigger notification
=========================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. Dump and reset: see notification with metadata M1+M2
========================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 367
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {
                    "M1": {
                        "type": "Number",
                        "value": "10"
                    },
                    "M2": {
                        "type": "Number",
                        "value": "20"
                    }
                },
                "type": "Text",
                "value": "x"
            },
            "B": {
                "metadata": {
                    "M2": {
                        "type": "Number",
                        "value": "200"
                    }
                },
                "type": "Number",
                "value": 2
            },
            "C": {
                "metadata": {},
                "type": "Number",
                "value": 3
            },
            "D": {
                "metadata": {},
                "type": "Number",
                "value": 4
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


07. Update sub with metadata: actionType, M3
============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



08. Update entity to trigger notification
=========================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



09. Dump and reset: see notification with metadata actionType(on A)+M3
======================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 377
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {
                    "M3": {
                        "type": "Number",
                        "value": "30"
                    },
                    "actionType": {
                        "type": "Text",
                        "value": "update"
                    }
                },
                "type": "Text",
                "value": "y"
            },
            "B": {
                "metadata": {},
                "type": "Number",
                "value": 2
            },
            "C": {
                "metadata": {
                    "M3": {
                        "type": "Number",
                        "value": "300"
                    }
                },
                "type": "Number",
                "value": 3
            },
            "D": {
                "metadata": {},
                "type": "Number",
                "value": 4
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


10. Update sub with metadata: actionType, *
===========================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



11. Update entity to trigger notification
=========================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



12. Dump and reset: see notification with metadata M1+M2+M3+actionType(on A)
============================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 485
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {
                    "M1": {
                        "type": "Number",
                        "value": "10"
                    },
                    "M2": {
                        "type": "Number",
                        "value": "20"
                    },
                    "M3": {
                        "type": "Number",
                        "value": "30"
                    },
                    "actionType": {
                        "type": "Text",
                        "value": "update"
                    }
                },
                "type": "Text",
                "value": "z"
            },
            "B": {
                "metadata": {
                    "M2": {
                        "type": "Number",
                        "value": "200"
                    }
                },
                "type": "Number",
                "value": 2
            },
            "C": {
                "metadata": {
                    "M3": {
                        "type": "Number",
                        "value": "300"
                    }
                },
                "type": "Number",
                "value": 3
            },
            "D": {
                "metadata": {},
                "type": "Number",
                "value": 4
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
