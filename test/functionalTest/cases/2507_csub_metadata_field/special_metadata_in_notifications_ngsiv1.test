# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Special metadata in NGSIv1 notifications

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# Same script as special_metadata_in_notifications_ngsiv1.test but using "legacy" as attrsFormat
#
# 01. Create E1 with attributes A:1, B:2, C:3, D:4
# 02. Subscribe to E.* for A, B and C; triggered by B, C or D
# 03. Dump and reset: see initial notification with A, B and C
# 04. Update B:20
# 05. Dump and reset: see notification with actionType=update and previousValue=2 for B
# 06. Update B:20, C:30
# 07. Dump and reset: see notification with actionType=update for B and C, previousValue=20 for B, previousValue=3 for C
# 08. Update A:1, D:40
# 09. Dump and reset: see notification with actionType=update and previousValue=1 for A
# 10. Update A:10, D:41
# 11. Dump and reset: see notification with actionType=update and previousValue=10 for A
# 12. Create E2 with attributes A:x, B:y, C:z, D:u
# 13. Dump and reset: see notification with actionType=append for A, B, C
# 14. Update subscription conditions (to re-trigger initial notification)
# 15. Dump and reset: see notification with 2 entities with A, B and C
#

echo "01. Create E1 with attributes A:1, B:2, C:3, D:4"
echo "================================================"
payload='{
  "type": "T",
  "id": "E1",
  "A": {
    "type": "Number",
    "value": 1
  },
  "B": {
    "type": "Number",
    "value": 2
  },
  "C": {
    "type": "Number",
    "value": 3
  },
  "D": {
    "type": "Number",
    "value": 4
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Subscribe to E.* for A, B and C; triggered by B, C or D"
echo "==========================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": "E.*",
        "type": "T"
      }
    ],
    "condition": {
      "attrs": [ "B", "C", "D" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ "A", "B", "C" ],
    "attrsFormat": "legacy",
    "metadata": [ "previousValue", "actionType" ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

SUB_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "03. Dump and reset: see initial notification with A, B and C"
echo "============================================================"
accumulatorDump
accumulatorReset
echo
echo


echo "04. Update B:20"
echo "==============="
payload='{
  "B": {
    "type": "Number",
    "value": 20
  }
}'
orionCurl --url /v2/entities/E1/attrs -X PATCH --payload "$payload"
echo
echo


echo "05. Dump and reset: see notification with actionType=update and previousValue=2 for B"
echo "====================================================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "06. Update B:20, C:30"
echo "====================="
payload='{
  "B": {
    "type": "Number",
    "value": 20
  },
  "C": {
    "type": "Number",
    "value": 30
  }
}'
orionCurl --url /v2/entities/E1/attrs -X PATCH --payload "$payload"
echo
echo


echo "07. Dump and reset: see notification with actionType=update for B and C, previousValue=20 for B, previousValue=3 for C"
echo "======================================================================================================================"
accumulatorDump
accumulatorReset
echo
echo

echo "08. Update A:1, D:40"
echo "===================="
payload='{
  "A": {
    "type": "Number",
    "value": 1
  },
  "D": {
    "type": "Number",
    "value": 40
  }
}'
orionCurl --url /v2/entities/E1/attrs -X PATCH --payload "$payload"
echo
echo


echo "09. Dump and reset: see notification with actionType=update and previousValue=1 for A"
echo "====================================================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "10. Update A:10, D:41"
echo "====================="
payload='{
  "A": {
    "type": "Number",
    "value": 10
  },
  "D": {
    "type": "Number",
    "value": 41
  }
}'
orionCurl --url /v2/entities/E1/attrs -X PATCH --payload "$payload"
echo
echo


echo "11. Dump and reset: see notification with actionType=update and previousValue=10 for A"
echo "======================================================================================"
accumulatorDump
accumulatorReset
echo
echo


echo "12. Create E2 with attributes A:x, B:y, C:z, D:u"
echo "================================================"
payload='{
  "type": "T",
  "id": "E2",
  "A": {
    "type": "Text",
    "value": "x"
  },
  "B": {
    "type": "Text",
    "value": "y"
  },
  "C": {
    "type": "Text",
    "value": "z"
  },
  "D": {
    "type": "Text",
    "value": "u"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "13. Dump and reset: see notification with actionType=append for A, B, C"
echo "======================================================================="
accumulatorDump
accumulatorReset
echo
echo
echo


echo "14. Update subscription conditions (to re-trigger initial notification)"
echo "======================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": "E.*",
        "type": "T"
      }
    ],
    "condition": {
      "attrs": [ "B", "C", "D" ]
    }
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID -X PATCH --payload "$payload"
echo
echo


echo "15. Dump and reset: see notification with 2 entities with A, B and C"
echo "===================================================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create E1 with attributes A:1, B:2, C:3, D:4
================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Subscribe to E.* for A, B and C; triggered by B, C or D
===========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Dump and reset: see initial notification with A, B and C
============================================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 671
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "Number",
                        "value": 1
                    },
                    {
                        "name": "B",
                        "type": "Number",
                        "value": 2
                    },
                    {
                        "name": "C",
                        "type": "Number",
                        "value": 3
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


04. Update B:20
===============
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Dump and reset: see notification with actionType=update and previousValue=2 for B
=====================================================================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 992
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "Number",
                        "value": 1
                    },
                    {
                        "metadatas": [
                            {
                                "name": "actionType",
                                "type": "Text",
                                "value": "update"
                            },
                            {
                                "name": "previousValue",
                                "type": "Number",
                                "value": 2
                            }
                        ],
                        "name": "B",
                        "type": "Number",
                        "value": 20
                    },
                    {
                        "name": "C",
                        "type": "Number",
                        "value": 3
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


06. Update B:20, C:30
=====================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Dump and reset: see notification with actionType=update for B and C, previousValue=20 for B, previousValue=3 for C
======================================================================================================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 1314
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "Number",
                        "value": 1
                    },
                    {
                        "metadatas": [
                            {
                                "name": "actionType",
                                "type": "Text",
                                "value": "update"
                            },
                            {
                                "name": "previousValue",
                                "type": "Number",
                                "value": 20
                            }
                        ],
                        "name": "B",
                        "type": "Number",
                        "value": 20
                    },
                    {
                        "metadatas": [
                            {
                                "name": "actionType",
                                "type": "Text",
                                "value": "update"
                            },
                            {
                                "name": "previousValue",
                                "type": "Number",
                                "value": 3
                            }
                        ],
                        "name": "C",
                        "type": "Number",
                        "value": 30
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


08. Update A:1, D:40
====================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. Dump and reset: see notification with actionType=update and previousValue=1 for A
=====================================================================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 993
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "actionType",
                                "type": "Text",
                                "value": "update"
                            },
                            {
                                "name": "previousValue",
                                "type": "Number",
                                "value": 1
                            }
                        ],
                        "name": "A",
                        "type": "Number",
                        "value": 1
                    },
                    {
                        "name": "B",
                        "type": "Number",
                        "value": 20
                    },
                    {
                        "name": "C",
                        "type": "Number",
                        "value": 30
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


10. Update A:10, D:41
=====================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



11. Dump and reset: see notification with actionType=update and previousValue=10 for A
======================================================================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 994
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "actionType",
                                "type": "Text",
                                "value": "update"
                            },
                            {
                                "name": "previousValue",
                                "type": "Number",
                                "value": 1
                            }
                        ],
                        "name": "A",
                        "type": "Number",
                        "value": 10
                    },
                    {
                        "name": "B",
                        "type": "Number",
                        "value": 20
                    },
                    {
                        "name": "C",
                        "type": "Number",
                        "value": 30
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


12. Create E2 with attributes A:x, B:y, C:z, D:u
================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



13. Dump and reset: see notification with actionType=append for A, B, C
=======================================================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 1217
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "actionType",
                                "type": "Text",
                                "value": "append"
                            }
                        ],
                        "name": "A",
                        "type": "Text",
                        "value": "x"
                    },
                    {
                        "metadatas": [
                            {
                                "name": "actionType",
                                "type": "Text",
                                "value": "append"
                            }
                        ],
                        "name": "B",
                        "type": "Text",
                        "value": "y"
                    },
                    {
                        "metadatas": [
                            {
                                "name": "actionType",
                                "type": "Text",
                                "value": "append"
                            }
                        ],
                        "name": "C",
                        "type": "Text",
                        "value": "z"
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================



14. Update subscription conditions (to re-trigger initial notification)
=======================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



15. Dump and reset: see notification with 2 entities with A, B and C
====================================================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 1234
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "Number",
                        "value": 10
                    },
                    {
                        "name": "B",
                        "type": "Number",
                        "value": 20
                    },
                    {
                        "name": "C",
                        "type": "Number",
                        "value": 30
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "Text",
                        "value": "x"
                    },
                    {
                        "name": "B",
                        "type": "Text",
                        "value": "y"
                    },
                    {
                        "name": "C",
                        "type": "Text",
                        "value": "z"
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
