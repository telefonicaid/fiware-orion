# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Forward using GET /v2/entities/<eid>/attrs/<attr-name>/value

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB
brokerStart CP1

--SHELL--

#
# 01. Create E1/T1/A1 in CP1
# 02. Register E1/T1/A1 in CB, provApp: CP1
# 03. Query E1/A1 in CB, using GET /v2/entities/E1/attrs/A1/value
# 04. Query E1/A1 in CB, using GET /v2/entities/E1/attrs/A1/value?type=T1
#

echo "01. Create E1/T1/A1 in CP1"
echo "=========================="
payload='{
  "type": "T1",
  "id":   "E1",
  "A1": {
    "type": "string",
    "value": "A1 in CP1"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "02. Register E1/T1/A1 in CB, provApp: CP1"
echo "========================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "03. Query E1/A1 in CB, using GET /v2/entities/E1/attrs/A1/value"
echo "==============================================================="
orionCurl --url /v2/entities/E1/attrs/A1/value --out text/plain
echo
echo


echo "04. Query E1/A1 in CB, using GET /v2/entities/E1/attrs/A1/value?type=T1"
echo "======================================================================="
orionCurl --url '/v2/entities/E1/attrs/A1/value?type=T1' --out text/plain
echo
echo


--REGEXPECT--
01. Create E1/T1/A1 in CP1
==========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Register E1/T1/A1 in CB, provApp: CP1
=========================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


03. Query E1/A1 in CB, using GET /v2/entities/E1/attrs/A1/value
===============================================================
HTTP/1.1 200 OK
Content-Length: 11
Content-Type: text/plain
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

"A1 in CP1"


04. Query E1/A1 in CB, using GET /v2/entities/E1/attrs/A1/value?type=T1
=======================================================================
HTTP/1.1 200 OK
Content-Length: 11
Content-Type: text/plain
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

"A1 in CP1"


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
