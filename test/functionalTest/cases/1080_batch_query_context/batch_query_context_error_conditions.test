# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
V2 batch query - error conditions

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v2/op/query, with empty payload, see error
# 02. POST /v2/op/query, with non-empty payload but without any of the three optional vector fields, see error
# 03. POST /v2/op/query, with 'entities' as an object, see error
# 04. POST /v2/op/query, with E.* and 'attributes' as an object, not an array - see error
# 05. POST /v2/op/query, with E.* and 'attributes' as an array of integers, not strings - see error
# 06. POST /v2/op/query, with 'scopes' as an object, not an array - see error
# 07. POST /v2/op/query, with a scope being a vector, not an object - see error
# 08. POST /v2/op/query, with a scope without 'type' - see error
# 09. POST /v2/op/query, with a scope without 'value' - see error
# 10. POST /v2/op/query, with a scope whose 'type' is not a String - see error
# 11. POST /v2/op/query, with a scope whose 'value' is not a String - see error
#

echo "01. POST /v2/op/query, with empty payload, see error"
echo "===================================================="
payload='{}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "02. POST /v2/op/query, with non-empty payload but without any of the three optional vector fields, see error"
echo "============================================================================================================"
payload='{
  "nonSupported_field": [
    {
      "id": "E"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "03. POST /v2/op/query, with 'entities' as an object, see error"
echo "=============================================================="
payload='{
  "entities": {
      "id": "E"
  }
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "04. POST /v2/op/query, with E.* and 'attributes' as an object, not an array - see error"
echo "======================================================================================="
payload='{
  "attributes": {
    "A1": 0
  }
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "05. POST /v2/op/query, with E.* and 'attributes' as an array of integers, not strings - see error"
echo "================================================================================================="
payload='{
  "attributes": [
    1, 2, 3
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "06. POST /v2/op/query, with 'scopes' as an object, not an array - see error"
echo "==========================================================================="
payload='{
  "scopes": {
    "invalid": "scopes must be a vector"
  }
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "07. POST /v2/op/query, with a scope being a vector, not an object - see error"
echo "============================================================================="
payload='{
  "scopes": [
    [ 1,2,3 ]
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "08. POST /v2/op/query, with a scope without 'type' - see error"
echo "=============================================================="
payload='{
  "scopes": [
    {
      "value": "scope-value"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "09. POST /v2/op/query, with a scope without 'value' - see error"
echo "==============================================================="
payload='{
  "scopes": [
    {
      "type": "scope-type"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "10. POST /v2/op/query, with a scope whose 'type' is not a String - see error"
echo "============================================================================"
payload='{
  "scopes": [
    {
      "type": 24,
      "value": "scope-value"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "11. POST /v2/op/query, with a scope whose 'value' is not a String - see error"
echo "============================================================================="
payload='{
  "scopes": [
    {
      "type": "scope-type",
      "value": 25
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


--REGEXPECT--
01. POST /v2/op/query, with empty payload, see error
====================================================
HTTP/1.1 400 Bad Request
Content-Length: 52
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "empty payload",
    "error": "BadRequest"
}


02. POST /v2/op/query, with non-empty payload but without any of the three optional vector fields, see error
============================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 85
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid JSON payload, no relevant fields found",
    "error": "BadRequest"
}


03. POST /v2/op/query, with 'entities' as an object, see error
==============================================================
HTTP/1.1 400 Bad Request
Content-Length: 55
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "not a JSON array",
    "error": "BadRequest"
}


04. POST /v2/op/query, with E.* and 'attributes' as an object, not an array - see error
=======================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 82
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "the field /attributes/ must be a JSON array",
    "error": "BadRequest"
}


05. POST /v2/op/query, with E.* and 'attributes' as an array of integers, not strings - see error
=================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 83
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "only JSON Strings allowed in attributes list",
    "error": "BadRequest"
}


06. POST /v2/op/query, with 'scopes' as an object, not an array - see error
===========================================================================
HTTP/1.1 400 Bad Request
Content-Length: 78
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "the field /scopes/ must be a JSON array",
    "error": "BadRequest"
}


07. POST /v2/op/query, with a scope being a vector, not an object - see error
=============================================================================
HTTP/1.1 400 Bad Request
Content-Length: 65
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "scope is not a JSON object",
    "error": "BadRequest"
}


08. POST /v2/op/query, with a scope without 'type' - see error
==============================================================
HTTP/1.1 400 Bad Request
Content-Length: 59
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "scope without a type",
    "error": "BadRequest"
}


09. POST /v2/op/query, with a scope without 'value' - see error
===============================================================
HTTP/1.1 400 Bad Request
Content-Length: 60
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "scope without a value",
    "error": "BadRequest"
}


10. POST /v2/op/query, with a scope whose 'type' is not a String - see error
============================================================================
HTTP/1.1 400 Bad Request
Content-Length: 71
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "invalid JSON type for scope type",
    "error": "BadRequest"
}


11. POST /v2/op/query, with a scope whose 'value' is not a String - see error
=============================================================================
HTTP/1.1 400 Bad Request
Content-Length: 88
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "invalid JSON type for scope value: must be string",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
