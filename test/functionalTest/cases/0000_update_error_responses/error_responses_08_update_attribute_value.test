# Copyright 2023 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Update attribute value (PUT /v2/entities/{entityId}/attrs/{attrName}/value) error responses

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

# From documentation:
#
# Response code:
#
# ...
# * Errors use a non-2xx code and error payload (see next subsection):
#   * 404 Not Found for not found entity or not found attribute
#   ...
#
# Response payload:
#
# In the case of not found entity:
#
# {
#     "description": "The requested entity has not been found. Check type and id",
#     "error": "NotFound"
# }
#
# In the case of not found attribute:
#
# {
#    "description": "The entity does not have such an attribute",
#    "error": "NotFound"
# }
#

#
# 01. PUT /v2/entities/F/attrs/C/value, see error (NotFound)
# 02. Create entity E/A-B
# 03. PUT /v2/entities/E/attrs/C/value, see error (NotFound)
#


echo "01. PUT /v2/entities/F/attrs/C/value, see error (NotFound)"
echo "=========================================================="
payload='{
  "x": 1
}'
orionCurl --url /v2/entities/F/attrs/C/value --payload "$payload" -X PUT
echo
echo


echo "02. Create entity E/A-B"
echo "======================="
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  },
  "B": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. PUT /v2/entities/E/attrs/C/value, see error (NotFound)"
echo "=========================================================="
payload='{
  "x": 1
}'
orionCurl --url /v2/entities/E/attrs/C/value --payload "$payload" -X PUT
echo
echo


--REGEXPECT--
01. PUT /v2/entities/F/attrs/C/value, see error (NotFound)
==========================================================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


02. Create entity E/A-B
=======================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E?type=T
Content-Length: 0



03. PUT /v2/entities/E/attrs/C/value, see error (NotFound)
==========================================================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 79

{
    "description": "The entity does not have such an attribute",
    "error": "NotFound"
}


--TEARDOWN--
brokerStop CB
dbDrop CB