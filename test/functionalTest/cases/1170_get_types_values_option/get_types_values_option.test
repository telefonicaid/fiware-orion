# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET Entity Types with options values

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. GET /v2/types?options=values and get an empty list
# 02. Create E1/T1/A1+A2
# 03. GET /v2/types?options=values and get a list with one element
# 04. Create E2/T2/A1+A3
# 05. Create E3/T3/A2+A4
# 06. GET /v2/types?options=values and get a list of three types
# 07. GET /v2/types?options=values with limit, getting 2 types but Fiware-Total-Count 3
# 08. GET /v2/types?options=values with offset=3, thus out of limits
#

echo "01. GET /v2/types?options=values and get an empty list"
echo "======================================================"
orionCurl --url '/v2/types?options=values'
echo
echo


echo "02. Create E1/T1/A1+A2"
echo "======================"
payload='{
  "type": "T1",
  "id":   "E1",
  "A1": { "type": "String", "value": "s" },
  "A2": { "type": "Int", "value": 2 }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. GET /v2/types?options=values and get a non-empty list"
echo "========================================================="
orionCurl --url '/v2/types?options=values'
echo
echo


echo "04. Create E2/T2/A1+A3"
echo "======================"
payload='{
  "type": "T2",
  "id":   "E2",
  "A1": { "type": "String", "value": "s" },
  "A3": { "type": "Bool", "value": true }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "05. Create E3/T3/A2+A4"
echo "======================"
payload='{
  "type": "T3",
  "id":   "E3",
  "A2": { "type": "Int", "value": 2 },
  "A4": { "type": "String", "value": "a4" }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "06. GET /v2/types?options=values and get a list of three types"
echo "=============================================================="
orionCurl --url '/v2/types?options=values'
echo
echo


echo "07. GET /v2/types?options=values with limit, getting 2 types but Fiware-Total-Count 3"
echo "====================================================================================="
orionCurl --url '/v2/types?limit=2&options=count,values'
echo
echo


echo "08. GET /v2/types?options=values with offset=3, thus out of limits"
echo "=================================================================="
orionCurl --url '/v2/types?offset=3&options=count,values'
echo
echo


--REGEXPECT--
01. GET /v2/types?options=values and get an empty list
======================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


02. Create E1/T1/A1+A2
======================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T1
Content-Length: 0



03. GET /v2/types?options=values and get a non-empty list
=========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 6

[
    "T1"
]


04. Create E2/T2/A1+A3
======================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T2
Content-Length: 0



05. Create E3/T3/A2+A4
======================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E3?type=T3
Content-Length: 0



06. GET /v2/types?options=values and get a list of three types
==============================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 16

[
    "T1",
    "T2",
    "T3"
]


07. GET /v2/types?options=values with limit, getting 2 types but Fiware-Total-Count 3
=====================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Fiware-Total-Count: 3
Content-Type: application/json
Content-Length: 11

[
    "T1",
    "T2"
]


08. GET /v2/types?options=values with offset=3, thus out of limits
==================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Fiware-Total-Count: 3
Content-Type: application/json
Content-Length: 2

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
