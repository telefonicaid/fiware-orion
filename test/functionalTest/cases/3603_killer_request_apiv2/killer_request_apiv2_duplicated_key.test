# Copyright 2020 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Killer request APIv2 malformed (duplicated key value)

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Send killer request to CB, get error
# 01. Send another killer request to CB, get error
#

echo '01. Send killer request to CB, get error'
echo '========================================'
payload='{
  "id": "urn:ngsi-ld:Store:123",
  "type": "Store",
  "address": {
    "type": "PostalAddress",
    "value": {
      "streetAddress": "Bornholmer Straße 65",
      "addressRegion": "Berlin",
      "addressLocality": "Prenzlauer Berg",
      "postalCode": "10439"
    },
    "value": {
      "streetAddress": "Bornholmer Straße 65",
      "addressRegion": "Berlin",
      "addressLocality": "Prenzlauer Berg",
      "postalCode": "10439"
    },
    "metadata": {
      "verified": {
        "value": "true",
        "type": ": Boolean"
      }
    }
  },
  "location": {
    "type": "geo:json",
    "value": {
      "type": "Point",
      "coordinates": [13.3986, 52.5547]
    }
  },
  "name": {
    "type": "Text",
    "value": ": Bösebrücke Einkauf"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo '02. Send another killer request to CB, get error'
echo '================================================'
payload='{
  "id": "urn:ngsi-ld:Store:123",
  "type": "Store",
  "address": {
    "type": "PostalAddress",
    "value": {
      "streetAddress": "Bornholmer Straße 65",
      "addressRegion": "Berlin",
      "addressLocality": "Prenzlauer Berg",
      "postalCode": "9223372036854775807"
    },
    "value": {
      "streetAddress": "Bornholmer Straße 65",
      "addressRegion": "Berlin",
      "addressLocality": "Prenzlauer Berg",
      "postalCode": "10439"
    },
    "metadata": {
      "verified": {
        "value": "true",
        "type": ": Boolean"
      }
    }
  },
  "location": {
    "type": "geo:json",
    "value": {
      "type": "Point",
      "coordinates": [13.3986, 0.0]
    }
  },
  "name": {
    "type": "Text",
    "value": ": Bösebrücke Einkauf"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


--REGEXPECT--
01. Send killer request to CB, get error
========================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 72

{
    "description": "duplicated value key in attribute",
    "error": "BadRequest"
}


02. Send another killer request to CB, get error
================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 72

{
    "description": "duplicated value key in attribute",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
