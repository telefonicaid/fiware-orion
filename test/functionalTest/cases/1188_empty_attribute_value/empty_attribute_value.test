# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Empty Attribute Value for API v2

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v2/entities to create E1/A1=1
# 02. GET /v2/entities/E1 to see A1==1
# 03. PUT /v2/entities/E1/attrs/A1/value (="")
# 04. GET /v2/entities/E1 to see A1==""
# 05. PUT /v2/entities/E1/attrs/A1/value (=5)
# 06. GET /v2/entities/E1 to see A1==5
# 07. PUT /v2/entities/E1/attrs/A1/value (="")
# 08. GET /v2/entities/E1 to see A1==""
#


echo "01. POST /v2/entities to create E1/A1=1"
echo "======================================="
payload='{ "id": "E1", "type": "T1", "A1": "1" }'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "02. GET /v2/entities/E1 to see A1==1"
echo "===================================="
orionCurl --url /v2/entities/E1
echo
echo


echo '03. PUT /v2/entities/E1/attrs/A1/value (="")'
echo "============================================"
payload='""'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --in text/plain --out json -X PUT
echo
echo


echo '04. GET /v2/entities/E1 to see A1==""'
echo "====================================="
orionCurl --url /v2/entities/E1
echo
echo


echo "05. PUT /v2/entities/E1/attrs/A1/value (=5)"
echo "==========================================="
payload='5'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --in text/plain --out json -X PUT
echo
echo


echo "06. GET /v2/entities/E1 to see A1==5"
echo "===================================="
orionCurl --url /v2/entities/E1
echo
echo


echo '07. PUT /v2/entities/E1/attrs/A1/value (="")'
echo "============================================"
payload='""'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --in text/plain --out json -X PUT
echo
echo


echo '08. GET /v2/entities/E1 to see A1==""'
echo "====================================="
orionCurl --url /v2/entities/E1
echo
echo


--REGEXPECT--
01. POST /v2/entities to create E1/A1=1
=======================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T1
Content-Length: 0



02. GET /v2/entities/E1 to see A1==1
====================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 70

{
    "A1": {
        "metadata": {},
        "type": "Text",
        "value": "1"
    },
    "id": "E1",
    "type": "T1"
}


03. PUT /v2/entities/E1/attrs/A1/value (="")
============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. GET /v2/entities/E1 to see A1==""
=====================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 69

{
    "A1": {
        "metadata": {},
        "type": "Text",
        "value": ""
    },
    "id": "E1",
    "type": "T1"
}


05. PUT /v2/entities/E1/attrs/A1/value (=5)
===========================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. GET /v2/entities/E1 to see A1==5
====================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 68

{
    "A1": {
        "metadata": {},
        "type": "Text",
        "value": 5
    },
    "id": "E1",
    "type": "T1"
}


07. PUT /v2/entities/E1/attrs/A1/value (="")
============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



08. GET /v2/entities/E1 to see A1==""
=====================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 69

{
    "A1": {
        "metadata": {},
        "type": "Text",
        "value": ""
    },
    "id": "E1",
    "type": "T1"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
