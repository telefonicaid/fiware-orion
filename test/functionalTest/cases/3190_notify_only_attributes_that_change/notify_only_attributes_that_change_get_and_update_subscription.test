# Copyright 2019 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notify only attributes that change get and update subscription request for onlyChangedAttrs for NGSIv2 POST /v2/subscriptions, GET /v2/subscriptions/{subscription_id}, PATCH /v2/subscriptions/{subscription_id}, GET /v2/subscriptions/{subscription_id}.

--SHELL-INIT--
dbInit CB
brokerStart CB


--SHELL--

#
# 01. POST /v2/subscriptions, Create a subscription with onlyChanged: true.
# 02. GET /v2/subscriptions/{subscription_id}, Get subscription to check onlyChanged: true is rendered
# 03. PATCH /v2/subscriptions/{subscription_id}, Modify subscription to change onlyChanged to false
# 04. GET /v2/subscriptions/{subscription_id}, Get subscription to check onlyChanged: false is rendered
#


echo '01. POST /v2/subscriptions, Create a subscription with onlyChanged: true.'
echo '========================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "A","B","C"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:1028/notify"
    },
    "attrs": [
      "B","C","D"
    ],
    "onlyChangedAttrs":true
  },
  "expires": "2040-01-01T14:00:00.00Z",
  "throttling": 5
}'
orionCurl --url /v2/subscriptions --payload "$payload"
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo '02. GET /v2/subscriptions/{subscription_id}, Get subscription to check onlyChanged: true is rendered'
echo '===================================================================================================='
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo '03. PATCH /v2/entities/Room1/attrs, update the value of A and B attribute.'
echo '=========================================================================='
payload='{
    "notification": {
    	"http": {
           "url": "http://localhost:1028/notify"
        },
        "attrs": [
           "B","C","D"
        ],
        "onlyChangedAttrs": false
    }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo


echo '04. GET /v2/subscriptions/{subscription_id}, Get subscription to check onlyChanged: false is rendered'
echo '====================================================================================================='
orionCurl --url /v2/subscriptions/${subId}
echo
echo


--REGEXPECT--
01. POST /v2/subscriptions, Create a subscription with onlyChanged: true.
=========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. GET /v2/subscriptions/{subscription_id}, Get subscription to check onlyChanged: true is rendered
====================================================================================================
HTTP/1.1 200 OK
Content-Length: 400
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "A subscription to get info about Room1",
    "expires": "2040-01-01T14:00:00.000Z",
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [
            "B",
            "C",
            "D"
        ],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:1028/notify"
        },
        "onlyChangedAttrs": true
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "A",
                "B",
                "C"
            ]
        },
        "entities": [
            {
                "id": "Room1",
                "type": "Room"
            }
        ]
    },
    "throttling": 5
}


03. PATCH /v2/entities/Room1/attrs, update the value of A and B attribute.
==========================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. GET /v2/subscriptions/{subscription_id}, Get subscription to check onlyChanged: false is rendered
=====================================================================================================
HTTP/1.1 200 OK
Content-Length: 401
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "A subscription to get info about Room1",
    "expires": "2040-01-01T14:00:00.000Z",
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [
            "B",
            "C",
            "D"
        ],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:1028/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "A",
                "B",
                "C"
            ]
        },
        "entities": [
            {
                "id": "Room1",
                "type": "Room"
            }
        ]
    },
    "throttling": 5
}


--TEARDOWN--
brokerStop CB
dbDrop CB
