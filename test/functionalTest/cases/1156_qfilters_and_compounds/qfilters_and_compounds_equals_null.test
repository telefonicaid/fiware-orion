# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
String filters for compound values of attributes: equality of null

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create E1 with A1 with compound value containing all JSON types
# 02. GET /v2/entities?q=A1.N:null, see E1
# 03. GET /v2/entities?q=A1.N==null, see E1
# 04. GET /v2/entities?q=A1.N!=null, see nothing
#

echo "01. Create E1 with A1 with compound value containing all JSON types"
echo "==================================================================="
payload='{
  "id": "E1",
  "A1": {
    "value": {
      "i": 10,
      "f": 3.14,
      "s": "test_string",
      "T": true,
      "F": false,
      "N": null,
      "D": "2016-07-22T10:42:42.00Z"
    }
  },
  "A2": { "value": 22 }
}'
orionCurl --url /v2/entities --payload "${payload}"
echo
echo


echo "02. GET /v2/entities?q=A1.N:null, see E1"
echo "========================================"
orionCurl --url '/v2/entities?q=A1.N:null'
echo
echo


echo "03. GET /v2/entities?q=A1.N==null, see E1"
echo "========================================="
orionCurl --url '/v2/entities?q=A1.N==null'
echo
echo


echo "04. GET /v2/entities?q=A1.N!=null, see nothing"
echo "=============================================="
orionCurl --url '/v2/entities?q=A1.N!=null'
echo
echo


--REGEXPECT--
01. Create E1 with A1 with compound value containing all JSON types
===================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. GET /v2/entities?q=A1.N:null, see E1
========================================
HTTP/1.1 200 OK
Content-Length: 224
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "StructuredValue",
            "value": {
                "D": "2016-07-22T10:42:42.00Z",
                "F": false,
                "N": null,
                "T": true,
                "f": 3.14,
                "i": 10,
                "s": "test_string"
            }
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


03. GET /v2/entities?q=A1.N==null, see E1
=========================================
HTTP/1.1 200 OK
Content-Length: 224
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "StructuredValue",
            "value": {
                "D": "2016-07-22T10:42:42.00Z",
                "F": false,
                "N": null,
                "T": true,
                "f": 3.14,
                "i": 10,
                "s": "test_string"
            }
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


04. GET /v2/entities?q=A1.N!=null, see nothing
==============================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
