# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
String filters for compound values of attributes: LT/LE/GT/GE in subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# FIXME P5: Only tests for positive outcome (notification) have been implemented.
#           Also, each operator is tested, but only for *one* data type
#
# 01. Create E1 with A1 with compound value containing String, Integer and Float
# 02. Integer/GT: Create subscription 1 for q=A1.i>9 - notification
# 03. Dump and reset accumulator, see one notification
# 04. Float/LT: Create subscription 2 for q=A1.f<4.0 - notification
# 05. Dump and reset accumulator, see one notification
# 06. String/LE: Create subscription 3 for q=A1.s<=test_string - notification
# 07. Dump and reset accumulator, see one notification
# 08. String/GE: Create subscription 4 for q=A1.s>=fest_string - notification
# 09. Dump and reset accumulator, see one notification
# 10. Modify E1/A1 - provoke 4 notifications
# 11. Dump and reset accumulator, see 4 notifications
# 

echo "01. Create E1 with A1 with compound value containing String, Integer and Float"
echo "=============================================================================="
payload='{
  "id": "E1",
  "A1": {
    "value": {
      "i": 10,
      "f": 3.14,
      "s": "test_string",
      "modified": false
    }
  }
}'
orionCurl --url /v2/entities --payload "${payload}"
echo
echo


echo "02. Integer/GT: Create subscription 1 for q=A1.i>9 - notification"
echo "================================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "A1.i==10"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "03. Dump and reset accumulator, see one notification"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "04. Float/LT: Create subscription 2 for q=A1.f<4.0 - notification"
echo "================================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "A1.f<4.0"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "05. Dump and reset accumulator, see one notification"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "06. String/LE: Create subscription 3 for q=A1.s<=test_string - notification"
echo "==========================================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "A1.s<=test_string"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "07. Dump and reset accumulator, see one notification"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "08. String/GE: Create subscription 4 for q=A1.s>=fest_string - notification"
echo "==========================================================================="
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "A1.s>=fest_string"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "09. Dump and reset accumulator, see one notification"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "10. Modify E1/A1 - provoke 4 notifications"
echo "=========================================="
payload='{
  "A1": {
    "value": {
      "i": 10,
      "f": 3.14,
      "s": "test_string",
      "modified": true
    }
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "${payload}" -X PUT
echo
echo


echo "11. Dump and reset accumulator, see 4 notifications"
echo "==================================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create E1 with A1 with compound value containing String, Integer and Float
==============================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Integer/GT: Create subscription 1 for q=A1.i>9 - notification
=================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Dump and reset accumulator, see one notification
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 188
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "f": 3.14,
                    "i": 10,
                    "modified": false,
                    "s": "test_string"
                }
            },
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


04. Float/LT: Create subscription 2 for q=A1.f<4.0 - notification
=================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Dump and reset accumulator, see one notification
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 188
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "f": 3.14,
                    "i": 10,
                    "modified": false,
                    "s": "test_string"
                }
            },
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


06. String/LE: Create subscription 3 for q=A1.s<=test_string - notification
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Dump and reset accumulator, see one notification
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 188
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "f": 3.14,
                    "i": 10,
                    "modified": false,
                    "s": "test_string"
                }
            },
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


08. String/GE: Create subscription 4 for q=A1.s>=fest_string - notification
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. Dump and reset accumulator, see one notification
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 188
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "f": 3.14,
                    "i": 10,
                    "modified": false,
                    "s": "test_string"
                }
            },
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


10. Modify E1/A1 - provoke 4 notifications
==========================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



11. Dump and reset accumulator, see 4 notifications
===================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 187
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "f": 3.14,
                    "i": 10,
                    "modified": true,
                    "s": "test_string"
                }
            },
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 187
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "f": 3.14,
                    "i": 10,
                    "modified": true,
                    "s": "test_string"
                }
            },
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 187
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "f": 3.14,
                    "i": 10,
                    "modified": true,
                    "s": "test_string"
                }
            },
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 187
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {}, 
                "type": "StructuredValue", 
                "value": {
                    "f": 3.14,
                    "i": 10,
                    "modified": true,
                    "s": "test_string"
                }
            },
            "id": "E1", 
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
