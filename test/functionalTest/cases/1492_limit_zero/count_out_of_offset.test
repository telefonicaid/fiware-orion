# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Count out of offset must work

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create two entities, of different types
# 02. Create two registrations
# 03. Create two subscriptions
# 04. GET /v2/entities with offset=4 and count, should see fiware-total-count 2
# 05. GET /v2/types with offset=4 and count, should see fiware-total-count 2
# 06. GET /v2/subscriptions with offset=4 and count, should see fiware-total-count 2
# 07. GET /v2/registrations with offset=4 and count, should see fiware-total-count 2
#

echo "01. Create two entities, of different types"
echo "==========================================="
payload='{
  "id": "E",
  "type": "T1"
}'
payload2='{
  "id": "E",
  "type": "T2"
}'
orionCurl --url /v2/entities -X POST --payload "$payload"
orionCurl --url /v2/entities -X POST --payload "$payload2"
echo
echo


echo "02. Create two registrations"
echo "============================"
payload='{
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [ "A1" ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v2"
     }
   }
}'
orionCurl --url /v2/registrations --payload "$payload"
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "03. Create two subscriptions"
echo "============================"
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1",
        "type": "T1"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "04. GET /v2/entities with offset=4 and count, should see fiware-total-count 2"
echo "============================================================================="
orionCurl --url '/v2/entities?offset=4&options=count'
echo
echo


echo "05. GET /v2/types with offset=4 and count, should see fiware-total-count 2"
echo "=========================================================================="
orionCurl --url '/v2/types?offset=4&options=count'
echo
echo


echo "06. GET /v2/subscriptions with offset=4 and count, should see fiware-total-count 2"
echo "=================================================================================="
orionCurl --url '/v2/subscriptions?offset=4&options=count'
echo
echo


echo "07. GET /v2/registrations with offset=4 and count, should see fiware-total-count 2"
echo "=================================================================================="
orionCurl --url '/v2/registrations?offset=4&options=count'
echo
echo


--REGEXPECT--
01. Create two entities, of different types
===========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T2
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create two registrations
============================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create two subscriptions
============================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. GET /v2/entities with offset=4 and count, should see fiware-total-count 2
=============================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Total-Count: 2
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


05. GET /v2/types with offset=4 and count, should see fiware-total-count 2
==========================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Total-Count: 2
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


06. GET /v2/subscriptions with offset=4 and count, should see fiware-total-count 2
==================================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Total-Count: 2
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


07. GET /v2/registrations with offset=4 and count, should see fiware-total-count 2
==================================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Total-Count: 2
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
