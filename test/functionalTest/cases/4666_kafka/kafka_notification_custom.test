# Copyright 2025 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
#   General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
KAFKA custom notification tests

--SHELL-INIT--
dbInit CB

# tracelevel 164 is the one for KAFKA notification logs
kafkaCreateTopics "${KAFKA_BOOTSTRAP_A}" sub_E1 sub_E2
brokerStart CB 164 IPV4
accumulatorStart --pretty-print --bootstrapServers "${KAFKA_BOOTSTRAP_A}" --kafkaTopic "^sub_.*"

--SHELL--

#
# Hint:  A Kafka cluster accessible at localhost:9092,localhost:9094 is required for this .test:
#
#
# 01. Create KAFKA custom sub for entity E with topic sub_${id} payload A:{$A}
# 02. Create entity E1 with A=1
# 03. Create entity E2 with A=2
# 04. Dump and reset accumulator, see: 1 KAFKA sub_E1 E A:1, 1 KAFKA sub_E2 A:2
# 05. Update E1 with A=10
# 06. Update E2 with A=20
# 07. Dump and reset accumulator, see: 1 KAFKA sub_E1 E A:10, 1 KAFKA sub_E2 A:20
# 08. GET subscriptions: 1 sub with timesSent 4 and lastSuccess
#

echo '01. Create KAFKA custom sub for entity E with topic sub_${id} payload A:${A}'
echo "==========================================================================="
payload='{
  "description": "KAFKA sub",
  "subject": {
    "entities": [
      {
        "idPattern": ".*",
        "type": "T"
      }
    ]
  },
  "notification": {
    "kafkaCustom": {
      "url": "kafka://localhost:9092,localhost:9094",
      "topic": "sub_${id}",
      "payload": "{ %22A%22: %22${A}%22 }"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E1 with A=1"
echo "============================="
payload='{
  "id": "E1",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Float"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


# Not sure but sometimes a notification may be lost at the accumulator if we
# don't wait. Maybe the dump requests is faster than the storing of KAFKA notifications
# due to the lock in accumulator-server.py?
sleep 2s


echo "03. Dump and reset accumulator, see: 1 KAFKA sub_E1 E A:1"
echo "========================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "04. Create entity E2 with A=2"
echo "============================="
payload='{
  "id": "E2",
  "type": "T",
  "A": {
    "value": 2,
    "type": "Float"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


# Not sure but sometimes a notification may be lost at the accumulator if we
# don't wait. Maybe the dump requests is faster than the storing of KAFKA notifications
# due to the lock in accumulator-server.py?
sleep 1s


echo "05. Dump and reset accumulator, see: 1 KAFKA sub_E2 A:2"
echo "======================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "06. Update entity E1 with A=10"
echo "=============================="
payload='{
  "A": {
    "value": 10,
    "type": "Float"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


# Not sure but sometimes a notification may be lost at the accumulator if we
# don't wait. Maybe the dump requests is faster than the storing of KAFKA notifications
# due to the lock in accumulator-server.py?
sleep 1s


echo "07. Dump and reset accumulator, see: 1 KAFKA sub/E1 E A:10"
echo "=========================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "08. Update entity E2 with A=20"
echo "=============================="
payload='{
  "A": {
    "value": 20,
    "type": "Float"
  }
}'
orionCurl --url /v2/entities/E2/attrs --payload "$payload"
echo
echo



# Not sure but sometimes a notification may be lost at the accumulator if we
# don't wait. Maybe the dump requests is faster than the storing of KAFKA notifications
# due to the lock in accumulator-server.py?
sleep 1s


echo "09. Dump and reset accumulator, see: 1 KAFKA sub/E2 A:20"
echo "========================================================"
accumulatorDump
accumulatorReset
echo
echo


echo "10. GET subscriptions: 1 sub with timesSent 4 and lastSuccess"
echo "============================================================="
orionCurl --url /v2/subscriptions
echo
echo


--REGEXPECT--
01. Create KAFKA custom sub for entity E with topic sub_${id} payload A:${A}
===========================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f\-]{24})
Content-Length: 0



02. Create entity E1 with A=1
=============================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



03. Dump and reset accumulator, see: 1 KAFKA sub_E1 E A:1
=========================================================
Kafka message at topic sub_E1
Key: REGEX([0-9a-f\-]{24})
Headers:
  Fiware-Servicepath: /
Payload:
{
    "A": "1"
}
=======================================


04. Create entity E2 with A=2
=============================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T
Content-Length: 0



05. Dump and reset accumulator, see: 1 KAFKA sub_E2 A:2
=======================================================
Kafka message at topic sub_E2
Key: REGEX([0-9a-f\-]{24})
Headers:
  Fiware-Servicepath: /
Payload:
{
    "A": "2"
}
=======================================


06. Update entity E1 with A=10
==============================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



07. Dump and reset accumulator, see: 1 KAFKA sub/E1 E A:10
==========================================================
Kafka message at topic sub_E1
Key: REGEX([0-9a-f\-]{24})
Headers:
  Fiware-Servicepath: /
Payload:
{
    "A": "10"
}
=======================================


08. Update entity E2 with A=20
==============================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



09. Dump and reset accumulator, see: 1 KAFKA sub/E2 A:20
========================================================
Kafka message at topic sub_E2
Key: REGEX([0-9a-f\-]{24})
Headers:
  Fiware-Servicepath: /
Payload:
{
    "A": "20"
}
=======================================


10. GET subscriptions: 1 sub with timesSent 4 and lastSuccess
=============================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 504

[
    {
        "description": "KAFKA sub",
        "id": "REGEX([0-9a-f\-]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "covered": false,
            "kafkaCustom": {
                "payload": "{ %22A%22: %22${A}%22 }",
                "topic": "sub_${id}",
                "url": "kafka://localhost:9092,localhost:9094"
            },
            "lastNotification": "REGEX(.*)",
            "lastSuccess": "REGEX(.*)",
            "onlyChangedAttrs": false,
            "timesSent": 4
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "notifyOnMetadataChange": true
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


--TEARDOWN--
accumulatorStop
kafkaDestroyTopics "${KAFKA_BOOTSTRAP_A}" sub_E1 sub_E2
brokerStop CB
dbDrop CB
