# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Convenience Individual Context Entity Attribute - PUT OK

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "+++++ 1. create entity +++++"
url="/v1/contextEntities/Room1"
payload='{
  "attributes" : [
    {
      "name" : "temperature",
      "type" : "centigrade",
      "value" : "23"
    },
    {
      "name" : "pressure",
      "type" : "mmHg",
      "value" : "720"
    }
  ]
}'
orionCurl --url "$url" --payload "$payload"

echo "+++++ 2. put an entity with type +++++"
url="/v1/contextEntities/Room1/attributes/temperature"
payload='{
  "type": "centigrade",
  "value": "10"
}'
orionCurl --url "$url" --payload "$payload" -X "PUT"

echo "+++++ 3. query +++++"
orionCurl --url "/v1/contextEntities/Room1"

echo "+++++ 4. put an entity without type +++++"
url="/v1/contextEntities/Room1/attributes/temperature"
payload='{
  "value": "31"
}'
orionCurl --url "$url" --payload "$payload" -X "PUT"

echo "+++++ 5. query again +++++"
orionCurl --url "/v1/contextEntities/Room1"

echo "+++++ 6. update without type +++++"
url="/v1/contextEntities/Room1/attributes/temperature"
payload='{
  "value": "39"
}'
orionCurl --url "$url" --payload "$payload" -X "PUT"

echo "+++++ 7. query +++++"
orionCurl --url "/v1/contextEntities/Room1/attributes/temperature"

echo "+++++ 8. update with type +++++"
url="/v1/contextEntities/Room1/attributes/temperature"
payload='{
  "type": "Fahrenheit",
  "value": "99"
}'
orionCurl --url "$url" --payload "$payload" -X "PUT"

echo "+++++ 9. query (JSON) +++++"
orionCurl --url "/v1/contextEntities/Room1/attributes/temperature"

--REGEXPECT--
+++++ 1. create entity +++++
HTTP/1.1 200 OK
Content-Length: 229
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "temperature",
                    "type": "centigrade",
                    "value": ""
                },
                {
                    "name": "pressure",
                    "type": "mmHg",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "Room1",
    "isPattern": "false",
    "type": ""
}
+++++ 2. put an entity with type +++++
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}
+++++ 3. query +++++
HTTP/1.1 200 OK
Content-Length: 230
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "pressure",
                "type": "mmHg",
                "value": "720"
            },
            {
                "name": "temperature",
                "type": "centigrade",
                "value": "10"
            }
        ],
        "id": "Room1",
        "isPattern": "false",
        "type": ""
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
+++++ 4. put an entity without type +++++
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}
+++++ 5. query again +++++
HTTP/1.1 200 OK
Content-Length: 230
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "pressure",
                "type": "mmHg",
                "value": "720"
            },
            {
                "name": "temperature",
                "type": "centigrade",
                "value": "31"
            }
        ],
        "id": "Room1",
        "isPattern": "false",
        "type": ""
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
+++++ 6. update without type +++++
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}
+++++ 7. query +++++
HTTP/1.1 200 OK
Content-Length: 120
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "temperature",
            "type": "centigrade",
            "value": "39"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
+++++ 8. update with type +++++
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}
+++++ 9. query (JSON) +++++
HTTP/1.1 200 OK
Content-Length: 120
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "temperature",
            "type": "Fahrenheit",
            "value": "99"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
--TEARDOWN--
brokerStop CB
dbDrop CB
