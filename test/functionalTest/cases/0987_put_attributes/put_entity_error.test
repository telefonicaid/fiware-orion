# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
PUT /v2/entities/E1 on entity that doesn't exist

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Modify non-existing entity E1
# 02. Make sure E1 does not exist
# 03. Create E1
# 04. Make sure E1 is as created
# 05. Modify E1
# 06. Make sure E1 is as modified
#

echo "01. Modify non-existing entity E1"
echo "================================="
payload='{ "attr1": 1 }'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues' --payload "$payload" -X PUT
echo
echo


echo "02. Make sure E1 does not exist"
echo "==============================="
orionCurl --url /v2/entities/E1
echo
echo


echo "03. Create E1"
echo "============="
payload='{ "id": "E1", "attr1": 3 }'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "04. Make sure E1 is as created"
echo "=============================="
orionCurl --url /v2/entities/E1
echo
echo


echo "05. Modify E1"
echo "============="
payload='{ "attr1": 5 }'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues' --payload "$payload" -X PUT
echo
echo


echo "06. Make sure E1 is as modified"
echo "==============================="
orionCurl --url /v2/entities/E1
echo
echo


--REGEXPECT--
01. Modify non-existing entity E1
=================================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


02. Make sure E1 does not exist
===============================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


03. Create E1
=============
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



04. Make sure E1 is as created
==============================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "attr1": {
        "metadata": {},
        "type": "Number",
        "value": 3
    },
    "id": "E1",
    "type": "Thing"
}


05. Modify E1
=============
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. Make sure E1 is as modified
===============================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "attr1": {
        "metadata": {},
        "type": "Number",
        "value": 5
    },
    "id": "E1",
    "type": "Thing"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
