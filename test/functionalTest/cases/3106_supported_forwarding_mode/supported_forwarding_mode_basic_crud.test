# Copyright 2021 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
supportedFowardingMode basic CRUD

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255 IPv4 -statCounters

--SHELL--

#
# 01. Register without supportedFowardingMode
# 02. Register with supportedForwardingMode = all
# 03. Register with supportedForwardingMode = update
# 04. Register with supportedForwardingMode = query
# 05. Register with supportedForwardingMode = none
# 06. GET registrations and see all them
# 07. Register with supportedFowardingMode = xxx, get error
#


echo "01. Register without supportedForwardingMode"
echo "============================================"
payload='{
   "description": "Without supportedForwardingMode",
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [
       "A1"
     ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v2"
     }
   }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "02. Register with supportedForwardingMode = all"
echo "==============================================="
payload='{
   "description": "supportedForwardingMode all",
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [
       "A1"
     ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v2"
     },
     "supportedForwardingMode": "all"
   }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "03. Register with supportedForwardingMode = query"
echo "================================================="
payload='{
   "description": "supportedForwardingMode query",
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [
       "A1"
     ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v2"
     },
     "supportedForwardingMode": "query"
   }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "04. Register with supportedForwardingMode = update"
echo "=================================================="
payload='{
   "description": "supportedForwardingMode update",
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [
       "A1"
     ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v2"
     },
     "supportedForwardingMode": "update"
   }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "05. Register with supportedForwardingMode = none"
echo "================================================"
payload='{
   "description": "supportedForwardingMode none",
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [
       "A1"
     ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v2"
     },
     "supportedForwardingMode": "none"
   }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "06. GET registrations and see all them"
echo "======================================"
orionCurl --url /v2/registrations
echo
echo


echo "07. Register with supportedFowardingMode = xxx, get error"
echo "========================================================="
payload='{
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [
       "A1"
     ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v2"
     },
     "supportedForwardingMode": "xxxx"
   }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


--REGEXPECT--
01. Register without supportedForwardingMode
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Register with supportedForwardingMode = all
===============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Register with supportedForwardingMode = query
=================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Register with supportedForwardingMode = update
==================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Register with supportedForwardingMode = none
================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. GET registrations and see all them
======================================
HTTP/1.1 200 OK
Content-Length: 1397
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "dataProvided": {
            "attrs": [
                "A1"
            ],
            "entities": [
                {
                    "id": "E1",
                    "type": "T1"
                }
            ]
        },
        "description": "Without supportedForwardingMode",
        "id": "REGEX([0-9a-f\-]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": true,
            "supportedForwardingMode": "all"
        },
        "status": "active"
    },
    {
        "dataProvided": {
            "attrs": [
                "A1"
            ],
            "entities": [
                {
                    "id": "E1",
                    "type": "T1"
                }
            ]
        },
        "description": "supportedForwardingMode all",
        "id": "REGEX([0-9a-f\-]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": true,
            "supportedForwardingMode": "all"
        },
        "status": "active"
    },
    {
        "dataProvided": {
            "attrs": [
                "A1"
            ],
            "entities": [
                {
                    "id": "E1",
                    "type": "T1"
                }
            ]
        },
        "description": "supportedForwardingMode query",
        "id": "REGEX([0-9a-f\-]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": true,
            "supportedForwardingMode": "query"
        },
        "status": "active"
    },
    {
        "dataProvided": {
            "attrs": [
                "A1"
            ],
            "entities": [
                {
                    "id": "E1",
                    "type": "T1"
                }
            ]
        },
        "description": "supportedForwardingMode update",
        "id": "REGEX([0-9a-f\-]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": true,
            "supportedForwardingMode": "update"
        },
        "status": "active"
    },
    {
        "dataProvided": {
            "attrs": [
                "A1"
            ],
            "entities": [
                {
                    "id": "E1",
                    "type": "T1"
                }
            ]
        },
        "description": "supportedForwardingMode none",
        "id": "REGEX([0-9a-f\-]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": true,
            "supportedForwardingMode": "none"
        },
        "status": "active"
    }
]


07. Register with supportedFowardingMode = xxx, get error
=========================================================
HTTP/1.1 400 Bad Request
Content-Length: 81
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "invalid value of /supportedForwardingMode/",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
