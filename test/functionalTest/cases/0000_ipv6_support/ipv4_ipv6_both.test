# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
IPv6 IPv4 Both

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print 127.0.0.1 ${LISTENER_PORT}
accumulatorStart --pretty-print ::1 ${LISTENER2_PORT}

--SHELL--
echo "1: ++++++++++++++++++++"
orionCurl --url "/version" --noPayloadCheck --host "[::1]" -g 2> /dev/null

echo "2: ++++++++++++++++++++"
orionCurl --url "/version" --noPayloadCheck --host "127.0.0.1" -g 2> /dev/null

echo "3: ++++++++++++++++++++"
url="/v1/subscribeContext"
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom"
    }
  ],
  "attributes": [
    "temperature",
    "lightstatus"
  ],
  "reference": "http://::1:'${LISTENER2_PORT}'/notify",
  "duration": "PT1H",
  "notifyConditions": [
      {
          "type": "ONCHANGE",
          "condValues": [
              "temperature",
              "lightstatus"
          ]
      }
  ]
}'
orionCurl --url "$url" --payload "$payload" --host "[::1]" -g 2> /dev/null

echo "4: ++++++++++++++++++++"
url="/v1/subscribeContext"
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom"
    }
  ],
  "attributes": [
    "temperature",
    "lightstatus"
  ],
  "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
  "duration": "PT1H",
  "notifyConditions": [
      {
          "type": "ONCHANGE",
          "condValues": [
              "temperature",
              "lightstatus"
          ]
      }
  ]
}'
orionCurl --url "$url" --payload "$payload" --host "127.0.0.1" -g 2> /dev/null

echo "5: ++++++++++++++++++++"
url="/v1/updateContext"
payload='{
  "contextElements": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom",
      "attributes": [
        {
          "name": "pressure",
          "type": "clima",
          "value": "p2300"
        },
        {
          "name": "lightstatus",
          "type": "light",
          "value": "L23"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "$payload" --host "[::1]" -g 2> /dev/null

echo "6: ++++++++++++++++++++"
#Get accumulated data
accumulator2Dump IPV6

echo "7: ++++++++++++++++++++"
#Get accumulated data
accumulatorDump


--REGEXPECT--
1: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: REGEX(\d+)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
"orion" : {
  "version" : "REGEX(.*)",
  "uptime" : "REGEX(.*)",
  "git_hash" : "REGEX(([0-9a-f]{40}|nogitversion))",
  "compile_time" : "REGEX(.*)",
  "compiled_by" : "REGEX(.*)",
  "compiled_in" : "REGEX(.*)",
  "release_date" : "REGEX(.*)",
  "machine" : "REGEX(.*)",
  "doc" : "REGEX(.*)",
  "libversions": {
     "boost": "REGEX(.*)",
     "libcurl": "REGEX(.*)",
     "libmosquitto": "REGEX(.*)",
     "libmicrohttpd": "REGEX(.*)",
     "openssl": "REGEX(.*)",
     "rapidjson": "REGEX(.*)",
     "mongoc": "REGEX(.*)",
     "bson": "REGEX(.*)"
  }
}
}

2: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: REGEX(\d+)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
"orion" : {
  "version" : "REGEX(.*)",
  "uptime" : "REGEX(.*)",
  "git_hash" : "REGEX(([0-9a-f]{40}|nogitversion))",
  "compile_time" : "REGEX(.*)",
  "compiled_by" : "REGEX(.*)",
  "compiled_in" : "REGEX(.*)",
  "release_date" : "REGEX(.*)",
  "machine" : "REGEX(.*)",
  "doc" : "REGEX(.*)",
  "libversions": {
     "boost": "REGEX(.*)",
     "libcurl": "REGEX(.*)",
     "libmosquitto": "REGEX(.*)",
     "libmicrohttpd": "REGEX(.*)",
     "openssl": "REGEX(.*)",
     "rapidjson": "REGEX(.*)",
     "mongoc": "REGEX(.*)",
     "bson": "REGEX(.*)"
  }
}
}

3: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 85
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "PT1H",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}
4: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 85
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "PT1H",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}
5: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 253
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "pressure",
                        "type": "clima",
                        "value": ""
                    },
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": ""
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
6: ++++++++++++++++++++
POST http://::1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 279
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: ::1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": "L23"
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
7: ++++++++++++++++++++
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 279
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": "L23"
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
accumulatorStop $LISTENER2_PORT
dbDrop CB
