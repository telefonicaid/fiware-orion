# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
mq as URI param for metadata in filters

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a subscription with q=A1==1 AND mq=A1.M1==2
# 02. Create entity E1, with attr A1=1, having metadata M1=1
# 03. Create entity E2, with attr A1=1, having metadata M1=2
# 04. Create entity E3, with attr A1=1, having metadata M2=3
# 05. Create entity E4, with attr A1=2, having metadata M2=2 and M3=3 (never to be found)
# 06. GET entities matching q=A1==1 AND mq=A1.M1==2, see E2
# 07. GET entities matching q=A1 AND mq=A1.M1, see E1 and E2
# 08. Dump accumulator, see E2, then reset accumulator
# 09. Modify the subscription to have q=A1 AND mq=A1.M1
# 10. GET E3, just to check the value/type of its A1 attribute
# 11. Update E3, setting M1 to A1 with overrideMetadata
# 12. GET E3, just to check the value/type of its A1 attribute
# 13. Dump accumulator, see E3
#

echo "01. Create a subscription with q=A1==1 AND mq=A1.M1==2"
echo "======================================================"
payload='
{
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ],
    "condition": {
      "attrs": [ "A1" ],
      "expression": {
        "q": "A1==1",
        "mq": "A1.M1==2"
      }
    }
  },
  "notification": {
    "http": {"url": "http://localhost:'${LISTENER_PORT}'/notify"},
    "attrs": [ ]
  },
  "expires": "2050-04-05T14:00:00.00Z",
  "status": "active"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "02. Create entity E1, with attr A1=1, having metadata M1=1"
echo "=========================================================="
payload='{
  "id": "E1",
  "A1": {
    "value": 1,
    "metadata": {
      "M1": {
        "value": 1
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Create entity E2, with attr A1=1, having metadata M1=2"
echo "=========================================================="
payload='{
  "id": "E2",
  "A1": {
    "value": 1,
    "metadata": {
      "M1": {
        "value": 2
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. Create entity E3, with attr A1=1, having metadata M2=3"
echo "=========================================================="
payload='{
  "id": "E3",
  "A1": {
    "value": 1,
    "metadata": {
      "M2": {
        "value": 3
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "05. Create entity E4, with attr A1=2, having metadata M2=2 and M3=3 (never to be found)"
echo "======================================================================================="
payload='{
  "id": "E4",
  "A1": {
    "value": 2,
    "metadata": {
      "M2": {
        "value": 2
      },
      "M3": {
        "value": 3
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "06. GET entities matching q=A1==1 AND mq=A1.M1==2, see E2"
echo "========================================================="
orionCurl --url '/v2/entities?q=A1==1&mq=A1.M1==2'
echo
echo


echo "07. GET entities matching q=A1 AND mq=A1.M1, see E1 and E2"
echo "=========================================================="
orionCurl --url '/v2/entities?q=A1&mq=A1.M1'
echo
echo


echo "08. Dump accumulator, see E2, then reset accumulator"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "09. Modify the subscription to have q=A1 AND mq=A1.M1"
echo "====================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ],
    "condition": {
      "attrs": [ "A1" ],
      "expression": {
        "q": "A1",
        "mq": "A1.M1"
      }
    }
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo


echo "10. GET E3, just to check the value/type of its A1 attribute"
echo "============================================================"
orionCurl --url /v2/entities/E3
echo
echo


echo "11. Update E3, setting M1 to A1 with overrideMetadata"
echo "====================================================="
payload='{
  "A1": {
    "metadata": {
      "M1": {
        "value": 3
      }
    }
  }
}'
orionCurl --url '/v2/entities/E3/attrs?options=overrideMetadata' --payload "$payload" -X PATCH
echo
echo


echo "12. GET E3, just to check the value/type of its A1 attribute"
echo "============================================================"
orionCurl --url /v2/entities/E3
echo
echo


echo "13. Dump accumulator, see E3"
echo "============================"
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create a subscription with q=A1==1 AND mq=A1.M1==2
======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E1, with attr A1=1, having metadata M1=1
==========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create entity E2, with attr A1=1, having metadata M1=2
==========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Create entity E3, with attr A1=1, having metadata M2=3
==========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create entity E4, with attr A1=2, having metadata M2=2 and M3=3 (never to be found)
=======================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E4?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. GET entities matching q=A1==1 AND mq=A1.M1==2, see E2
=========================================================
HTTP/1.1 200 OK
Content-Length: 107
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 2
                }
            },
            "type": "Number",
            "value": 1
        },
        "id": "E2",
        "type": "Thing"
    }
]


07. GET entities matching q=A1 AND mq=A1.M1, see E1 and E2
==========================================================
HTTP/1.1 200 OK
Content-Length: 213
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 1
                }
            },
            "type": "Number",
            "value": 1
        },
        "id": "E1",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 2
                }
            },
            "type": "Number",
            "value": 1
        },
        "id": "E2",
        "type": "Thing"
    }
]


08. Dump accumulator, see E2, then reset accumulator
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 160
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number",
                        "value": 2
                    }
                },
                "type": "Number",
                "value": 1
            },
            "id": "E2",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


09. Modify the subscription to have q=A1 AND mq=A1.M1
=====================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



10. GET E3, just to check the value/type of its A1 attribute
============================================================
HTTP/1.1 200 OK
Content-Length: 105
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {
            "M2": {
                "type": "Number",
                "value": 3
            }
        },
        "type": "Number",
        "value": 1
    },
    "id": "E3",
    "type": "Thing"
}


11. Update E3, setting M1 to A1 with overrideMetadata
=====================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



12. GET E3, just to check the value/type of its A1 attribute
============================================================
HTTP/1.1 200 OK
Content-Length: 106
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "Number",
                "value": 3
            }
        },
        "type": "None",
        "value": null
    },
    "id": "E3",
    "type": "Thing"
}


13. Dump accumulator, see E3
============================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 161
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number",
                        "value": 3
                    }
                },
                "type": "None",
                "value": null
            },
            "id": "E3",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
