# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
mq as URI param for metadata in filters

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create an entity E1 with attr A1 with metadata M1=12
# 02. Create an entity E2 with attr A1 with metadata M1=13
# 03. Create an entity E3 with attr A1 with metadata M1=14
# 04. Lookup all entities having A1.M1==12, see E1
# 05. Create a subscription for all entities/A1 AND mq=A1.M1==13
# 05b. GET subscription to see 'mq' correctly rendered
# 06. Dump accumulator, see E2, then reset accumulator
# 07. Modify E1/A1, setting A1/M1=13
# 08. Dump accumulator, see E1, then reset accumulator
# 09. Update subscription, without really changing anything
# 10. Dump accumulator, see E1 and E2, then reset accumulator
# 11. Check unary operator for mq: !A1.M1 - nothing found
# 12. Check unary operator for mq: A1.M1 - all three entities
# 13. Check unary operator for mq: !A1.M2 - all three entities
# 14. Check unary operator for mq: A1.M2 - nothing found
# 15. Check unary operator for mq: A2.M9 - nothing found
# 16. Check unary operator for mq: !A2.M9 - all three entities
# 17. Create subscription with mq: !A2.M2
# 18. Dump accumulator, see all three, then reset accumulator
# 19. Create subscription with mq: A2.M2
# 20. Dump accumulator, see nothing
#

echo "01. Create an entity E1 with attr A1 with metadata M1=12"
echo "========================================================"
payload='{
  "id": "E1",
  "A1": {
    "value": "01",
    "metadata": {
      "M1": {
        "value": 12
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create an entity E2 with attr A1 with metadata M1=13"
echo "========================================================"
payload='{
  "id": "E2",
  "A1": {
    "value": "02",
    "metadata": {
      "M1": {
        "value": 13
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Create an entity E3 with attr A1 with metadata M1=14"
echo "========================================================"
payload='{
  "id": "E3",
  "A1": {
    "value": "03",
    "metadata": {
      "M1": {
        "value": 14
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. Lookup all entities having A1.M1==12, see E1"
echo "================================================"
orionCurl --url '/v2/entities?mq=A1.M1==12'
echo
echo


echo "05. Create a subscription for all entities/A1 AND mq=A1.M1==13"
echo "=============================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ],
    "condition": {
      "attrs": [ "A1" ],
      "expression": {
        "mq": "A1.M1==13"
      }
    }
  },
  "notification": {
    "http": {"url": "http://localhost:'${LISTENER_PORT}'/notify"},
    "attrs": [ ]
  },
  "expires": "2050-04-05T14:00:00.00Z",
  "status": "active"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "05b. GET subscription to see 'mq' correctly rendered"
echo "===================================================="
orionCurl --url /v2/subscriptions/$subId
echo
echo


echo "06. Dump accumulator, see E2, then reset accumulator"
echo "===================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "07. Modify E1/A1, setting A1/M1=13"
echo "=================================="
payload='{
  "A1": {
    "value": "07",
    "metadata": {
      "M1": {
        "value": 13
      }
    }
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X PATCH
echo
echo


echo "08. Dump accumulator, see E1"
echo "============================"
accumulatorDump
accumulatorReset
echo
echo


echo "09. Update subscription, without really changing anything"
echo "========================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ],
    "condition": {
      "attrs": [ "A1" ],
      "expression": {
        "mq": "A1.M1==13"
      }
    }
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo


echo "10. Dump accumulator, see E1 and E2, then reset accumulator"
echo "==========================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "11. Check unary operator for mq: !A1.M1 - nothing found"
echo "======================================================="
orionCurl --url '/v2/entities?mq=!A1.M1'
echo
echo


echo "12. Check unary operator for mq: A1.M1 - all three entities"
echo "==========================================================="
orionCurl --url '/v2/entities?mq=A1.M1'
echo
echo


echo "13. Check unary operator for mq: !A1.M2 - all three entities"
echo "==========================================================="
orionCurl --url '/v2/entities?mq=!A1.M2'
echo
echo


echo "14. Check unary operator for mq: A1.M2 - nothing found"
echo "======================================================="
orionCurl --url '/v2/entities?mq=A1.M2'
echo
echo


echo "15. Check unary operator for mq: A2.M9 - nothing found"
echo "======================================================"
orionCurl --url '/v2/entities?mq=A2.M9'
echo
echo


echo "16. Check unary operator for mq: !A2.M9 - all three entities"
echo "============================================================"
orionCurl --url '/v2/entities?mq=!A2.M9'
echo
echo


echo "17. Create subscription with mq: !A2.M2"
echo "======================================="
payload='
{
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ],
    "condition": {
      "attrs": [ ],
      "expression": {
        "mq": "!A2.M2"
      }
    }
  },
  "notification": {
    "http": {"url": "http://localhost:'${LISTENER_PORT}'/notify"},
    "attrs": [ ]
  },
  "expires": "2050-04-05T14:00:00.00Z",
  "status": "active"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "18. Dump accumulator, see all three, then reset accumulator"
echo "==========================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "19. Create subscription with mq: A2.M2"
echo "======================================"
payload='
{
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ],
    "condition": {
      "attrs": [ ],
      "expression": {
        "mq": "A2.M2"
      }
    }
  },
  "notification": {
    "http": {"url": "http://localhost:'${LISTENER_PORT}'/notify"},
    "attrs": [ ]
  },
  "expires": "2050-04-05T14:00:00.00Z",
  "status": "active"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "20. Dump accumulator, see nothing"
echo "================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create an entity E1 with attr A1 with metadata M1=12
========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create an entity E2 with attr A1 with metadata M1=13
========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create an entity E3 with attr A1 with metadata M1=14
========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Lookup all entities having A1.M1==12, see E1
================================================
HTTP/1.1 200 OK
Content-Length: 109
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 12
                }
            },
            "type": "Text",
            "value": "01"
        },
        "id": "E1",
        "type": "Thing"
    }
]


05. Create a subscription for all entities/A1 AND mq=A1.M1==13
==============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05b. GET subscription to see 'mq' correctly rendered
====================================================
HTTP/1.1 200 OK
Content-Length: 414
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "expires": "2050-04-05T14:00:00.00Z",
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "http": {
            "url": "http://localhost:REGEX(\d+)/notify"
        },
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "timesSent": 1
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "A1"
            ],
            "expression": {
                "mq": "A1.M1==13"
            }
        },
        "entities": [
            {
                "idPattern": ".*"
            }
        ]
    }
}


06. Dump accumulator, see E2, then reset accumulator
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 162
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number", 
                        "value": 13
                    }
                }, 
                "type": "Text", 
                "value": "02"
            }, 
            "id": "E2", 
            "type": "Thing"
        }
    ], 
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


07. Modify E1/A1, setting A1/M1=13
==================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Dump accumulator, see E1
============================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 162
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number", 
                        "value": 13
                    }
                }, 
                "type": "Text", 
                "value": "07"
            }, 
            "id": "E1", 
            "type": "Thing"
        }
    ], 
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


09. Update subscription, without really changing anything
=========================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



10. Dump accumulator, see E1 and E2, then reset accumulator
===========================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 270
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number", 
                        "value": 13
                    }
                }, 
                "type": "Text", 
                "value": "07"
            }, 
            "id": "E1", 
            "type": "Thing"
        }, 
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number", 
                        "value": 13
                    }
                }, 
                "type": "Text", 
                "value": "02"
            }, 
            "id": "E2", 
            "type": "Thing"
        }
    ], 
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


11. Check unary operator for mq: !A1.M1 - nothing found
=======================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


12. Check unary operator for mq: A1.M1 - all three entities
===========================================================
HTTP/1.1 200 OK
Content-Length: 325
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 13
                }
            },
            "type": "Text",
            "value": "07"
        },
        "id": "E1",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 13
                }
            },
            "type": "Text",
            "value": "02"
        },
        "id": "E2",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 14
                }
            },
            "type": "Text",
            "value": "03"
        },
        "id": "E3",
        "type": "Thing"
    }
]


13. Check unary operator for mq: !A1.M2 - all three entities
===========================================================
HTTP/1.1 200 OK
Content-Length: 325
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 13
                }
            },
            "type": "Text",
            "value": "07"
        },
        "id": "E1",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 13
                }
            },
            "type": "Text",
            "value": "02"
        },
        "id": "E2",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 14
                }
            },
            "type": "Text",
            "value": "03"
        },
        "id": "E3",
        "type": "Thing"
    }
]


14. Check unary operator for mq: A1.M2 - nothing found
=======================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


15. Check unary operator for mq: A2.M9 - nothing found
======================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


16. Check unary operator for mq: !A2.M9 - all three entities
============================================================
HTTP/1.1 200 OK
Content-Length: 325
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 13
                }
            },
            "type": "Text",
            "value": "07"
        },
        "id": "E1",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 13
                }
            },
            "type": "Text",
            "value": "02"
        },
        "id": "E2",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Number",
                    "value": 14
                }
            },
            "type": "Text",
            "value": "03"
        },
        "id": "E3",
        "type": "Thing"
    }
]


17. Create subscription with mq: !A2.M2
=======================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



18. Dump accumulator, see all three, then reset accumulator
===========================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 378
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number", 
                        "value": 13
                    }
                }, 
                "type": "Text", 
                "value": "07"
            }, 
            "id": "E1", 
            "type": "Thing"
        }, 
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number", 
                        "value": 13
                    }
                }, 
                "type": "Text", 
                "value": "02"
            }, 
            "id": "E2", 
            "type": "Thing"
        },
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Number", 
                        "value": 14
                    }
                }, 
                "type": "Text", 
                "value": "03"
            }, 
            "id": "E3", 
            "type": "Thing"
        }
    ], 
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


19. Create subscription with mq: A2.M2
======================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



20. Dump accumulator, see nothing
=================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
