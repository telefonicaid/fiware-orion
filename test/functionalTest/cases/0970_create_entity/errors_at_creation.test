# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
POST Entities V2 error handling

--SHELL-INIT--
dbInit CB
brokerStart CB 0

--SHELL--

#
# 01. POST /v2/entities without Entity::id
# 02. POST /v2/entities with empty Entity::id
# 03. POST /v2/entities with boolean Entity::id
# 04. POST /v2/entities with Entity::id as a number
# 05. POST /v2/entities with boolean Entity::type
# 06. POST /v2/entities with Entity::type as a number
# 07. POST /v2/entities without Attribute::name
# 08. POST /v2/entities with Attribute::name as a number
# 09. POST /v2/entities with boolean Attribute::name
#

echo "01. POST /v2/entities without Entity::id"
echo "========================================"
payload='{
  "type": "T1",
  "attr01": "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "02. POST /v2/entities with empty Entity::id"
echo "==========================================="
payload='{
  "id": "",
  "attr01": "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "03. POST /v2/entities with boolean Entity::id"
echo "============================================="
payload='{
  "id": true,
  "type": "T1",
  "attr01": "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "04. POST /v2/entities with Entity::id as a number"
echo "================================================="
payload='{
  "id": 12,
  "type": "T1",
  "attr01": "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "05. POST /v2/entities with boolean Entity::type"
echo "==============================================="
payload='{
  "id": "ID",
  "type": false,
  "attr01": "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "06. POST /v2/entities with Entity::type as a number"
echo "==================================================="
payload='{
  "id": "ID",
  "type": 19,
  "attr01": "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "07. POST /v2/entities without Attribute::name"
echo "============================================="
payload='{
  "id": "ID",
  "type": "WT",
  "": "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "08. POST /v2/entities with Attribute::name as a number"
echo "======================================================"
payload='{
  "id": "ID",
  "type": "WT",
  6: "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "09. POST /v2/entities with boolean Attribute::name"
echo "=================================================="
payload='{
  "id": "ID",
  "type": "WT",
  true: "1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


--REGEXPECT--
01. POST /v2/entities without Entity::id
========================================
HTTP/1.1 400 Bad Request
Content-Length: 83
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "entity id length: 0, min length supported: 1",
    "error": "BadRequest"
}


02. POST /v2/entities with empty Entity::id
===========================================
HTTP/1.1 400 Bad Request
Content-Length: 83
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "entity id length: 0, min length supported: 1",
    "error": "BadRequest"
}


03. POST /v2/entities with boolean Entity::id
=============================================
HTTP/1.1 400 Bad Request
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid JSON type for entity id",
    "error": "BadRequest"
}


04. POST /v2/entities with Entity::id as a number
=================================================
HTTP/1.1 400 Bad Request
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid JSON type for entity id",
    "error": "BadRequest"
}


05. POST /v2/entities with boolean Entity::type
===============================================
HTTP/1.1 400 Bad Request
Content-Length: 72
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid JSON type for entity type",
    "error": "BadRequest"
}


06. POST /v2/entities with Entity::type as a number
===================================================
HTTP/1.1 400 Bad Request
Content-Length: 72
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid JSON type for entity type",
    "error": "BadRequest"
}


07. POST /v2/entities without Attribute::name
=============================================
HTTP/1.1 400 Bad Request
Content-Length: 88
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "attribute name length: 0, min length supported: 1",
    "error": "BadRequest"
}


08. POST /v2/entities with Attribute::name as a number
======================================================
HTTP/1.1 400 Bad Request
Content-Length: 75
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Errors found in incoming JSON buffer",
    "error": "ParseError"
}


09. POST /v2/entities with boolean Attribute::name
==================================================
HTTP/1.1 400 Bad Request
Content-Length: 75
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Errors found in incoming JSON buffer",
    "error": "ParseError"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
