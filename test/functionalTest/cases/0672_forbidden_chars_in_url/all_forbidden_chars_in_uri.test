# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Forbidden Chars in URI

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Test the forbidden character <
# 02. Test the forbidden character >
# 03. Test the forbidden character "
# 04. Test the forbidden character '
# 05. Test the forbidden character =
# 06. Test the forbidden character ;
# 07. Test the forbidden character (
# 08. Test the forbidden character )
# 09. Test without forbidden characters
#


echo '01. Test the forbidden character <'
echo "=================================="
orionCurl --url '/test/with/forbidden/character/<'
echo
echo


echo '02. Test the forbidden character >'
echo "=================================="
orionCurl --url '/test/with/forbidden/character/>'
echo
echo


echo '03. Test the forbidden character "'
echo "=================================="
orionCurl --url '/test/with/forbidden/character/\"'
echo
echo


echo "04. Test the forbidden character '"
echo "=================================="
orionCurl --url "/test/with/forbidden/character/'"
echo
echo


echo '05. Test the forbidden character ='
echo "=================================="
orionCurl --url '/test/with/forbidden/character/='
echo
echo


echo '06. Test the forbidden character ;'
echo "=================================="
orionCurl --url '/test/with/forbidden/character/;'
echo
echo


echo '07. Test the forbidden character ('
echo "=================================="
orionCurl --url '/test/with/forbidden/character/('
echo
echo


echo '08. Test the forbidden character )'
echo "=================================="
orionCurl --url '/test/with/forbidden/character/)'
echo
echo


echo '09. Test without forbidden characters'
echo "====================================="
orionCurl --url '/test/without/forbidden/characters'
echo
echo


--REGEXPECT--
01. Test the forbidden character <
==================================
HTTP/1.1 400 Bad Request
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "invalid character in URI",
        "reasonPhrase": "Bad Request"
    }
}


02. Test the forbidden character >
==================================
HTTP/1.1 400 Bad Request
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "invalid character in URI",
        "reasonPhrase": "Bad Request"
    }
}


03. Test the forbidden character "
==================================
HTTP/1.1 400 Bad Request
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "invalid character in URI",
        "reasonPhrase": "Bad Request"
    }
}


04. Test the forbidden character '
==================================
HTTP/1.1 400 Bad Request
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "invalid character in URI",
        "reasonPhrase": "Bad Request"
    }
}


05. Test the forbidden character =
==================================
HTTP/1.1 400 Bad Request
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "invalid character in URI",
        "reasonPhrase": "Bad Request"
    }
}


06. Test the forbidden character ;
==================================
HTTP/1.1 400 Bad Request
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "invalid character in URI",
        "reasonPhrase": "Bad Request"
    }
}


07. Test the forbidden character (
==================================
HTTP/1.1 400 Bad Request
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "invalid character in URI",
        "reasonPhrase": "Bad Request"
    }
}


08. Test the forbidden character )
==================================
HTTP/1.1 400 Bad Request
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "invalid character in URI",
        "reasonPhrase": "Bad Request"
    }
}


09. Test without forbidden characters
=====================================
HTTP/1.1 400 Bad Request
Content-Length: 129
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "Service not found. Check your URL as probably it is wrong.",
        "reasonPhrase": "Bad Request"
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
