
# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es


--NAME--
Federation

--SHELL-INIT--
dbInit CP1
dbInit CP2
dbInit CP3
brokerStart CP1 0
brokerStart CP2 0
brokerStart CP3 0

--SHELL--

#
# 01. Make CP2 subscribe to all entities in CP1
# 02. Make CP3 subscribe to all entities in CP2
# 03. Create an entity in CP1 (CP2 should get informed and after that CP3 also)
# 04. Query CP3 for entity null
# 05. Query CP3 for entity number
# 06. Query CP3 for entity text
# 07. Query CP3 for entity boolean
# 08. Query CP3 for entity array-number
# 09. Query CP3 for entity array-text
# 10. Query CP3 for entity object-number
# 11. Query CP3 for entity object-text
# 12. Query CP3 for entity datetime
# 13. Query CP3 for entity geo-json-point
# 14. Query CP3 for entity geo-json-point-multi
# 15. Query CP3 for entity geo-json-line
# 16. Query CP3 for entity geo-json-line-multi
# 17. Query CP3 for entity geo-json-polygon
# 18. Query CP3 for entity geo-json-polygon-hole
# 19. Query CP3 for entity geo-json-polygon-multi
# 20. Query CP3 for entity geo-json-polygon-hole-multi
# 21. Update an entity in CP1 (CP2 should get informed and after that CP3 also)
# 22. Query CP3 for entity null
# 23. Query CP3 for entity number
# 24. Query CP3 for entity text
# 25. Query CP3 for entity boolean
# 26. Query CP3 for entity array-number
# 27. Query CP3 for entity array-text
# 28. Query CP3 for entity object-number
# 29. Query CP3 for entity object-text
# 30. Query CP3 for entity datetime
# 31. Query CP3 for entity geo-json-point
# 32. Query CP3 for entity geo-json-point-multi
# 33. Query CP3 for entity geo-json-line
# 34. Query CP3 for entity geo-json-line-multi
# 35. Query CP3 for entity geo-json-polygon
# 36. Query CP3 for entity geo-json-polygon-hole
# 37. Query CP3 for entity geo-json-polygon-multi
# 38. Query CP3 for entity geo-json-polygon-hole-multi

echo "01. Make CP2 subscribe to all entities in CP1"
echo "=================================================="
payload='
{
  "description": "TEST",
  "subject": {
    "entities": [{
      "idPattern": ".*"
    }]
  },
  "notification": {
    "attrsFormat": "legacy",
    "http": {
      "url": "http://localhost:'$CP2_PORT'/v2/op/notify"
    }
  },
  "expires": "2040-01-01T14:00:00.00Z",
  "throttling": 0
}'
orionCurl --url /v2/subscriptions --payload "$payload" --port $CP1_PORT
echo
echo

echo "02. Make CP3 subscribe to all entities in CP2"
echo "=================================================="
payload='
{
  "description": "TEST",
  "subject": {
    "entities": [{
      "idPattern": ".*"
    }]
  },
  "notification": {
    "attrsFormat": "legacy",
    "http": {
      "url": "http://localhost:'$CP3_PORT'/v2/op/notify"
    }
  },
  "expires": "2040-01-01T14:00:00.00Z",
  "throttling": 0
}'
orionCurl --url /v2/subscriptions --payload "$payload" --port $CP2_PORT
echo
echo

echo "03. Create an entity in CP1 (CP2 should get informed and after that CP3 also)"
echo "==============================================================================================================="
payload='
{
  "actionType": "APPEND",
  "entities": [
  {
    "attribute": {
      "metadata": {},
      "type": "Null",
      "value": null
    },
    "id": "null",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "Number",
      "value": 1.1
    },
    "id": "number",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "Text",
      "value": "g8cira4&epzdjb60219tyumql|xk3"
    },
    "id": "text",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "Boolean",
      "value": true
    },
    "id": "boolean",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "StructuredValue",
      "value": [1.1, 2.2, 3.3]
    },
    "id": "array-number",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "StructuredValue",
      "value": ["1", "2", "3"]
    },
    "id": "array-text",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "StructuredValue",
      "value": {"item1":1.1, "item2":2.2}
    },
    "id": "object-number",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "StructuredValue",
      "value": {"item1":"1", "item2":"2"}
    },
    "id": "object-text",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "DateTime",
      "value": "2017-01-01T00:01:01.001Z"
    },
    "id": "datetime",
    "type": "type"
  },
  {
    "id": "geo-json-point",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates":
      	  [30, 10],
      	"type": "Point"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-point-multi",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
      	  [10, 40], [40, 30], [20, 20], [30, 10]
      	],
      	"type": "MultiPoint"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-line",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [30, 10], [10, 30], [40, 40]
        ],
      	"type": "LineString"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-line-multi",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [[10, 10], [20, 20], [10, 40]],
          [[40, 40], [30, 30], [40, 20], [30, 10]]
      	],
      	"type": "MultiLineString"
       }
    },
    "type": "type"
  },
  {
    "id": "geo-json-polygon",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
      	  [[30, 10], [40, 40], [20, 40], [10, 20], [30, 10]]
        ],
      	"type": "Polygon"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-polygon-hole",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [[35, 10], [45, 45], [15, 40], [10, 20], [35, 10]],
          [[20, 30], [35, 35], [30, 20], [20, 30]]
        ],
      	"type": "Polygon"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-polygon-multi",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [
            [[30, 20], [45, 40], [10, 40], [30, 20]]
          ],
          [
            [[15, 5], [40, 10], [10, 20], [5, 10], [15, 5]]
          ]
        ],
      	"type": "MultiPolygon"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-polygon-hole-multi,
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [
            [[40, 40], [20, 45], [45, 30], [40, 40]]
          ],
          [
            [[20, 35], [10, 30], [10, 10], [30, 5], [45, 20], [20, 35]],
            [[30, 20], [20, 15], [20, 25], [30, 20]]
          ]
        ],
      	"type": "MultiPolygon"
      }
    },
    "type": "type"
  }
  ]
}
'
orionCurl --url /v2/op/update --payload "$payload" --port $CP1_PORT
echo

echo "04. Query CP3 for entity null"
echo "========================================================================================="
orionCurl --url /v2/entities/null --port $CP3_PORT
echo

echo "05. Query CP3 for entity number"
echo "========================================================================================="
orionCurl --url /v2/entities/number --port $CP3_PORT
echo

echo "06. Query CP3 for entity text"
echo "========================================================================================="
orionCurl --url /v2/entities/text --port $CP3_PORT
echo

echo "07. Query CP3 for entity boolean"
echo "========================================================================================="
orionCurl --url /v2/entities/boolean --port $CP3_PORT
echo

echo "08. Query CP3 for entity array-number"
echo "========================================================================================="
orionCurl --url /v2/entities/array-number --port $CP3_PORT
echo

echo "09. Query CP3 for entity array-text"
echo "========================================================================================="
orionCurl --url /v2/entities/array-text --port $CP3_PORT
echo

echo "10. Query CP3 for entity object-number"
echo "========================================================================================="
orionCurl --url /v2/entities/object-number --port $CP3_PORT
echo

echo "11. Query CP3 for entity object-text"
echo "========================================================================================="
orionCurl --url /v2/entities/object-text --port $CP3_PORT
echo

echo "12. Query CP3 for entity datetime"
echo "========================================================================================="
orionCurl --url /v2/entities/datetime --port $CP3_PORT
echo

echo "13. Query CP3 for entity geo-json-point"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-point --port $CP3_PORT
echo

echo "14. Query CP3 for entity geo-json-point-multi"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-point-multi --port $CP3_PORT
echo

echo "15. Query CP3 for entity geo-json-line"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-line --port $CP3_PORT
echo

echo "16. Query CP3 for entity geo-json-line-multi"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-line-multi --port $CP3_PORT
echo

echo "17. Query CP3 for entity geo-json-polygon"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-polygon --port $CP3_PORT
echo

echo "18. Query CP3 for entity geo-json-polygon-hole"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-polygon-hole --port $CP3_PORT
echo

echo "19. Query CP3 for entity geo-json-polygon-multi"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-polygon-multi --port $CP3_PORT
echo

echo "20. Query CP3 for entity geo-json-polygon-hole-multi"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-polygon-hole-multi --port $CP3_PORT
echo

echo "21. Update an entity in CP1 (CP2 should get informed and after that CP3 also)"
echo "==============================================================================================================="
payload='
{
  "actionType": "UPDATE",
  "entities": [
  {
    "attribute": {
      "metadata": {},
      "type": "Null",
      "value": null
    },
    "id": "null",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "Number",
      "value": 2.2
    },
    "id": "number",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "Text",
      "value": "v84drt3h5d5yrttsdrdhdgt544ql"
    },
    "id": "text",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "Boolean",
      "value": false
    },
    "id": "boolean",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "StructuredValue",
      "value": [2.2, 4.4, 6.6]
    },
    "id": "array-number",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "StructuredValue",
      "value": ["2", "3", "6"]
    },
    "id": "array-text",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "StructuredValue",
      "value": {"item1":2.2, "item2":4.4}
    },
    "id": "object-number",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "StructuredValue",
      "value": {"item1":"2", "item2":"4"}
    },
    "id": "object-text",
    "type": "type"
  },
  {
    "attribute": {
      "metadata": {},
      "type": "DateTime",
      "value": "2018-12-12T23:23:23.001Z"
    },
    "id": "datetime",
    "type": "type"
  },
  {
    "id": "geo-json-point,
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates":
      	  [60, 20],
      	"type": "Point"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-point-multi",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
      	  [20, 80], [80, 60], [40, 40], [60, 20]
      	],
      	"type": "MultiPoint"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-line",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [60, 20], [20, 60], [80, 80]
        ],
      	"type": "LineString"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-line-multi",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [[20, 20], [40, 40], [20, 80]],
          [[80, 80], [60, 60], [80, 40], [60, 20]]
      	],
      	"type": "MultiLineString"
       }
    },
    "type": "type"
  },
  {
    "id": "geo-json-polygon",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
      	  [[60, 20], [80, 80], [40, 80], [20, 40], [60, 20]]
        ],
      	"type": "Polygon"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-polygon-hole",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [[70, 20], [90, 90], [30, 80], [20, 40], [70, 20]],
          [[40, 60], [70, 70], [60, 40], [40, 60]]
        ],
      	"type": "Polygon"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-polygon-multi",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [
            [[60, 40], [90, 80], [20, 80], [60, 40]]
          ],
          [
            [[30, 10], [80, 20], [20, 40], [10, 20], [30, 10]]
          ]
        ],
      	"type": "MultiPolygon"
      }
    },
    "type": "type"
  },
  {
    "id": "geo-json-polygon-hole-multi",
    "location": {
      "metadata": {},
      "type": "geo:json",
      "value": {
      	"coordinates": [
          [
            [[80, 80], [40, 90], [90, 60], [80, 80]]
          ],
          [
            [[40, 70], [20, 60], [20, 20], [60, 10], [90, 40], [40, 70]],
            [[60, 40], [40, 30], [40, 50], [60, 40]]
          ]
        ],
      	"type": "MultiPolygon"
      }
    },
    "type": "type"
  }
  ]
}'

orionCurl --url /v2/op/update --payload "$payload" --port $CP1_PORT
echo

echo "22. Query CP3 for entity null"
echo "========================================================================================="
orionCurl --url /v2/entities/null --port $CP3_PORT
echo

echo "23. Query CP3 for entity number"
echo "========================================================================================="
orionCurl --url /v2/entities/number --port $CP3_PORT
echo

echo "24. Query CP3 for entity text"
echo "========================================================================================="
orionCurl --url /v2/entities/text --port $CP3_PORT
echo

echo "25. Query CP3 for entity boolean"
echo "========================================================================================="
orionCurl --url /v2/entities/boolean --port $CP3_PORT
echo

echo "26. Query CP3 for entity array-number"
echo "========================================================================================="
orionCurl --url /v2/entities/array-number --port $CP3_PORT
echo

echo "27. Query CP3 for entity array-text"
echo "========================================================================================="
orionCurl --url /v2/entities/array-text --port $CP3_PORT
echo

echo "28. Query CP3 for entity object-number"
echo "========================================================================================="
orionCurl --url /v2/entities/object-number --port $CP3_PORT
echo

echo "29. Query CP3 for entity object-text"
echo "========================================================================================="
orionCurl --url /v2/entities/object-text --port $CP3_PORT
echo

echo "30. Query CP3 for entity datetime"
echo "========================================================================================="
orionCurl --url /v2/entities/datetime --port $CP3_PORT
echo

echo "31. Query CP3 for entity geo-json-point"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-point --port $CP3_PORT
echo

echo "32. Query CP3 for entity geo-json-point-multi"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-point-multi --port $CP3_PORT
echo

echo "33. Query CP3 for entity geo-json-line"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-line --port $CP3_PORT
echo

echo "34. Query CP3 for entity geo-json-line-multi"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-line-multi --port $CP3_PORT
echo

echo "35. Query CP3 for entity geo-json-polygon"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-polygon --port $CP3_PORT
echo

echo "36. Query CP3 for entity geo-json-polygon-hole"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-polygon-hole --port $CP3_PORT
echo

echo "37. Query CP3 for entity geo-json-polygon-multi"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-polygon-multi --port $CP3_PORT
echo

echo "38. Query CP3 for entity geo-json-polygon-hole-multi"
echo "========================================================================================="
orionCurl --url /v2/entities/geo-json-polygon-hole-multi --port $CP3_PORT
echo

--REGEXPECT--
01. Make CP2 subscribe to all entities in CP1
==================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Make CP3 subscribe to all entities in CP2
==================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create an entity in CP1 (CP2 should get informed and after that CP3 also)
===============================================================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)


04. Query CP3 for entity null
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "Null",
        "value": null
    },
    "id": "null",
    "type": "type"
}

05. Query CP3 for entity number
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "Number",
        "value": 1.1
    },
    "id": "number",
    "type": "type"
}

06. Query CP3 for entity text
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "Text",
        "value": "g8cira4&epzdjb60219tyumql|xk3"
    },
    "id": "text",
    "type": "type"
}

07. Query CP3 for entity boolean
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "Boolean",
        "value": true
    },
    "id": "boolean",
    "type": "type"
}

08. Query CP3 for entity array-number
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "StructuredValue",
        "value": [
            1.1,
            2.2,
            3.3
        ]
    },
    "id": "array-number",
    "type": "type"
}

09. Query CP3 for entity array-text
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "StructuredValue",
        "value": [
            "1",
            "2",
            "3"
        ]
    },
    "id": "array-text",
    "type": "type"
}

10. Query CP3 for entity object-number
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "StructuredValue",
        "value": {
            "item1": 1.1,
            "item2": 2.2
        }
    },
    "id": "object-number",
    "type": "type"
}

11. Query CP3 for entity object-text
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "StructuredValue",
        "value": {
            "item1": "1",
            "item2": "2"
        }
    },
    "id": "object-text",
    "type": "type"
}

12. Query CP3 for entity datetime
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "DateTime",
        "value": "2017-01-01T00:01:01.00Z"
    },
    "id": "datetime",
    "type": "type"
}

13. Query CP3 for entity geo-json-point
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-point",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                30,
                10
            ],
            "type": "Point"
        }
    },
    "type": "type"
}

14. Query CP3 for entity geo-json-point-multi
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-point-multi",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    10,
                    40
                ],
                [
                    40,
                    30
                ],
                [
                    20,
                    20
                ],
                [
                    30,
                    10
                ]
            ],
            "type": "MultiPoint"
        }
    },
    "type": "type"
}

15. Query CP3 for entity geo-json-line
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-line",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    30,
                    10
                ],
                [
                    10,
                    30
                ],
                [
                    40,
                    40
                ]
            ],
            "type": "LineString"
        }
    },
    "type": "type"
}

16. Query CP3 for entity geo-json-line-multi
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-line-multi",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        10,
                        10
                    ],
                    [
                        20,
                        20
                    ],
                    [
                        10,
                        40
                    ]
                ],
                [
                    [
                        40,
                        40
                    ],
                    [
                        30,
                        30
                    ],
                    [
                        40,
                        20
                    ],
                    [
                        30,
                        10
                    ]
                ]
            ],
            "type": "MultiLineString"
        }
    },
    "type": "type"
}

17. Query CP3 for entity geo-json-polygon
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-polygon",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        30,
                        10
                    ],
                    [
                        40,
                        40
                    ],
                    [
                        20,
                        40
                    ],
                    [
                        10,
                        20
                    ],
                    [
                        30,
                        10
                    ]
                ]
            ],
            "type": "Polygon"
        }
    },
    "type": "type"
}

18. Query CP3 for entity geo-json-polygon-hole
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-polygon-hole",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        35,
                        10
                    ],
                    [
                        45,
                        45
                    ],
                    [
                        15,
                        40
                    ],
                    [
                        10,
                        20
                    ],
                    [
                        35,
                        10
                    ]
                ],
                [
                    [
                        20,
                        30
                    ],
                    [
                        35,
                        35
                    ],
                    [
                        30,
                        20
                    ],
                    [
                        20,
                        30
                    ]
                ]
            ],
            "type": "Polygon"
        }
    },
    "type": "type"
}

19. Query CP3 for entity geo-json-polygon-multi
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-polygon-multi",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        [
                            30,
                            20
                        ],
                        [
                            45,
                            40
                        ],
                        [
                            10,
                            40
                        ],
                        [
                            30,
                            20
                        ]
                    ]
                ],
                [
                    [
                        [
                            15,
                            5
                        ],
                        [
                            40,
                            10
                        ],
                        [
                            10,
                            20
                        ],
                        [
                            5,
                            10
                        ],
                        [
                            15,
                            5
                        ]
                    ]
                ]
            ],
            "type": "MultiPolygon"
        }
    },
    "type": "type"
}

20. Query CP3 for entity geo-json-polygon-hole-multi
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-polygon-hole-multi",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        [
                            40,
                            40
                        ],
                        [
                            20,
                            45
                        ],
                        [
                            45,
                            30
                        ],
                        [
                            40,
                            40
                        ]
                    ]
                ],
                [
                    [
                        [
                            20,
                            35
                        ],
                        [
                            10,
                            30
                        ],
                        [
                            10,
                            10
                        ],
                        [
                            30,
                            5
                        ],
                        [
                            45,
                            20
                        ],
                        [
                            20,
                            35
                        ]
                    ],
                    [
                        [
                            30,
                            20
                        ],
                        [
                            20,
                            15
                        ],
                        [
                            20,
                            25
                        ],
                        [
                            30,
                            20
                        ]
                    ]
                ]
            ],
            "type": "MultiPolygon"
        }
    },
    "type": "type"
}

21. Update an entity in CP1 (CP2 should get informed and after that CP3 also)
===============================================================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)


22. Query CP3 for entity null
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "Null",
        "value": null
    },
    "id": "null",
    "type": "type"
}

23. Query CP3 for entity number
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "Number",
        "value": 2.2
    },
    "id": "number",
    "type": "type"
}

24. Query CP3 for entity text
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "Text",
        "value": "v84drt3h5d5yrttsdrdhdgt544ql"
    },
    "id": "text",
    "type": "type"
}

25. Query CP3 for entity boolean
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "Boolean",
        "value": false
    },
    "id": "boolean",
    "type": "type"
}

26. Query CP3 for entity array-number
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "StructuredValue",
        "value": [
            2.2,
            4.4,
            6.6
        ]
    },
    "id": "array-number",
    "type": "type"
}

27. Query CP3 for entity array-text
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "StructuredValue",
        "value": [
            "2",
            "3",
            "6"
        ]
    },
    "id": "array-text",
    "type": "type"
}

28. Query CP3 for entity object-number
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "StructuredValue",
        "value": {
            "item1": 2.2,
            "item2": 4.4
        }
    },
    "id": "object-number",
    "type": "type"
}

29. Query CP3 for entity object-text
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "StructuredValue",
        "value": {
            "item1": "2",
            "item2": "4"
        }
    },
    "id": "object-text",
    "type": "type"
}

30. Query CP3 for entity datetime
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attribute": {
        "metadata": {},
        "type": "DateTime",
        "value": "2018-12-12T23:23:23.00Z"
    },
    "id": "datetime",
    "type": "type"
}

31. Query CP3 for entity geo-json-point
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-point",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                60,
                20
            ],
            "type": "Point"
        }
    },
    "type": "type"
}

32. Query CP3 for entity geo-json-point-multi
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-point-multi",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    20,
                    80
                ],
                [
                    80,
                    60
                ],
                [
                    40,
                    40
                ],
                [
                    60,
                    20
                ]
            ],
            "type": "MultiPoint"
        }
    },
    "type": "type"
}

33. Query CP3 for entity geo-json-line
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-line",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    60,
                    20
                ],
                [
                    20,
                    60
                ],
                [
                    80,
                    80
                ]
            ],
            "type": "LineString"
        }
    },
    "type": "type"
}

34. Query CP3 for entity geo-json-line-multi
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-line-multi",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        20,
                        20
                    ],
                    [
                        40,
                        40
                    ],
                    [
                        20,
                        80
                    ]
                ],
                [
                    [
                        80,
                        80
                    ],
                    [
                        60,
                        60
                    ],
                    [
                        80,
                        40
                    ],
                    [
                        60,
                        20
                    ]
                ]
            ],
            "type": "MultiLineString"
        }
    },
    "type": "type"
}

35. Query CP3 for entity geo-json-polygon
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-polygon",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        60,
                        20
                    ],
                    [
                        80,
                        80
                    ],
                    [
                        40,
                        80
                    ],
                    [
                        20,
                        40
                    ],
                    [
                        60,
                        20
                    ]
                ]
            ],
            "type": "Polygon"
        }
    },
    "type": "type"
}

36. Query CP3 for entity geo-json-polygon-hole
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-polygon-hole",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        70,
                        20
                    ],
                    [
                        90,
                        90
                    ],
                    [
                        30,
                        80
                    ],
                    [
                        20,
                        40
                    ],
                    [
                        70,
                        20
                    ]
                ],
                [
                    [
                        40,
                        60
                    ],
                    [
                        70,
                        70
                    ],
                    [
                        60,
                        40
                    ],
                    [
                        40,
                        60
                    ]
                ]
            ],
            "type": "Polygon"
        }
    },
    "type": "type"
}

37. Query CP3 for entity geo-json-polygon-multi
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-polygon-multi",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        [
                            60,
                            40
                        ],
                        [
                            90,
                            80
                        ],
                        [
                            20,
                            80
                        ],
                        [
                            60,
                            40
                        ]
                    ]
                ],
                [
                    [
                        [
                            30,
                            10
                        ],
                        [
                            80,
                            20
                        ],
                        [
                            20,
                            40
                        ],
                        [
                            10,
                            20
                        ],
                        [
                            30,
                            10
                        ]
                    ]
                ]
            ],
            "type": "MultiPolygon"
        }
    },
    "type": "type"
}

38. Query CP3 for entity geo-json-polygon-hole-multi
=========================================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(.*)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "geo-json-polygon-hole-multi,
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                [
                    [
                        [
                            80,
                            80
                        ],
                        [
                            40,
                            90
                        ],
                        [
                            90,
                            60
                        ],
                        [
                            80,
                            80
                        ]
                    ]
                ],
                [
                    [
                        [
                            40,
                            70
                        ],
                        [
                            20,
                            60
                        ],
                        [
                            20,
                            20
                        ],
                        [
                            60,
                            10
                        ],
                        [
                            90,
                            40
                        ],
                        [
                            40,
                            70
                        ]
                    ],
                    [
                        [
                            60,
                            40
                        ],
                        [
                            40,
                            30
                        ],
                        [
                            40,
                            50
                        ],
                        [
                            60,
                            40
                        ]
                    ]
                ]
            ],
            "type": "MultiPolygon"
        }
    },
    "type": "type"
}

--TEARDOWN--
brokerStop CP1
brokerStop CP2
brokerStop CP3
dbDrop CP1
dbDrop CP2
dbDrop CP3
