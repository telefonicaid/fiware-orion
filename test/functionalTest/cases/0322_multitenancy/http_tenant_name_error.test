# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Erroneous tenant URL names

--SHELL-INIT--
dbInit CB
dbInit ${CB_DB_NAME} 01234567890123456789012345678901234567890123456789
dbInit ${CB_DB_NAME} ngsi10

brokerStart CB 0 IPV4 -multiservice

--SHELL--
payload='{
  "contextRegistrations": [
    {
      "entities": [
        {
          "type": "Room",
          "isPattern": "false",
          "id": "ConferenceRoom"
        },
        {
          "type": "Room",
          "isPattern": "false",
          "id": "OfficeRoom"
        }
      ],
      "attributes": [
        {
          "name": "temperature",
          "type": "degree"
        }
      ],
      "providingApplication": "http://localhost:1028/application"
    }
  ],
  "duration": "PT1H"
}'
URL="/v1/registry/registerContext"

# 1. OK (50 chars in tenant name)
echo "1: ++++++++++"
orionCurl --url $URL --payload "${payload}" --tenant "01234567890123456789012345678901234567890123456789"
echo
echo


# 2. Long tenant name (51 chars in tenant name)
echo "2: ++++++++++"
orionCurl --url $URL --payload "${payload}" --tenant "012345678901234567890123456789012345678901234567890"
echo
echo


# 3. Bad character in tenant name
echo "3: ++++++++++"
orionCurl --url $URL --payload "${payload}" --tenant "kz+fg"
echo
echo


# 4. There are no reserved names in tenant name
echo "4: ++++++++++"
orionCurl --url $URL --payload "${payload}" --tenant "ngsi10"
echo
echo


--REGEXPECT--
1: ++++++++++
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


2: ++++++++++
HTTP/1.1 200 OK
Content-Length: 127
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "bad length - a tenant name can be max 50 characters long",
        "reasonPhrase": "Bad Request"
    }
}


3: ++++++++++
HTTP/1.1 200 OK
Content-Length: 157
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "bad character in tenant name - only underscore and alphanumeric characters are allowed",
        "reasonPhrase": "Bad Request"
    }
}


4: ++++++++++
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


--TEARDOWN--

brokerStop CB

dbDrop CB
dbDrop ${CB_DB_NAME} 01234567890123456789012345678901234567890123456789
dbDrop ${CB_DB_NAME} ngsi10
