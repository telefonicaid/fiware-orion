# Copyright 2021 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
maxFailsLimit full lifecycle

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. POST /v2/subscriptions, to create subscription with maxFailsLimit=2
# 02. Upsert entity to trigger notification (ok)
# 03. GET /v2/subscriptions/subId, to check the status=active, timesSent=1, failsCounter=0 (omitted), maxFailsLimit=2
# 04. Stop accumulator
# 05. Upsert entity to trigger notification (fail)
# 06. Upsert entity to trigger notification (fail)
# 07. GET /v2/subscriptions/subId, to check the status=active, timesSent=3, failsCounter=2, maxFailsLimit=2
# 08. Upsert entity to trigger notification (fail that causes change to status=inactive)
# 09. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=4, failsCounter=3, maxFailsLimit=2
# 10. Upsert entity to trigger notification (not triggered due to status=inactive)
# 11. Upsert entity to trigger notification (not triggered due to status=inactive)
# 12. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=4, failsCounter=3, maxFailsLimit=2 (same as last GET)
# 13. PATCH /v2/subscriptions/subId to set status=active again
# 14. Upsert entity to trigger notification (fail that causes change to status=inactive)
# 15. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=5, failsCounter=4, maxFailsLimit=2
# 16. PATCH /v2/subscriptions/subId to enlarge maxFailLimit to 5 and set status=active again
# 17. Upsert entity to trigger notification (fail)
# 18. GET /v2/subscriptions/subId, to check the status=active, timesSent=6, failsCounter=5, maxFailsLimit=5
# 19. Upsert entity to trigger notification (fail that causes change to status=inactive)
# 20. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=7, failsCounter=6, maxFailsLimit=5
# 21. Upsert entity to trigger notification (not triggered due to status=inactive)
# 22. Upsert entity to trigger notification (not triggered due to status=inactive)
# 23. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=7, failsCounter=6, maxFailsLimit=5 (same as last GET)
# 24. Start accumulator
# 25. PATCH /v2/subscriptions/subId to set status=active again
# 26. Upsert entity to trigger notification (ok)
# 27. GET /v2/subscriptions/subId, to check the status=active, timesSent=8, failsCounter=0 (omitted), maxFailsLimit=5
# 28. Get logs, see three deactivation traces (for steps 08, 14, 19)
#


echo "01. POST /v2/subscriptions, to create subscription with maxFailsLimit=2"
echo "======================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "maxFailsLimit" : 2
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "02. Upsert entity to trigger notification (ok)"
echo "=============================================="
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "03. GET /v2/subscriptions/subId, to check the status=active, timesSent=1, failsCounter=0 (omitted), maxFailsLimit=2"
echo "==================================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "04. Stop accumulator"
echo "===================="
accumulatorStop
echo
echo


echo "05. Upsert entity to trigger notification (fail)"
echo "================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "06. Upsert entity to trigger notification (fail)"
echo "================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "07. GET /v2/subscriptions/subId, to check the status=active, timesSent=3, failsCounter=2, maxFailsLimit=2"
echo "========================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "08. Upsert entity to trigger notification (fail that causes change to status=inactive)"
echo "======================================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "09. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=4, failsCounter=3, maxFailsLimit=2"
echo "==========================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "10. Upsert entity to trigger notification (not triggered due to status=inactive)"
echo "================================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "11. Upsert entity to trigger notification (not triggered due to status=inactive)"
echo "================================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "12. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=4, failsCounter=3, maxFailsLimit=2 (same as last GET)"
echo "=============================================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "13. PATCH /v2/subscriptions/subId to set status=active again"
echo "============================================================"
payload='{
  "status": "active"
}'
orionCurl -X PATCH --url /v2/subscriptions/${subId} --payload "$payload"
echo
echo


echo "14. Upsert entity to trigger notification (fail that causes change to status=inactive)"
echo "======================================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "15. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=5, failsCounter=4, maxFailsLimit=2"
echo "==========================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "16. PATCH /v2/subscriptions/subId to enlarge maxFailLimit to 5 and set status=active again"
echo "=========================================================================================="
payload='{
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "maxFailsLimit" : 5
  },
  "status": "active"
}'
orionCurl -X PATCH --url /v2/subscriptions/${subId} --payload "$payload"
echo
echo


echo "17. Upsert entity to trigger notification (fail)"
echo "================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "18. GET /v2/subscriptions/subId, to check the status=active, timesSent=6, failsCounter=5, maxFailsLimit=5"
echo "========================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "19. Upsert entity to trigger notification (fail that causes change to status=inactive)"
echo "======================================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "20. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=7, failsCounter=6, maxFailsLimit=5"
echo "==========================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "21. Upsert entity to trigger notification (not triggered due to status=inactive)"
echo "================================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "22. Upsert entity to trigger notification (not triggered due to status=inactive)"
echo "================================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "23. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=7, failsCounter=6, maxFailsLimit=5 (same as last GET)"
echo "=============================================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "24. Start accumulator"
echo "====================="
accumulatorStart
echo
echo


echo "25. PATCH /v2/subscriptions/subId to set status=active again"
echo "============================================================"
payload='{
  "status": "active"
}'
orionCurl -X PATCH --url /v2/subscriptions/${subId} --payload "$payload"
echo
echo



echo "26. Upsert entity to trigger notification (ok)"
echo "=============================================="
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities?options=upsert,forcedUpdate --payload "$payload"
echo
echo


echo "27. GET /v2/subscriptions/subId, to check the status=active, timesSent=8, failsCounter=0 (omitted), maxFailsLimit=5"
echo "==================================================================================================================="
orionCurl --url /v2/subscriptions/${subId}
echo
echo


echo "28. Get logs, see three deactivation traces (for steps 08, 14, 19)"
echo "=================================================================="
# FIXME: the 'cut -c 39-' is to remove the 'Subscription 61839670a384ad32937692ab ', which can be problematic
# due to REGEX([0-9a-f]{24}) has problems is parenthisis are used in other parts of the string
# (current limitation in testDiff.py)
cat /tmp/contextBroker.log | grep WARN | awk -F 'msg=' '{print $2}' | grep disabled | cut -c 39-
echo
echo


--REGEXPECT--
01. POST /v2/subscriptions, to create subscription with maxFailsLimit=2
=======================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Upsert entity to trigger notification (ok)
==============================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. GET /v2/subscriptions/subId, to check the status=active, timesSent=1, failsCounter=0 (omitted), maxFailsLimit=2
===================================================================================================================
HTTP/1.1 200 OK
Content-Length: 406
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 2,
        "onlyChangedAttrs": false,
        "timesSent": 1
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


04. Stop accumulator
====================


05. Upsert entity to trigger notification (fail)
================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Upsert entity to trigger notification (fail)
================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. GET /v2/subscriptions/subId, to check the status=active, timesSent=3, failsCounter=2, maxFailsLimit=2
=========================================================================================================
HTTP/1.1 200 OK
Content-Length: 513
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "failsCounter": 2,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastFailure": "REGEX(.*)",
        "lastFailureReason": "Couldn't connect to server",
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 2,
        "onlyChangedAttrs": false,
        "timesSent": 3
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


08. Upsert entity to trigger notification (fail that causes change to status=inactive)
======================================================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=4, failsCounter=3, maxFailsLimit=2
===========================================================================================================
HTTP/1.1 200 OK
Content-Length: 515
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "failsCounter": 3,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastFailure": "REGEX(.*)",
        "lastFailureReason": "Couldn't connect to server",
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 2,
        "onlyChangedAttrs": false,
        "timesSent": 4
    },
    "status": "inactive",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


10. Upsert entity to trigger notification (not triggered due to status=inactive)
================================================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



11. Upsert entity to trigger notification (not triggered due to status=inactive)
================================================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



12. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=4, failsCounter=3, maxFailsLimit=2 (same as last GET)
==============================================================================================================================
HTTP/1.1 200 OK
Content-Length: 515
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "failsCounter": 3,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastFailure": "REGEX(.*)",
        "lastFailureReason": "Couldn't connect to server",
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 2,
        "onlyChangedAttrs": false,
        "timesSent": 4
    },
    "status": "inactive",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


13. PATCH /v2/subscriptions/subId to set status=active again
============================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



14. Upsert entity to trigger notification (fail that causes change to status=inactive)
======================================================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



15. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=5, failsCounter=4, maxFailsLimit=2
===========================================================================================================
HTTP/1.1 200 OK
Content-Length: 515
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "failsCounter": 4,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastFailure": "REGEX(.*)",
        "lastFailureReason": "Couldn't connect to server",
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 2,
        "onlyChangedAttrs": false,
        "timesSent": 5
    },
    "status": "inactive",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


16. PATCH /v2/subscriptions/subId to enlarge maxFailLimit to 5 and set status=active again
==========================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



17. Upsert entity to trigger notification (fail)
================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



18. GET /v2/subscriptions/subId, to check the status=active, timesSent=6, failsCounter=5, maxFailsLimit=5
=========================================================================================================
HTTP/1.1 200 OK
Content-Length: 513
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "failsCounter": 5,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastFailure": "REGEX(.*)",
        "lastFailureReason": "Couldn't connect to server",
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 5,
        "onlyChangedAttrs": false,
        "timesSent": 6
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


19. Upsert entity to trigger notification (fail that causes change to status=inactive)
======================================================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



20. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=7, failsCounter=6, maxFailsLimit=5
===========================================================================================================
HTTP/1.1 200 OK
Content-Length: 515
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "failsCounter": 6,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastFailure": "REGEX(.*)",
        "lastFailureReason": "Couldn't connect to server",
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 5,
        "onlyChangedAttrs": false,
        "timesSent": 7
    },
    "status": "inactive",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


21. Upsert entity to trigger notification (not triggered due to status=inactive)
================================================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



22. Upsert entity to trigger notification (not triggered due to status=inactive)
================================================================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



23. GET /v2/subscriptions/subId, to check the status=inactive, timesSent=7, failsCounter=6, maxFailsLimit=5 (same as last GET)
==============================================================================================================================
HTTP/1.1 200 OK
Content-Length: 515
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "failsCounter": 6,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastFailure": "REGEX(.*)",
        "lastFailureReason": "Couldn't connect to server",
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 5,
        "onlyChangedAttrs": false,
        "timesSent": 7
    },
    "status": "inactive",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


24. Start accumulator
=====================
accumulator running as PID REGEX(.*)


25. PATCH /v2/subscriptions/subId to set status=active again
============================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



26. Upsert entity to trigger notification (ok)
==============================================
HTTP/1.1 204 No Content
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



27. GET /v2/subscriptions/subId, to check the status=active, timesSent=8, failsCounter=0 (omitted), maxFailsLimit=5
===================================================================================================================
HTTP/1.1 200 OK
Content-Length: 496
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "lastFailure": "REGEX(.*)",
        "lastFailureReason": "Couldn't connect to server",
        "lastNotification": "REGEX(.*)",
        "lastSuccess": "REGEX(.*)",
        "lastSuccessCode": 200,
        "maxFailsLimit": 5,
        "onlyChangedAttrs": false,
        "timesSent": 8
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    }
}


28. Get logs, see three deactivation traces (for steps 08, 14, 19)
==================================================================
automatically disabled due to failsCounter (3) overpasses maxFailsLimit (2)
automatically disabled due to failsCounter (4) overpasses maxFailsLimit (2)
automatically disabled due to failsCounter (6) overpasses maxFailsLimit (5)


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
