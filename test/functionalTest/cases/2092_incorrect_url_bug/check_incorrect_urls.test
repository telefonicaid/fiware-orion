 Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Context subscripion description field

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create subscription with url // and get error
# 02. Create subscription with url /// and get error
# 03. Create subscription with url http:///a and get error
#

echo "01. Create subscription with url // and get error"
echo "================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "type": "Room",
                "idPattern": ".*"
            }
        ],
        "condition": {
            "attrs": [ "temperature" ]
         }
    },
    "notification": {
        "http": {
            "url": "//"
        }
    }
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create subscription with url /// and get error"
echo "=================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "type": "Room",
                "idPattern": ".*"
            }
        ],
        "condition": {
            "attrs": [ "temperature" ]
         }
    },
    "notification": {
        "http": {
            "url": "///"
        }
    }
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "03. Create subscription with url http:///a and get error"
echo "========================================================"
payload='
{
    "subject": {
        "entities": [
            {
                "type": "Room",
                "idPattern": ".*"
            }
        ],
        "condition": {
            "attrs": [ "temperature" ]
         }
    },
    "notification": {
        "http": {
            "url": "http:///a"
        }
    }
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


--REGEXPECT--
01. Create subscription with url // and get error
=================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 75

{
    "description": "Invalid URL parsing notification url",
    "error": "BadRequest"
}


02. Create subscription with url /// and get error
==================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 75

{
    "description": "Invalid URL parsing notification url",
    "error": "BadRequest"
}


03. Create subscription with url http:///a and get error
========================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 75

{
    "description": "Invalid URL parsing notification url",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
