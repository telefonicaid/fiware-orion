# Copyright 2019 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Reg ID global pattern query forwarding cases (extra)

--SHELL-INIT--
dbInit CB
dbInit CP1
dbInit CP2
dbInit CP3
brokerStart CB 0 IPV4
brokerStart CP1
brokerStart CP2
brokerStart CP3
accumulatorStart --pretty-print

--SHELL--

#
# 01. Register entities of type T, with ID .*, and attribute A1, for CP1
# 02. Register entities of type T, with ID .*, and attribute A2, for CP2
# 03. Register entities of type T, with ID .*, and attribute A3, for CP3
# 04. Create entity E1/T with attribute A1, in CP1
# 05. Create entity E2/T with attribute A2, in CP2
# 06. Create entity E3/T with attribute A3, in CP3
# 07. Query entities of type T - see E1, E2, and E3
# 08. Query entities of ID E1 - see E1
#
echo "01. Register entities of type T, with ID .*, and attribute A1, for CP1"
echo "======================================================================"
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T",
        "idPattern": ".*"
      }
    ],
    "attrs": [ "A1" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP1_PORT}'/v1"
    },
    "legacyForwarding": true
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "02. Register entities of type T, with ID .*, and attribute A2, for CP2"
echo "======================================================================"
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T",
        "idPattern": ".*"
      }
    ],
    "attrs": [ "A2" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP2_PORT}'/v1"
    },
    "legacyForwarding": true
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "03. Register entities of type T, with ID .*, and attribute A3, for CP3"
echo "======================================================================"
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T",
        "idPattern": ".*"
      }
    ],
    "attrs": [ "A3" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP3_PORT}'/v1"
    },
    "legacyForwarding": true
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "04. Create entity E1/T with attribute A1, in CP1"
echo "================================================"
payload='{
  "id": "E1",
  "type": "T",
  "A1": { "value": 1 }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "05. Create entity E2/T with attribute A2, in CP2"
echo "================================================"
payload='{
  "id": "E2",
  "type": "T",
  "A2": { "value": 2 }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP2_PORT
echo
echo


echo "06. Create entity E3/T with attribute A3, in CP3"
echo "================================================"
payload='{
  "id": "E3",
  "type": "T",
  "A3": { "value": 3 }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP3_PORT
echo
echo


echo "07. Query entities of type T - see E1, E2, and E3"
echo "================================================="
orionCurl --url /v2/entities?type=T
echo
echo


echo "08. Query entities of ID E1 - see E1"
echo "===================================="
orionCurl --url /v2/entities/E1?type=T
echo
echo


--REGEXPECT--
01. Register entities of type T, with ID .*, and attribute A1, for CP1
======================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Content-Length: 0



02. Register entities of type T, with ID .*, and attribute A2, for CP2
======================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Content-Length: 0



03. Register entities of type T, with ID .*, and attribute A3, for CP3
======================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Content-Length: 0



04. Create entity E1/T with attribute A1, in CP1
================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



05. Create entity E2/T with attribute A2, in CP2
================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T
Content-Length: 0



06. Create entity E3/T with attribute A3, in CP3
================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E3?type=T
Content-Length: 0



07. Query entities of type T - see E1, E2, and E3
=================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 217

[
    {
        "A1": {
            "metadata": {},
            "type": "Number",
            "value": "1"
        },
        "id": "E1",
        "type": "T"
    },
    {
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": "2"
        },
        "id": "E2",
        "type": "T"
    },
    {
        "A3": {
            "metadata": {},
            "type": "Number",
            "value": "3"
        },
        "id": "E3",
        "type": "T"
    }
]


08. Query entities of ID E1 - see E1
====================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 71

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": "1"
    },
    "id": "E1",
    "type": "T"
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
brokerStop CP2
brokerStop CP3
dbDrop CB
dbDrop CP1
dbDrop CP2
dbDrop CP3
