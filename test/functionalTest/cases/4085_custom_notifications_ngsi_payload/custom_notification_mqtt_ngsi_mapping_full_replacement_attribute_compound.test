# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Custom notification MQTT with NGSI payload mapping attribute macro full replacement compound value

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print --mqttHost ${MQTT_HOST} --mqttPort ${MQTT_PORT} --mqttTopic "#"

--SHELL--

#
# 01. Create custom sub with ngsi compound attributes covering all JSON types
# 02. Create entity E1
# 03. Update entity E1
# 04. Dump accumulator and see two notifications with replaced values
#


echo "01. Create custom sub with ngsi compound attributes covering all JSON types"
echo "==========================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1",
        "type": "T"
      }
    ]
  },
  "notification": {
    "mqttCustom": {
      "topic": "topic1",
      "url": "mqtt://localhost:1883",
      "ngsi": {
        "A1": {
          "value": {
            "other": {
              "text": "${A1}",
              "number": "${A2}"
            },
            "bools": [ "${A1}", "${A2}" ]
          },
          "type": "StructuredValue"
        },
        "A2": {
          "value": [
            "${A1}",
            {
              "one" : [ "${A2}", "${A1}" ],
              "two" : "${A2}"
            }
          ],
          "type": "StructuredValue"
        }
      }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E1"
echo "===================="
payload='{
  "id": "E1",
  "type": "T",
  "A1": {
    "value": "foo",
    "type": "irrelevant"
  },
  "A2": {
    "value": 1,
    "type": "irrelevant"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Update entity E1"
echo "===================="
payload='{
  "A1": {
    "value": "bar",
    "type": "irrelevant"
  },
  "A2": {
    "value": 10,
    "type": "irrelevant"
  }
}'
orionCurl --url /v2/entities/E1/attrs -X PATCH --payload "$payload"
echo
echo


# This delay before asking for accumulator dump was introduced when we
# changed from ubuntu-18.04 to ubuntu-22.04 in GitActions
# in PR https://github.com/telefonicaid/fiware-orion/pull/4302. For some
# unknown reason in ubuntu-22.04 fails if we don't add this. It doesn't make
# sense to me (both Orion and mosquitto runs in containers on top of ubuntu OS)
# but it happens... (maybe some kind of networking effect in the docker host?)
sleep 0.75s


echo "04. Dump accumulator and see two notifications with replaced values"
echo "==================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create custom sub with ngsi compound attributes covering all JSON types
===========================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity E1
====================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



03. Update entity E1
====================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. Dump accumulator and see two notifications with replaced values
===================================================================
MQTT message at topic topic1:
{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "StructuredValue",
                "value": {
                    "bools": [
                        "foo",
                        1
                    ],
                    "other": {
                        "number": 1,
                        "text": "foo"
                    }
                }
            },
            "A2": {
                "metadata": {},
                "type": "StructuredValue",
                "value": [
                    "foo",
                    {
                        "one": [
                            1,
                            "foo"
                        ],
                        "two": 1
                    }
                ]
            },
            "id": "E1",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
MQTT message at topic topic1:
{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "StructuredValue",
                "value": {
                    "bools": [
                        "bar",
                        10
                    ],
                    "other": {
                        "number": 10,
                        "text": "bar"
                    }
                }
            },
            "A2": {
                "metadata": {},
                "type": "StructuredValue",
                "value": [
                    "bar",
                    {
                        "one": [
                            10,
                            "bar"
                        ],
                        "two": 10
                    }
                ]
            },
            "id": "E1",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
