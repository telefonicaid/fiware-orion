# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Custom notification HTTP with NGSI payload adding attribute macro full replacement compound value

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create custom sub1 with ngsi compound attributes covering all JSON types
# 02. Create entity E1
# 03. Update entity E1
# 04. Dump accumulator and see two notifications with replaced values
#


echo "01. Create custom sub1 with ngsi compound attributes covering all JSON types"
echo "============================================================================"
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1",
        "type": "T"
      }
    ]
  },
  "notification": {
    "httpCustom": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "ngsi": {
        "A1": {
          "value": {
            "other": {
              "text": "${B1}",
              "number": "${B2}"
            },
            "bools": [ "${B3}", "${B3}" ]
          },
          "type": "StructuredValue"
        },
        "A2": {
          "value": [
            "${B4}",
            {
              "one" : [ "${B5}", "${B6}" ],
              "two" : "${B4}"
            }
          ],
          "type": "StructuredValue"
        }
      }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E1"
echo "===================="
payload='{
  "id": "E1",
  "type": "T",
  "B1": {
    "value": "foo",
    "type": "irrelevant"
  },
  "B2": {
    "value": 1,
    "type": "irrelevant"
  },
  "B3": {
    "value": true,
    "type": "irrelevant"
  },
  "B4": {
    "value": { "x": 1, "y": 2},
    "type": "irrelevant"
  },
  "B5": {
    "value": [ 1, true, "zzz" ],
    "type": "irrelevant"
  },
  "B6": {
    "value": null,
    "type": "irrelevant"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Update entity E1"
echo "===================="
payload='{
  "B1": {
    "value": "bar",
    "type": "irrelevant"
  },
  "B2": {
    "value": 10,
    "type": "irrelevant"
  },
  "B3": {
    "value": false,
    "type": "irrelevant"
  },
  "B4": {
    "value": { "w": "ttt", "z": 10 },
    "type": "irrelevant"
  },
  "B5": {
    "value": [ 4, null, {"r": 2} ],
    "type": "irrelevant"
  },
  "B6": {
    "value": null,
    "type": "irrelevant"
  }
}'
orionCurl --url /v2/entities/E1/attrs -X PATCH --payload "$payload"
echo
echo


echo "04. Dump accumulator and see two notifications with replaced values"
echo "==================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create custom sub1 with ngsi compound attributes covering all JSON types
============================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity E1
====================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



03. Update entity E1
====================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. Dump accumulator and see two notifications with replaced values
===================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 648
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "StructuredValue",
                "value": {
                    "bools": [
                        true,
                        true
                    ],
                    "other": {
                        "number": 1,
                        "text": "foo"
                    }
                }
            },
            "A2": {
                "metadata": {},
                "type": "StructuredValue",
                "value": [
                    {
                        "x": 1,
                        "y": 2
                    },
                    {
                        "one": [
                            [
                                1,
                                true,
                                "zzz"
                            ],
                            null
                        ],
                        "two": {
                            "x": 1,
                            "y": 2
                        }
                    }
                ]
            },
            "B1": {
                "metadata": {},
                "type": "irrelevant",
                "value": "foo"
            },
            "B2": {
                "metadata": {},
                "type": "irrelevant",
                "value": 1
            },
            "B3": {
                "metadata": {},
                "type": "irrelevant",
                "value": true
            },
            "B4": {
                "metadata": {},
                "type": "irrelevant",
                "value": {
                    "x": 1,
                    "y": 2
                }
            },
            "B5": {
                "metadata": {},
                "type": "irrelevant",
                "value": [
                    1,
                    true,
                    "zzz"
                ]
            },
            "B6": {
                "metadata": {},
                "type": "irrelevant",
                "value": null
            },
            "id": "E1",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 672
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "StructuredValue",
                "value": {
                    "bools": [
                        false,
                        false
                    ],
                    "other": {
                        "number": 10,
                        "text": "bar"
                    }
                }
            },
            "A2": {
                "metadata": {},
                "type": "StructuredValue",
                "value": [
                    {
                        "w": "ttt",
                        "z": 10
                    },
                    {
                        "one": [
                            [
                                4,
                                null,
                                {
                                    "r": 2
                                }
                            ],
                            null
                        ],
                        "two": {
                            "w": "ttt",
                            "z": 10
                        }
                    }
                ]
            },
            "B1": {
                "metadata": {},
                "type": "irrelevant",
                "value": "bar"
            },
            "B2": {
                "metadata": {},
                "type": "irrelevant",
                "value": 10
            },
            "B3": {
                "metadata": {},
                "type": "irrelevant",
                "value": false
            },
            "B4": {
                "metadata": {},
                "type": "irrelevant",
                "value": {
                    "w": "ttt",
                    "z": 10
                }
            },
            "B5": {
                "metadata": {},
                "type": "irrelevant",
                "value": [
                    4,
                    null,
                    {
                        "r": 2
                    }
                ]
            },
            "B6": {
                "metadata": {},
                "type": "irrelevant",
                "value": null
            },
            "id": "E1",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
