# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
URI PATH case sensitive for v2

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. v1 discovery with all uppercase - ok
# 02. v1 discovery with all lowercase - ok
# 03. v1 unknown service /v1/no_service - see error
# 04. v2 query with all uppercase - see error (NGSIv1 error response as not /v2 but /V2)
# 05. v2 query with all lowercase - ok
#

echo "01. v1 discovery with all uppercase - ok"
echo "========================================"
payload='{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EI"
        }
    ]
}'
orionCurl --url /V1/REGISTRY/DISCOVERCONTEXTAVAILABILITY --payload "$payload"
echo
echo


echo "02. v1 discovery with all lowercase - ok"
echo "========================================"
payload='{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EI"
        }
    ]
}'
orionCurl --url /v1/registry/discovercontextavailability --payload "$payload"
echo
echo


echo "03. v1 unknown service /v1/no_service - see error"
echo "================================================="
orionCurl --url /v1/no_service --payload "$payload"
echo
echo


echo "04. v2 query with all uppercase - see error (NGSIv1 error response as not /v2 but /V2)"
echo "======================================================================================"
orionCurl --url /V2/ENTITIES
echo
echo


echo "05. v2 query with all lowercase - ok"
echo "===================================="
orionCurl --url /v2/entities
echo
echo


--REGEXPECT--
01. v1 discovery with all uppercase - ok
========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 70

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


02. v1 discovery with all lowercase - ok
========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 70

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


03. v1 unknown service /v1/no_service - see error
=================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 129

{
    "orionError": {
        "code": "400",
        "details": "Service not found. Check your URL as probably it is wrong.",
        "reasonPhrase": "Bad Request"
    }
}


04. v2 query with all uppercase - see error (NGSIv1 error response as not /v2 but /V2)
======================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 129

{
    "orionError": {
        "code": "400",
        "details": "Service not found. Check your URL as probably it is wrong.",
        "reasonPhrase": "Bad Request"
    }
}


05. v2 query with all lowercase - ok
====================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
