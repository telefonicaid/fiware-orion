# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Filter string scope for v1 operations

----SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

# Note that we need to use v2 create given that v1 create doesn't allow
# numeric values for attributes
#
# 01. v2 Create E1 temperature=20, humidity=80, status=OK
# 02. v2 Create E2 temperature=30, humidity=70, status=ERR
# 03. v2 Create E3 temperature=40, humidity=60, status=OK
# 04. v2 Create E4 temperature=50, humidity=50, status=ERR
# 05. v2 Create E5 temperature=60, humidity=40, status=OK
# 06. v1 Query: temperature<60;humidity==61..83;status==ERR -> E2
#

echo "01. v2 Create E1 temperature=20, humidity=80, status=OK"
echo "======================================================="
payload='{
  "id": "E1",
  "type": "T",
  "temperature": 20,
  "humidity": 80,
  "status": "OK"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo

echo "02. v2 Create E2 temperature=30, humidity=70, status=ERR"
echo "========================================================"
payload='{
  "id": "E2",
  "type": "T",
  "temperature": 30,
  "humidity": 70,
  "status": "ERR"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo

echo "03. v2 Create E3 temperature=40, humidity=60, status=OK"
echo "======================================================="
payload='{
  "id": "E3",
  "type": "T",
  "temperature": 40,
  "humidity": 60,
  "status": "OK"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo

echo "04. v2 Create E4 temperature=50, humidity=50, status=ERR"
echo "========================================================"
payload='{
  "id": "E4",
  "type": "T",
  "temperature": 50,
  "humidity": 50,
  "status": "ERR"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo

echo "05. v2 Create E5 temperature=60, humidity=40, status=OK"
echo "======================================================="
payload='{
  "id": "E5",
  "type": "T",
  "temperature": 60,
  "humidity": 40,
  "status": "OK"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo

echo "06. v1 Query: temperature<60;humidity==61..83;status==ERR -> E2"
echo "==============================================================="
payload='{
  "entities": [
    {
      "type": "T",
      "isPattern": "true",
      "id": ".*"
    }
  ],
  "restriction": {
      "scopes": [
          {
              "type": "FIWARE::StringQuery",
              "value": "temperature<60;humidity==61..83;status==ERR"
          }
      ]
  }
}'
orionCurl --url /v1/queryContext --payload "${payload}"
echo
echo


--REGEXPECT--
01. v2 Create E1 temperature=20, humidity=80, status=OK
=======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. v2 Create E2 temperature=30, humidity=70, status=ERR
========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. v2 Create E3 temperature=40, humidity=60, status=OK
=======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. v2 Create E4 temperature=50, humidity=50, status=ERR
========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E4?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. v2 Create E5 temperature=60, humidity=40, status=OK
=======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E5?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. v1 Query: temperature<60;humidity==61..83;status==ERR -> E2
===============================================================
HTTP/1.1 200 OK
Content-Length: 290
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "humidity",
                        "type": "Number",
                        "value": 70
                    },
                    {
                        "name": "status",
                        "type": "Text",
                        "value": "ERR"
                    },
                    {
                        "name": "temperature",
                        "type": "Number",
                        "value": 30
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
