# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
NGSIv2 notification formats

--SHELL-INIT--
dbInit CB
brokerStart CB 0
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create NGSIv2 subscription for E1/A1 (A1, A6), with attrsFormat set to values and attr-order set to A2-A4-A6-A5-A3-A1
# 02. Create E1/A1+A2+A3+A4+A5+A6
# 03. Dump accumulator to see the notification
#


echo "01. Create NGSIv2 subscription for E1/A1 (A1, A6), with attrsFormat set to values and attr-order set to A2-A4-A6-A5-A3-A1"
echo "========================================================================================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attrs": [ "A1" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ "A2", "A4", "A6", "A5", "A3", "A1" ],
    "attrsFormat": "values"
  },
  "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo



echo "02. Create E1/A1+A2+A3+A4+A5+A6"
echo "==============================="
payload='{
  "id": "E1",
  "type": "none",
  "A1": 1,
  "A2": 2,
  "A3": 3,
  "A4": 4,
  "A5": 5,
  "A6": 6
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "03. Dump accumulator to see the notification"
echo "============================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Create NGSIv2 subscription for E1/A1 (A1, A6), with attrsFormat set to values and attr-order set to A2-A4-A6-A5-A3-A1
=========================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E1/A1+A2+A3+A4+A5+A6
===============================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=none
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Dump accumulator to see the notification
============================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 68
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: values
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        [
            2,
            4,
            6,
            5,
            3,
            1
        ]
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
