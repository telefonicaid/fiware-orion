# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
NGSIv2 notification formats

--SHELL-INIT--
dbInit CB
brokerStart CB 0
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create NGSIv1 subscription for E1/A1 (A1, A2)
# 02. Create NGSIv2 subscription for E1/A1 (A1, A3), without attrsFormat (normalized is default)
# 03. Create NGSIv2 subscription for E1/A1 (A1, A4), with attrsFormat set to normalized
# 04. Create NGSIv2 subscription for E1/A1 (A1, A5), with attrsFormat set to keyValues
# 05. Create NGSIv2 subscription for E1/A1 (A1, A6), with attrsFormat set to values
# 06. Create E1/A1
# 07. Dump accumulator to see 5 notifications
# 08. Reset accumulator
# 09. Update sub2, setting attrsFormat to keyValues
# 10. Update E1/A3, to see notification in sub2
# 11. Dump accumulator to see notification of (A1, A3) with keyValues
#


echo "01. Create NGSIv1 subscription for E1/A1 (A1, A2)"
echo "================================================="
payload='{
  "entities": [
    {
      "id": "E1",
      "type": "none"
    }
  ],
  "attributes": [
    "A1", "A2"
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "${payload}"
sub1=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "02. Create NGSIv2 subscription for E1/A1 (A1, A3), without attrsFormat (normalized is default)"
echo "=============================================================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attrs": [ "A1", "A3" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ "A1", "A3", "sub2_without_attrsFormat" ]
  },
  "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
sub2=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "03. Create NGSIv2 subscription for E1/A1 (A1, A4), with attrsFormat set to normalized"
echo "====================================================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attrs": [ "A1" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ "A1", "A4", "sub3_with_normalized" ],
    "attrsFormat": "normalized"
  },
  "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
sub3=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "04. Create NGSIv2 subscription for E1/A1 (A1, A5), with attrsFormat set to keyValues"
echo "===================================================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attrs": [ "A1" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ "A1", "A5", "sub4_with_keyValues" ],
    "attrsFormat": "keyValues"
  },
  "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
sub4=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "05. Create NGSIv2 subscription for E1/A1 (A1, A6), with attrsFormat set to values"
echo "================================================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attrs": [ "A1" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ "A1", "A6", "sub5_with_values" ],
    "attrsFormat": "values"
  },
  "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
sub5=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "06. Create E1/A1"
echo "================"
payload='{
  "id": "E1",
  "type": "none",
  "A1": 1,
  "A2": 2,
  "A3": 3,
  "A4": 4,
  "A5": 5,
  "A6": 6
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "07. Dump accumulator to see 5 notifications"
echo "==========================================="
accumulatorDump
echo
echo


echo "08. Reset accumulator"
echo "====================="
accumulatorReset
accumulatorDump
echo
echo


echo "09. Update sub2, setting attrsFormat to keyValues"
echo "================================================="
payload='{
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ "A1", "A3", "sub2_without_attrsFormat" ],
    "attrsFormat": "keyValues"
  }
}'
orionCurl --url /v2/subscriptions/$sub2 -X PATCH --payload "$payload"
echo
echo


echo "10. Update E1/A3, to see notification in sub2"
echo "============================================="
payload='{
  "A3": 31
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues' --payload "$payload"
echo
echo


echo "11. Dump accumulator to see notification of (A1, A3) with keyValues"
echo "==================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create NGSIv1 subscription for E1/A1 (A1, A2)
=================================================
HTTP/1.1 200 OK
Content-Length: 104
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M",
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT1S"
    }
}


02. Create NGSIv2 subscription for E1/A1 (A1, A3), without attrsFormat (normalized is default)
==============================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create NGSIv2 subscription for E1/A1 (A1, A4), with attrsFormat set to normalized
=====================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Create NGSIv2 subscription for E1/A1 (A1, A5), with attrsFormat set to keyValues
====================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create NGSIv2 subscription for E1/A1 (A1, A6), with attrsFormat set to values
=================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Create E1/A1
================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=none
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Dump accumulator to see 5 notifications
===========================================
#SORT_START
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 299
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12345])

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "Number",
                        "value": 1
                    },
                    {
                        "name": "A2",
                        "type": "Number",
                        "value": 2
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "none"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 174
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12345])

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Number",
                "value": 1
            },
            "A3": {
                "metadata": {},
                "type": "Number",
                "value": 3
            },
            "id": "E1",
            "type": "none"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 174
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12345])

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Number",
                "value": 1
            },
            "A4": {
                "metadata": {},
                "type": "Number",
                "value": 4
            },
            "id": "E1",
            "type": "none"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 94
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: keyValues
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12345])

{
    "data": [
        {
            "A1": 1,
            "A5": 5,
            "id": "E1",
            "type": "none"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 60
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: values
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12345])

{
    "data": [
        [
            1,
            6
        ]
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
#SORT_END


08. Reset accumulator
=====================


09. Update sub2, setting attrsFormat to keyValues
=================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



10. Update E1/A3, to see notification in sub2
=============================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



11. Dump accumulator to see notification of (A1, A3) with keyValues
===================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 95
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: keyValues
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": 1,
            "A3": 31,
            "id": "E1",
            "type": "none"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
