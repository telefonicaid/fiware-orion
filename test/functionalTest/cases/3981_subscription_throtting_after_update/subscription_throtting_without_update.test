# Copyright 2021 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Throttling after without update

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# Similar case to subscription_throtting_after_update.test, but without updating
# the subscription, so the second notification is not blocked
#
# 01. Create subscription with throttling 1 second
# 02. Create entity E/A=1 (triggers notification)
# 03. Sleep 3 seconds (greater than the 1 second in the original sub)
# 04. Update entity E/A=2 (triggers notification)
# 05. Dump accumulator and see two notifications (A=1 and A=2)
#


echo "01. Create subscription with throttling 1 second"
echo "================================================"
payload='{
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  },
  "throttling": 1
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


SUB_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "02. Create entity E/A=1 (triggers notification)"
echo "==============================================="
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities --payload "${payload}"
echo
echo


echo "03. Sleep 3 seconds (greater than the 1 second in the original sub)"
echo "==================================================================="
sleep 3s
echo
echo


echo "04. Update entity E/A=2 (triggers notification)"
echo "==============================================="
payload='{
  "A": {
    "value": 2,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "${payload}"
echo
echo


echo "05. Dump accumulator and see two notifications (A=1 and A=2)"
echo "============================================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription with throttling 1 second
================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E/A=1 (triggers notification)
===============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Sleep 3 seconds (greater than the 1 second in the original sub)
===================================================================


04. Update entity E/A=2 (triggers notification)
===============================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Dump accumulator and see two notifications (A=1 and A=2)
============================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 122
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Number",
                "value": 1
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 122
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Number",
                "value": 2
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
