# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# NOT VALGRIND READY ...
# The log summary is heavily dependent on the timing, which is totally off under valgrind ...

--NAME--
More than ONE Bad Input in a request

--SHELL-INIT--
dbInit CB
brokerStart CB 0 IPv4 -logSummary 3 -relogAlarms


--SHELL--

#
# Provoke a few transactions and badInputs and check number of BadInputs in log-file, compare with BadInput counter in log summary
#
# 01. Provoke FOUR Bad Inputs
# 02. Sleep 3 secs, awaiting a log summary report
# 03. grep SUMMARY in log-file (4 transactions, 1 bad input)
# 04. grep BadInput in log-file (4 lines found)
#
# Request that gives only ONE BadInput:
#   - PUT /v2/noService
#

echo "01. Provoke FOUR Bad Inputs"
echo "==========================="
orionCurl --url /v2/noService
orionCurl --url /v2/entities --payload "abc"
orionCurl --url /v2/entities -X GETT
orionCurl --url /v2/entities -X POST
echo
echo


echo "02. Sleep 3 secs, awaiting a log summary report"
echo "==============================================="
sleep 3
echo
echo


echo "03. grep SUMMARY in log-file (4 transactions, 1 bad input)"
echo "=========================================================="
# Sometimes (see https://github.com/telefonicaid/fiware-orion/issues/3828) we can get an initial
# summary at the start of the test. Thus, we take only the last five lines for the test
tail -n 6 /tmp/contextBroker.log | grep 'SUMMARY' | awk -F'|' '{ print $10 }' | awk -F= '{ print $2 }' | sed 's/(/_/g' | sed 's/)/_/g'
echo
echo


echo "04. grep BadInput in log-file (4 lines found)"
echo "============================================="
grep BadInput /tmp/contextBroker.log | awk -F'|' '{ print $10 }' | awk -F= '{ print $2 }'
echo
echo


--REGEXPECT--
01. Provoke FOUR Bad Inputs
===========================
HTTP/1.1 400 Bad Request
Content-Length: 97
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Service not found. Check your URL as probably it is wrong.",
    "error": "BadRequest"
}
HTTP/1.1 400 Bad Request
Content-Length: 75
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Errors found in incoming JSON buffer",
    "error": "ParseError"
}
HTTP/1.1 405 Method Not Allowed
Content-Length: 63
Content-Type: application/json
Allow: POST, GET
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "method not allowed",
    "error": "MethodNotAllowed"
}
HTTP/1.1 411 Length Required
Content-Length: 98
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Zero/No Content-Length in PUT/POST/PATCH request",
    "error": "ContentLengthRequired"
}


02. Sleep 3 secs, awaiting a log summary report
===============================================


03. grep SUMMARY in log-file (4 transactions, 1 bad input)
==========================================================
Transactions: REGEX((4 _new: 4_|5 _new: 5_))
DB status: ok, raised: _total: 0, new: 0_, released: _total: 0, new: 0_
Notification failure active alarms: 0, raised: _total: 0, new: 0_, released: _total: 0, new: 0_
Forwarding failure active alarms: 0, raised: _total: 0, new: 0_, released: _total: 0, new: 0_
MQTT connection failure active alarms: 0, raised: _total: 0, new: 0_, released: _total: 0, new: 0_
Bad input active alarms: 1, raised: _total: 1, new: 1_, released: _total: 0, new: 0_


04. grep BadInput in log-file (4 lines found)
=============================================
Raising alarm BadInput 0.0.0.0: service '/v2/noService' not found
Repeated BadInput 0.0.0.0: JSON Parse Error (Invalid value)
Repeated BadInput 0.0.0.0: bad verb for url '/v2/entities', method 'GETT'
Repeated BadInput 0.0.0.0: {"error":"ContentLengthRequired","description":"Zero/No Content-Length in PUT/POST/PATCH request"}


--TEARDOWN--
brokerStop CB
dbDrop CB
