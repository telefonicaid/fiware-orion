a# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Forward That Times Out

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Register E1/T1/A1 on CB with accumulator as ContextProvider
# 02. Update/UPDATE E1/T1/A1 on CB (provoking forward to accumulator)
# 03. Sleep 6 secs (default timeout for forwards is 5 seconds)
# 04. Grep in brokers logfile to see that the forward failed and that the broker thread continued
# 05. Query E1/T1/A1 on CB (provoking forward to accumulator)
# 06. Sleep 6 secs (default timeout for forwards is 5 seconds)
# 07. Grep in brokers logfile to see that the forward failed and that the broker thread continued
#

echo "01. Register E1/T1/A1 on CB with accumulator as ContextProvider"
echo "==============================================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "id":   "E1",
         "type": "T1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${LISTENER_PORT}'/noresponse"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "02. Update/UPDATE E1/T1/A1 on CB (provoking forward to accumulator)"
echo "==================================================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "a1"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. Sleep 6 secs (default timeout for forwards is 5 seconds)"
echo "============================================================"
sleep 6
echo
echo


echo "04. Grep in brokers logfile to see that the forward failed and that the broker thread continued"
echo "==============================================================================================="
grep "Timeout was reached" /tmp/contextBroker.log | grep "forwarding failure for sender-thread" |  awk -F 'msg=' '{print $2}'
echo
echo


echo "05. Query E1/T1/A1 on CB (provoking forward to accumulator)"
echo "==========================================================="
payload='{
  "entities": [
    {
      "type": "",
      "isPattern": "",
      "id": "E1"
    }
  ],
  "attributes": [
    "A1"
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


echo "06. Sleep 6 secs (default timeout for forwards is 5 seconds)"
echo "============================================================"
sleep 6
echo
echo


echo "07. Grep in brokers logfile to see that the forward failed and that the broker thread continued"
echo "==============================================================================================="
grep "Timeout was reached" /tmp/contextBroker.log | grep "forwarding failure for sender-thread" |  awk -F 'msg=' '{print $2}'
echo
echo


--REGEXPECT--
01. Register E1/T1/A1 on CB with accumulator as ContextProvider
===============================================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


02. Update/UPDATE E1/T1/A1 on CB (provoking forward to accumulator)
===================================================================
HTTP/1.1 200 OK
Content-Length: 106
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "details": "error forwarding update",
        "reasonPhrase": "No context element found"
    }
}


03. Sleep 6 secs (default timeout for forwards is 5 seconds)
============================================================


04. Grep in brokers logfile to see that the forward failed and that the broker thread continued
===============================================================================================
Raising alarm ForwardingError localhost:9997/noresponse/updateContext: forwarding failure for sender-thread: Timeout was reached


05. Query E1/T1/A1 on CB (provoking forward to accumulator)
===========================================================
HTTP/1.1 200 OK
Content-Length: 116
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "details": "invalid context provider response",
        "reasonPhrase": "No context element found"
    }
}


06. Sleep 6 secs (default timeout for forwards is 5 seconds)
============================================================


07. Grep in brokers logfile to see that the forward failed and that the broker thread continued
===============================================================================================
Raising alarm ForwardingError localhost:9997/noresponse/updateContext: forwarding failure for sender-thread: Timeout was reached
Raising alarm ForwardingError localhost:9997/noresponse/queryContext: forwarding failure for sender-thread: Timeout was reached


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
