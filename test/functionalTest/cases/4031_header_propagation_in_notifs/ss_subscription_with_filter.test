# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Fiware-ServicePath In Subscriptions with filter

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Make accumulator subscribe to changes in E1/A1 using q filter
# 02. Create E1/A1, using Fiware-ServicePath fgm
# 03. Check that the fgm Fiware-ServicePath was propagated to accumulator
#

echo "01. Make accumulator subscribe to changes in E1/A1 using q filter"
echo "================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": [],
      "expression": {
        "q": "A1:42"
      }
    }
  },
  "notification": {
    "http": {
      "url":     "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create E1/A1, using Fiware-ServicePath fgm"
echo "=============================================="
payload='{
  "id": "E1",
  "type": "T",
  "A1": {
    "value": 42,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities --payload "${payload}"  --servicePath /fgm
echo
echo


echo "03. Check that the fgm Fiware-ServicePath was propagated to accumulator"
echo "======================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Make accumulator subscribe to changes in E1/A1 using q filter
=================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E1/A1, using Fiware-ServicePath fgm
==============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Check that the fgm Fiware-ServicePath was propagated to accumulator
=======================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /fgm
Content-Length: 125
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Number",
                "value": 42
            },
            "id": "E1",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
