# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET Entity Attribute Value using text encoding in NGSIv2

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v2/entities
# 02. GET /v2/entities/E1/a_string/value
# 03. GET /v2/entities/E1/a_bool/value
# 04. GET /v2/entities/E1/a_compound/value
# 05. GET /v2/entities/E1/a_number/value
# 06. GET /v2/entities/E1/attrs/a_vector/value
#

echo "01. POST /v2/entities"
echo "====================="
payload='{
  "id": "E1",
  "type": "T1",
  "a_string": "some value",
  "a_bool": true,
  "a_compound": {
    "string": "1",
    "number": 2,
    "bool": true
  },
  "a_number": 0,
  "a_vector": [ 1, 2, 3, 4 ]
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "02. GET /v2/entities/E1/attrs/a_string/value"
echo "============================================"
orionCurl --url /v2/entities/E1/attrs/a_string/value --out text
echo
echo


echo "03. GET /v2/entities/E1/attrs/a_bool/value"
echo "=========================================="
orionCurl --url /v2/entities/E1/attrs/a_bool/value --out text
echo
echo


echo "04. GET /v2/entities/E1/attrs/a_number/value"
echo "============================================"
orionCurl --url /v2/entities/E1/attrs/a_number/value --out text
echo
echo


echo "05. GET /v2/entities/E1/attrs/a_compound/value"
echo "=============================================="
orionCurl --url /v2/entities/E1/attrs/a_compound/value
echo
echo


echo "06. GET /v2/entities/E1/attrs/a_vector/value"
echo "============================================"
orionCurl --url /v2/entities/E1/attrs/a_vector/value
echo
echo


--REGEXPECT--
01. POST /v2/entities
=====================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. GET /v2/entities/E1/attrs/a_string/value
============================================
HTTP/1.1 200 OK
Content-Length: 12
Content-Type: text/plain
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

"some value"


03. GET /v2/entities/E1/attrs/a_bool/value
==========================================
HTTP/1.1 200 OK
Content-Length: 4
Content-Type: text/plain
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

true


04. GET /v2/entities/E1/attrs/a_number/value
============================================
HTTP/1.1 200 OK
Content-Length: 1
Content-Type: text/plain
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

0


05. GET /v2/entities/E1/attrs/a_compound/value
==============================================
HTTP/1.1 200 OK
Content-Length: 37
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "bool": true,
    "number": 2,
    "string": "1"
}


06. GET /v2/entities/E1/attrs/a_vector/value
============================================
HTTP/1.1 200 OK
Content-Length: 9
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    1,
    2,
    3,
    4
]


--TEARDOWN--
brokerStop CB
dbDrop CB
