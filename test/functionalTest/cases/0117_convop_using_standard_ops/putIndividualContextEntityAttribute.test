# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp putIndividualContextEntityAttribute: PUT /v1/contextEntities/{entityId::id}/attributes/{attribute::name}

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB
brokerStart CP1

--SHELL--

#
# 01. Update/UPDATE E1/T1/A1=1 and see it fail (PUT /v1/contextEntities/E1/attributes/A1?entity::type=T1)
# 02. Update/APPEND E1/T1/A1=10 (POST /v1/updateContext)
# 03. Update/UPDATE E1/T1/A1=1 and see it work (PUT /v1/contextEntities/E1/attributes/A1?entity::type=T1)
# 04. Query CB for E1/T1/A1: A1 == 1
# 05. Update/APPEND E2/T2/A2=1 in CP1
# 06. Register E2/T2/A2 in CB with CP1 as providing application
# 07. Update/UPDATE E2/T2/A2=22 in CB, making it being forwarded to CP1 (PUT /v1/contextEntities/E2/attributes/A2?entity::type=T2)
# 08. Query CP1 for E2/T2/A2
#
#

echo "01. Update/UPDATE E1/T1/A1=1 and see it fail (PUT /v1/contextEntities/E1/attributes/A1?entity::type=T1)"
echo "======================================================================================================="
payload='{
    "type": "AT1",
    "value": "1",
    "metadatas": [
        {
            "name": "m1",
            "type": "M1",
            "value": "mmmmm 1111"
        }
    ]
}'
orionCurl --url /v1/contextEntities/E1/attributes/A1?entity::type=T1 --payload "$payload" -X PUT
echo
echo


echo "02. Update/APPEND E1/T1/A1=10 (POST /v1/updateContext)"
echo "======================================================"
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "",
          "value": 10
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. Update/UPDATE E1/T1/A1=1 and see it work (PUT /v1/contextEntities/E1/attributes/A1?entity::type=T1)"
echo "======================================================================================================="
payload='{
    "type": "AT1",
    "value": "1",
    "metadatas": [
        {
            "name": "m1",
            "type": "M1",
            "value": "mmmmm 1111"
        }
    ]
}'
orionCurl --url /v1/contextEntities/E1/attributes/A1?entity::type=T1 --payload "$payload" -X PUT
echo
echo


echo "04. Query CB for E1/T1/A1: A1 == 1"
echo "=================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "",
      "id": "E1"
    }
  ],
  "attributes": [
    "A1"
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


echo "05. Update/APPEND E2/T2/A2=1 in CP1"
echo "==================================="
payload='{
  "contextElements": [
    {
      "type": "T2",
      "id":   "E2",
      "attributes": [
        {
          "name": "A2",
          "type": "A",
          "value": 1
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP1_PORT
echo
echo


echo "06. Register E2/T2/A2 in CB with CP1 as providing application"
echo "============================================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T2",
         "isPattern": "false",
         "id": "E2"
      }
    ],
    "attributes": [
      {
        "name": "A2",
        "type": "AT2"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "07. Update/UPDATE E2/T2/A2=22 in CB, making it being forwarded to CP1 (PUT /v1/contextEntities/E2/attributes/A2?entity::type=T2)"
echo "================================================================================================================================"
payload='{
    "type": "AT2",
    "value": "22",
    "metadatas": [
        {
            "name": "m2",
            "type": "M2",
            "value": "mmmmm 2222"
        }
    ]
}'
orionCurl --url /v1/contextEntities/E2/attributes/A2?entity::type=T2 --payload "$payload" -X PUT
echo
echo


echo "08. Query CP1 for E2/T2/A2"
echo "=========================="
payload='{
  "entities": [
    {
      "id":   "E2",
      "type": "T2"
    }
  ],
  "attributes": [
    "A2"
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload" --port $CP1_PORT
echo
echo


--REGEXPECT--
01. Update/UPDATE E1/T1/A1=1 and see it fail (PUT /v1/contextEntities/E1/attributes/A1?entity::type=T1)
=======================================================================================================
HTTP/1.1 200 OK
Content-Length: 71
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "404",
    "details": "E1",
    "reasonPhrase": "No context element found"
}


02. Update/APPEND E1/T1/A1=10 (POST /v1/updateContext)
======================================================
HTTP/1.1 200 OK
Content-Length: 183
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Update/UPDATE E1/T1/A1=1 and see it work (PUT /v1/contextEntities/E1/attributes/A1?entity::type=T1)
=======================================================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


04. Query CB for E1/T1/A1: A1 == 1
==================================
HTTP/1.1 200 OK
Content-Length: 248
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "m1",
                                "type": "M1",
                                "value": "mmmmm 1111"
                            }
                        ],
                        "name": "A1",
                        "type": "AT1",
                        "value": "1"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. Update/APPEND E2/T2/A2=1 in CP1
===================================
HTTP/1.1 200 OK
Content-Length: 184
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "A",
                        "value": ""
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": "T2"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. Register E2/T2/A2 in CB with CP1 as providing application
=============================================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


07. Update/UPDATE E2/T2/A2=22 in CB, making it being forwarded to CP1 (PUT /v1/contextEntities/E2/attributes/A2?entity::type=T2)
================================================================================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


08. Query CP1 for E2/T2/A2
==========================
HTTP/1.1 200 OK
Content-Length: 249
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "m2",
                                "type": "M2",
                                "value": "mmmmm 2222"
                            }
                        ],
                        "name": "A2",
                        "type": "AT2",
                        "value": "22"
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": "T2"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
