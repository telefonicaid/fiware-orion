# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp postIndividualContextEntityAttribute: POST /v1/contextEntities/{entityId::id}/attributes/{attribute::name}

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v1/contextEntities/E1/attributes/A1?entity::type=T1 (A1 == 1)
# 02. POST /v1/contextEntities/E1/attributes/A2?entity::type=T2 (A2 == 2)
# 03. Query CB for E1/T1 (E1/A1)
# 04. Query CB for E1/T2 (E1/A2)
# 05. POST /v1/contextEntities/E1/attributes/A3?entity::type=T1 (A3 == 3), service-path /e1/a3
# 06. POST /v1/contextEntities/E1/attributes/A4?entity::type=T1 (A4 == 4), service-path /e1/a4
# 07. POST /v1/contextEntities/E1/attributes/A5?entity::type=T1 (A5 == 5), service-path /e1/a5
# 08. Query CB for E1, service-path /e1/#
# 09. Query CB for E1, service-path /e1/a4
#

echo "01. POST /v1/contextEntities/E1/attributes/A1?entity::type=T1 (A1 == 1)"
echo "======================================================================="
payload='{
    "type": "AT1",
    "value": "1",
    "metadatas": [
        {
            "name": "m1",
            "type": "M1",
            "value": "mmmmm 1111"
        }
    ]
}'
orionCurl --url /v1/contextEntities/E1/attributes/A1?entity::type=T1 --payload "$payload"
echo
echo


echo "02. POST /v1/contextEntities/E1/attributes/A2?entity::type=T2 (A2 == 2)"
echo "======================================================================="
payload='{
    "type": "AT2",
    "value": "2",
    "metadatas": [
        {
            "name": "m2",
            "type": "M2",
            "value": "mmmmm 2222"
        }
    ]
}'
orionCurl --url /v1/contextEntities/E1/attributes/A2?entity::type=T2 --payload "$payload"
echo
echo


echo "03. Query CB for E1/T1 (E1/A1)"
echo "=============================="
payload='{
  "entities": [
    {
      "id": "E1",
      "type": "T1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


echo "04. Query CB for E1/T2 (E1/A2)"
echo "=============================="
payload='{
  "entities": [
    {
      "id": "E1",
      "type": "T2"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


echo "05. POST /v1/contextEntities/E1/attributes/A3?entity::type=T1 (A3 == 3), service-path /e1/a3"
echo "============================================================================================"
payload='{
    "type": "AT3",
    "value": "3",
    "metadatas": [
        {
            "name": "m3",
            "type": "M3",
            "value": "mmmmm 3333"
        }
    ]
}'
orionCurl --url /v1/contextEntities/E1/attributes/A3?entity::type=T1 --payload "$payload" --servicePath /e1/a3
echo
echo


echo "06. POST /v1/contextEntities/E1/attributes/A4?entity::type=T1 (A4 == 4), service-path /e1/a4"
echo "============================================================================================"
payload='{
    "type": "AT4",
    "value": "4",
    "metadatas": [
        {
            "name": "m4",
            "type": "M4",
            "value": "mmmmm 4444"
        }
    ]
}'
orionCurl --url /v1/contextEntities/E1/attributes/A4?entity::type=T1 --payload "$payload" --servicePath /e1/a4
echo
echo


echo "07. POST /v1/contextEntities/E1/attributes/A5?entity::type=T1 (A5 == 5), service-path /e1/a5"
echo "============================================================================================"
payload='{
    "type": "AT5",
    "value": "5",
    "metadatas": [
        {
            "name": "m5",
            "type": "M5",
            "value": "mmmmm 5555"
        }
    ]
}'
orionCurl --url /v1/contextEntities/E1/attributes/A5?entity::type=T1 --payload "$payload" --servicePath /e1/a5
echo
echo


echo "08. Query CB for E1, service-path /e1/#"
echo "======================================="
payload='{
  "entities": [
    {
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload" --servicePath /e1/#
echo
echo


echo "09. Query CB for E1, service-path /e1/a4"
echo "======================================="
payload='{
  "entities": [
    {
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload" --servicePath /e1/a4
echo
echo


--REGEXPECT--
01. POST /v1/contextEntities/E1/attributes/A1?entity::type=T1 (A1 == 1)
=======================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


02. POST /v1/contextEntities/E1/attributes/A2?entity::type=T2 (A2 == 2)
=======================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


03. Query CB for E1/T1 (E1/A1)
==============================
HTTP/1.1 200 OK
Content-Length: 248
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "m1",
                                "type": "M1",
                                "value": "mmmmm 1111"
                            }
                        ],
                        "name": "A1",
                        "type": "AT1",
                        "value": "1"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. Query CB for E1/T2 (E1/A2)
==============================
HTTP/1.1 200 OK
Content-Length: 248
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "m2",
                                "type": "M2",
                                "value": "mmmmm 2222"
                            }
                        ],
                        "name": "A2",
                        "type": "AT2",
                        "value": "2"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T2"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. POST /v1/contextEntities/E1/attributes/A3?entity::type=T1 (A3 == 3), service-path /e1/a3
============================================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


06. POST /v1/contextEntities/E1/attributes/A4?entity::type=T1 (A4 == 4), service-path /e1/a4
============================================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


07. POST /v1/contextEntities/E1/attributes/A5?entity::type=T1 (A5 == 5), service-path /e1/a5
============================================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


08. Query CB for E1, service-path /e1/#
=======================================
HTTP/1.1 200 OK
Content-Length: 700
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "m3",
                                "type": "M3",
                                "value": "mmmmm 3333"
                            }
                        ],
                        "name": "A3",
                        "type": "AT3",
                        "value": "3"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "m4",
                                "type": "M4",
                                "value": "mmmmm 4444"
                            }
                        ],
                        "name": "A4",
                        "type": "AT4",
                        "value": "4"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "m5",
                                "type": "M5",
                                "value": "mmmmm 5555"
                            }
                        ],
                        "name": "A5",
                        "type": "AT5",
                        "value": "5"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


09. Query CB for E1, service-path /e1/a4
=======================================
HTTP/1.1 200 OK
Content-Length: 248
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "m4",
                                "type": "M4",
                                "value": "mmmmm 4444"
                            }
                        ],
                        "name": "A4",
                        "type": "AT4",
                        "value": "4"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
