# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp postContextEntitiesByEntityIdAndType: POST /v1/registry/contextEntities/type/{entity::type}/id/{entity::id}

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Discover E1-T1, and see 0 results
# 02. POST /v1/registry/contextEntities/type/T1/id/E1
# 03. Discover E1-T1, and see 1 result
# 04. Modify registration
# 05. Discover E1-T1, and see modified result
# 06. POST /v1/registry/contextEntities/type/T1/id/E2?!exist=entity::type, and see it fail
# 07. POST /v1/registry/contextEntities/type/T1/id/E2?exist=entity::type, and see it work
# 08. POST /v1/registry/contextEntities/type/T1/id/E2?entity::type=T2, and see it fail
# 09. POST /v1/registry/contextEntities/type/T1/id/E2?entity::type=T1, and see it work
# 10. POST /v1/registry/contextEntities/type/T1/id/E2, servicePath /s1
# 11. POST /v1/registry/contextEntities/type/T1/id/E2, servicePath /s2
# 12. Discover E2-T1, without service-path and see four results
# 13. Discover E2-T1, with service-path /# and see four results
# 14. Discover E2-T1, with service-path / and see two results
# 15. Discover E2-T1, with service-path /s1 and see one result
# 16. Discover E2-T1, with service-path /s2 and see one result
# 17. Discover E2-T1, with service-path /s3 and see zero results
# 18. Discover E2-T1, with service-path /s1,/s2,/s3 and see two results
#

echo "01. Discover E1-T1, and see 0 results"
echo "====================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --payload "$payload"
echo
echo


echo "02. POST /v1/registry/contextEntities/type/T1/id/E1"
echo "==================================================="
payload='{
  "duration": "PT1H",
  "providingApplication": "http://kz.tid.es/part02"
}'
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1 --payload "$payload"
REG_ID=$(echo "$_response" | grep registrationId | awk -F\" '{ print $4}')
echo
echo


echo "03. Discover E1-T1, and see 1 result"
echo "===================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --payload "$payload"
echo
echo


echo "04. Modify registration"
echo "======================="
payload='{
  "duration": "PT2H",
  "providingApplication": "http://kz.tid.es/part04",
  "registrationId": "'$REG_ID'"
}'
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1 --payload "$payload"
echo
echo


echo "05. Discover E1-T1, and see modified result"
echo "==========================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --payload "$payload"
echo
echo


echo "06. POST /v1/registry/contextEntities/type/T1/id/E2?!exist=entity::type, and see it fail"
echo "========================================================================================"
payload='{
  "duration": "PT2H",
  "providingApplication": "http://kz.tid.es/part06"
}'
orionCurl --url /v1/registry/contextEntities/type/T1/id/E2?!exist=entity::type --payload "$payload"
echo
echo


echo "07. POST /v1/registry/contextEntities/type/T1/id/E2?exist=entity::type, and see it work"
echo "======================================================================================="
payload='{
  "duration": "PT2H",
  "providingApplication": "http://kz.tid.es/part07"
}'
orionCurl --url /v1/registry/contextEntities/type/T1/id/E2?exist=entity::type --payload "$payload"
echo
echo


echo "08. POST /v1/registry/contextEntities/type/T1/id/E2?entity::type=T2, and see it fail"
echo "===================================================================================="
payload='{
  "duration": "PT2H",
  "providingApplication": "http://kz.tid.es/part08"
}'
orionCurl --url /v1/registry/contextEntities/type/T1/id/E2?entity::type=T2 --payload "$payload"
echo
echo


echo "09. POST /v1/registry/contextEntities/type/T1/id/E2?entity::type=T1, and see it work"
echo "===================================================================================="
payload='{
  "duration": "PT2H",
  "providingApplication": "http://kz.tid.es/part09"
}'
orionCurl --url /v1/registry/contextEntities/type/T1/id/E2?entity::type=T1 --payload "$payload"
echo
echo


echo "10. POST /v1/registry/contextEntities/type/T1/id/E2, servicePath /s1"
echo "===================================================================="
payload='{
  "duration": "PT2H",
  "providingApplication": "http://kz.tid.es/part10"
}'
orionCurl --url /v1/registry/contextEntities/type/T1/id/E2 --servicePath /s1 --payload "$payload"
echo
echo


echo "11. POST /v1/registry/contextEntities/type/T1/id/E2, servicePath /s2"
echo "===================================================================="
payload='{
  "duration": "PT2H",
  "providingApplication": "http://kz.tid.es/part11"
}'
orionCurl --url /v1/registry/contextEntities/type/T1/id/E2 --servicePath /s2 --payload "$payload"
echo
echo


echo "12. Discover E2-T1, without service-path and see four results"
echo "============================================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E2"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --payload "$payload"
echo
echo


echo "13. Discover E2-T1, with service-path /# and see four results"
echo "============================================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E2"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --servicePath '/#' --payload "$payload"
echo
echo


echo "14. Discover E2-T1, with service-path / and see two results"
echo "==========================================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E2"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --servicePath / --payload "$payload"
echo
echo


echo "15. Discover E2-T1, with service-path /s1 and see one result"
echo "============================================================"
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E2"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --servicePath /s1 --payload "$payload"
echo
echo


echo "16. Discover E2-T1, with service-path /s2 and see one result"
echo "============================================================"
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E2"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --servicePath /s2 --payload "$payload"
echo
echo


echo "17. Discover E2-T1, with service-path /s3 and see zero results"
echo "=============================================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E2"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --servicePath /s3 --payload "$payload"
echo
echo


echo "18. Discover E2-T1, with service-path /s1,/s2,/s3 and see two results"
echo "====================================================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "isPattern": "false",
      "id": "E2"
    }
  ]
}'
orionCurl --url /v1/registry/discoverContextAvailability --servicePath /s1,/s2,/s3 --payload "$payload"
echo
echo


----REGEXPECT--
01. Discover E1-T1, and see 0 results
=====================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


02. POST /v1/registry/contextEntities/type/T1/id/E1
===================================================
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


03. Discover E1-T1, and see 1 result
====================================
HTTP/1.1 200 OK
Content-Length: 166
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part02"
            }
        }
    ]
}


04. Modify registration
=======================
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT2H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


05. Discover E1-T1, and see modified result
===========================================
HTTP/1.1 200 OK
Content-Length: 166
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part04"
            }
        }
    ]
}


06. POST /v1/registry/contextEntities/type/T1/id/E2?!exist=entity::type, and see it fail
========================================================================================
HTTP/1.1 200 OK
Content-Length: 159
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "entity::type cannot be empty for this request",
        "reasonPhrase": "Bad Request"
    },
    "registrationId": "000000000000000000000000"
}


07. POST /v1/registry/contextEntities/type/T1/id/E2?exist=entity::type, and see it work
=======================================================================================
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT2H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


08. POST /v1/registry/contextEntities/type/T1/id/E2?entity::type=T2, and see it fail
====================================================================================
HTTP/1.1 200 OK
Content-Length: 147
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "non-matching entity::types in URL",
        "reasonPhrase": "Bad Request"
    },
    "registrationId": "000000000000000000000000"
}


09. POST /v1/registry/contextEntities/type/T1/id/E2?entity::type=T1, and see it work
====================================================================================
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT2H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


10. POST /v1/registry/contextEntities/type/T1/id/E2, servicePath /s1
====================================================================
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT2H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


11. POST /v1/registry/contextEntities/type/T1/id/E2, servicePath /s2
====================================================================
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT2H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


12. Discover E2-T1, without service-path and see four results
=============================================================
HTTP/1.1 200 OK
Content-Length: 562
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part07"
            }
        },
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part09"
            }
        },
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part10"
            }
        },
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part11"
            }
        }
    ]
}


13. Discover E2-T1, with service-path /# and see four results
=============================================================
HTTP/1.1 200 OK
Content-Length: 562
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part07"
            }
        },
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part09"
            }
        },
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part10"
            }
        },
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part11"
            }
        }
    ]
}


14. Discover E2-T1, with service-path / and see two results
===========================================================
HTTP/1.1 200 OK
Content-Length: 298
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part07"
            }
        },
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part09"
            }
        }
    ]
}


15. Discover E2-T1, with service-path /s1 and see one result
============================================================
HTTP/1.1 200 OK
Content-Length: 166
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part10"
            }
        }
    ]
}


16. Discover E2-T1, with service-path /s2 and see one result
============================================================
HTTP/1.1 200 OK
Content-Length: 166
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part11"
            }
        }
    ]
}


17. Discover E2-T1, with service-path /s3 and see zero results
==============================================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


18. Discover E2-T1, with service-path /s1,/s2,/s3 and see two results
=====================================================================
HTTP/1.1 200 OK
Content-Length: 298
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part10"
            }
        },
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E2",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/part11"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
