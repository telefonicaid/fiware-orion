# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp deleteIndividualContextEntityAttribute: DELETE /v1/contextEntities/{entityId::id}/attributes/{attribute::name}

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 00. Try to delete an attribute with TWO service-paths
# 01. Create an entity E1/T1 with attributes A1, A2 and A3
# 02. Query for E1/T1 and all its attributes (see all three of them)
# 03. Remove E1/A2, using URI param entity::type=T1
# 04. Query for E1/T1 and all its attributes (A2 should not be there)
# 05. Try to remove E1/T2/A2 and see it fail
# 06. Try to remove E1/T1/A2 again and see it fail
# 07. Try to remove E1/T1/A1, with service-path /bad and see it fail
# 08. Remove E1/A1, with service-path / and see it work
# 09. Query for E1 and all its attributes (only A3 left)
#

echo "00. Try to delete an attribute with TWO service-paths"
echo "====================================================="
orionCurl --url /v1/contextEntities/E1/attributes/A2?entity::type=T1 -X DELETE --servicePath /a,/b
echo
echo


echo "01. Create an entity E1/T1 with attributes A1, A2 and A3"
echo "========================================================"
payload='{
    "contextElements": [
        {
            "type" : "T1",
            "isPattern" : "false",
            "id" : "E1",
            "attributes" : [
                {
                    "name" : "A1",
                    "type" : "a",
                    "value" : "1"
                },
                {
                    "name" : "A2",
                    "type" : "a",
                    "value" : "2"
                },
                {
                    "name" : "A3",
                    "type" : "a",
                    "value" : "3"
                }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "02. Query for E1/T1 and all its attributes (see all three of them)"
echo "=================================================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}"
echo
echo


echo "03. Remove E1/A2, using URI param entity::type=T1"
echo "================================================="
orionCurl --url /v1/contextEntities/E1/attributes/A2?entity::type=T1 -X DELETE
echo
echo


echo "04. Query for E1/T1 and all its attributes (A2 should not be there)"
echo "==================================================================="
payload='{
  "entities": [
    {
      "type": "T1",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}"
echo
echo


echo "05. Try to remove E1/T2/A2 and see it fail"
echo "=========================================="
orionCurl --url /v1/contextEntities/E1/attributes/A2?entity::type=T2 -X DELETE
echo
echo


echo "06. Try to remove E1/T1/A2 again and see it fail"
echo "================================================"
orionCurl --url /v1/contextEntities/E1/attributes/A2?entity::type=T1 -X DELETE
echo
echo


echo "07. Try to remove E1/T1/A1, with service-path /bad and see it fail"
echo "=================================================================="
orionCurl --url /v1/contextEntities/E1/attributes/A1?entity::type=T1 -X DELETE --servicePath /bad
echo
echo


echo "08. Remove E1/A1, with service-path / and see it work"
echo "====================================================="
orionCurl --url /v1/contextEntities/E1/attributes/A1?entity::type=T1 -X DELETE --servicePath /
echo
echo


echo "09. Query for E1 and all its attributes (only A3 left)"
echo "======================================================"
payload='{
  "entities": [
    {
      "type": "T1",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}"
echo
echo


--REGEXPECT--
00. Try to delete an attribute with TWO service-paths
=====================================================
HTTP/1.1 200 OK
Content-Length: 131
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "more than one servicepath is not allowed in DELETE operation",
        "reasonPhrase": "Bad Request"
    }
}


01. Create an entity E1/T1 with attributes A1, A2 and A3
========================================================
HTTP/1.1 200 OK
Content-Length: 256
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "a",
                        "value": ""
                    },
                    {
                        "name": "A2",
                        "type": "a",
                        "value": ""
                    },
                    {
                        "name": "A3",
                        "type": "a",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


02. Query for E1/T1 and all its attributes (see all three of them)
==================================================================
HTTP/1.1 200 OK
Content-Length: 259
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "a",
                        "value": "1"
                    },
                    {
                        "name": "A2",
                        "type": "a",
                        "value": "2"
                    },
                    {
                        "name": "A3",
                        "type": "a",
                        "value": "3"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Remove E1/A2, using URI param entity::type=T1
=================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


04. Query for E1/T1 and all its attributes (A2 should not be there)
===================================================================
HTTP/1.1 200 OK
Content-Length: 222
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "a",
                        "value": "1"
                    },
                    {
                        "name": "A3",
                        "type": "a",
                        "value": "3"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. Try to remove E1/T2/A2 and see it fail
==========================================
HTTP/1.1 200 OK
Content-Length: 71
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "404",
    "details": "E1",
    "reasonPhrase": "No context element found"
}


06. Try to remove E1/T1/A2 again and see it fail
================================================
HTTP/1.1 200 OK
Content-Length: 166
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "472",
    "details": "action: DELETE - entity: [E1, T1] - offending attribute: A2 - attribute not found",
    "reasonPhrase": "request parameter is invalid/not allowed"
}


07. Try to remove E1/T1/A1, with service-path /bad and see it fail
==================================================================
HTTP/1.1 200 OK
Content-Length: 71
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "404",
    "details": "E1",
    "reasonPhrase": "No context element found"
}


08. Remove E1/A1, with service-path / and see it work
=====================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


09. Query for E1 and all its attributes (only A3 left)
======================================================
HTTP/1.1 200 OK
Content-Length: 185
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A3",
                        "type": "a",
                        "value": "3"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
