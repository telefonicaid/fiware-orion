# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp getEntityByIdAttributeByNameWithTypeAndId: GET /v1/registry/contextEntities/type/{entity::type}/id/{entity::id}/attributes/{attribute::name}

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB 0
brokerStart CP1 0

--SHELL--

#
# 01. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 and see it fail
# 02. Register E1/T1/A1 (without service-path)
# 03. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 and see it work
# 04. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?exist=entity::type and see it work
# 05. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?entity::type=T1 and see it work
# 06. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?!exist=entity::type and see it fail
# 07. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?entity::type=T2 and see it fail
# 08. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?attributesFormat=object and see it work
# 09. Register E1/T1/A1, service-path /s1 (service-path /s1)
# 10. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, without service-path, see two hits
# 11. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /#, see two hits
# 12. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /, see one hit
# 13. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /s1, see one hit
# 14. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /s2, see no hits
#

echo "01. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 and see it fail"
echo "================================================================================"
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1
echo
echo


echo "02. Register E1/T1/A1 (without service-path)"
echo "============================================"
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string"
      }
    ],
    "providingApplication": "http://kz.tid.es/spath-none"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "03. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 and see it work"
echo "================================================================================"
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1
echo
echo


echo "04. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?exist=entity::type and see it work"
echo "==================================================================================================="
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?exist=entity::type
echo
echo


echo "05. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?entity::type=T1 and see it work"
echo "================================================================================================"
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?entity::type=T1
echo
echo


echo "06. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?!exist=entity::type and see it fail"
echo "===================================================================================================="
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?!exist=entity::type
echo
echo


echo "07. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?entity::type=T2 and see it fail"
echo "================================================================================================"
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?entity::type=T2
echo
echo


echo "08. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?attributesFormat=object and see it work"
echo "========================================================================================================"
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?attributesFormat=object
echo
echo


echo "09. Register E1/T1/A1, service-path /s1 (service-path /s1)"
echo "=========================================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string"
      }
    ],
    "providingApplication": "http://kz.tid.es/spath-s1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload" --servicePath /s1
echo
echo


echo "10. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, without service-path, see two hits"
echo "===================================================================================================="
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1
echo
echo


echo "11. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /#, see two hits"
echo "===================================================================================================="
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 --servicePath /#
echo
echo


echo "12. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /, see one hit"
echo "=================================================================================================="
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 --servicePath /
echo
echo


echo "13. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /s1, see one hit"
echo "===================================================================================================="
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 --servicePath /s1
echo
echo


echo "14. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /s2, see no hits"
echo "===================================================================================================="
orionCurl --url /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 --servicePath /s2
echo
echo


--REGEXPECT--
01. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 and see it fail
================================================================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


02. Register E1/T1/A1 (without service-path)
============================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


03. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1 and see it work
================================================================================
HTTP/1.1 200 OK
Content-Length: 215
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-none"
            }
        }
    ]
}


04. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?exist=entity::type and see it work
===================================================================================================
HTTP/1.1 200 OK
Content-Length: 215
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-none"
            }
        }
    ]
}


05. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?entity::type=T1 and see it work
================================================================================================
HTTP/1.1 200 OK
Content-Length: 215
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-none"
            }
        }
    ]
}


06. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?!exist=entity::type and see it fail
====================================================================================================
HTTP/1.1 200 OK
Content-Length: 115
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "entity::type cannot be empty for this request",
        "reasonPhrase": "Bad Request"
    }
}


07. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?entity::type=T2 and see it fail
================================================================================================
HTTP/1.1 200 OK
Content-Length: 103
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "non-matching entity::types in URL",
        "reasonPhrase": "Bad Request"
    }
}


08. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1?attributesFormat=object and see it work
========================================================================================================
HTTP/1.1 200 OK
Content-Length: 215
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-none"
            }
        }
    ]
}


09. Register E1/T1/A1, service-path /s1 (service-path /s1)
==========================================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


10. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, without service-path, see two hits
====================================================================================================
HTTP/1.1 200 OK
Content-Length: 394
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-none"
            }
        },
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-s1"
            }
        }
    ]
}


11. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /#, see two hits
====================================================================================================
HTTP/1.1 200 OK
Content-Length: 394
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-none"
            }
        },
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-s1"
            }
        }
    ]
}


12. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /, see one hit
==================================================================================================
HTTP/1.1 200 OK
Content-Length: 215
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-none"
            }
        }
    ]
}


13. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /s1, see one hit
====================================================================================================
HTTP/1.1 200 OK
Content-Length: 213
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string"
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": "T1"
                    }
                ],
                "providingApplication": "http://kz.tid.es/spath-s1"
            }
        }
    ]
}


14. GET /v1/registry/contextEntities/type/T1/id/E1/attributes/A1, with service-path /s2, see no hits
====================================================================================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
