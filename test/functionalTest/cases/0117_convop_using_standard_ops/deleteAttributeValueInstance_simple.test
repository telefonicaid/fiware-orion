# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp deleteAttributeValueInstance: DELETE /v1/contextEntities/{entity::id}/attributes/{attribute::name}/{metaID}

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. CREATE E1/T1/A1/M1
# 02. Query E1
# 03. DELETE E1/T1/A1/M2 and see it fail
# 04. DELETE E1/T1/A1/M1 and see it work
# 05. Query E1 to make sure it's gone
#

echo "01. CREATE E1/T1/A1/M1"
echo "======================"
payload='{
  "contextElements": [
    {
      "id":   "E1",
      "type": "T1",
      "attributes" : [
        {
          "name" : "A1",
          "type" : "a",
          "value" : "E1/T1/A1/M1",
          "metadatas": [
            {
              "name": "ID",
              "value": "M1"
            }
          ]
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "02. Query E1"
echo "============"
payload='{
  "entities": [
    {
      "type": "",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo



echo "03. DELETE E1/T1/A1/M2 and see it fail"
echo "======================================"
orionCurl --url /v1/contextEntities/E1/attributes/A1/M2 -X DELETE
echo
echo


echo "04. DELETE E1/T1/A1/M1 and see it work"
echo "======================================"
orionCurl --url /v1/contextEntities/E1/attributes/A1/M1 -X DELETE
echo
echo


echo "05. Query E1 to make sure it's gone"
echo "==================================="
payload='{
  "entities": [
    {
      "type": "",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


--REGEXPECT--
01. CREATE E1/T1/A1/M1
======================
HTTP/1.1 200 OK
Content-Length: 241
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "ID", 
                                "type": "string", 
                                "value": "M1"
                            }
                        ], 
                        "name": "A1", 
                        "type": "a", 
                        "value": ""
                    }
                ], 
                "id": "E1", 
                "isPattern": "false", 
                "type": "T1"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


02. Query E1
============
HTTP/1.1 200 OK
Content-Length: 252
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "ID", 
                                "type": "string", 
                                "value": "M1"
                            }
                        ], 
                        "name": "A1", 
                        "type": "a", 
                        "value": "E1/T1/A1/M1"
                    }
                ], 
                "id": "E1", 
                "isPattern": "false", 
                "type": "T1"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. DELETE E1/T1/A1/M2 and see it fail
======================================
HTTP/1.1 200 OK
Content-Length: 166
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "472", 
    "details": "action: DELETE - entity: [E1, T1] - offending attribute: A1 - attribute not found", 
    "reasonPhrase": "request parameter is invalid/not allowed"
}


04. DELETE E1/T1/A1/M1 and see it work
======================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200", 
    "reasonPhrase": "OK"
}


05. Query E1 to make sure it's gone
===================================
HTTP/1.1 200 OK
Content-Length: 133
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "id": "E1", 
                "isPattern": "false", 
                "type": "T1"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
