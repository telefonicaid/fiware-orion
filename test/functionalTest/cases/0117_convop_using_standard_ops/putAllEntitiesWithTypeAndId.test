# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp putAllEntitiesWithTypeAndId: PUT /v1/contextEntities/type/{entity::type}/id/{entity::id}

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB  0
brokerStart CP1 0

--SHELL--

#
# 01. PUT /v1/contextEntities/type/T1/id/E1, see it fail
# 02. Update/APPEND E1-T1
# 03. PUT /v1/contextEntities/type/T1/id/E1,A1=3 see it work
# 04. PUT /v1/contextEntities/type/T1/id/E1?attributeFormat=object,A1=4 see it work
# 05. PUT /v1/contextEntities/type/T1/id/E1?entity::type=T1,A1=5 see it work
# 06. PUT /v1/contextEntities/type/T1/id/E1?entity::type=T2, and see it fail
# 07. PUT /v1/contextEntities/type/T1/id/E1?!exist=entity::type and see it fail
# 08. PUT /v1/contextEntities/type/T1/id/E1?exist=entity::type and see it work
# 09. Register E2-T1 in CB for CP1
# 10. PUT /v1/contextEntities/type/T1/id/E2, see it fail (does not exist in CP1)
# 11. Update/APPEND E2-T1 in CP1
# 12. PUT /v1/contextEntities/type/T1/id/E2, see it work
#

echo "01. PUT /v1/contextEntities/type/T1/id/E1, see it fail"
echo "======================================================"
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 1
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1 --payload "$payload" -X PUT
echo
echo


echo "02. Update/APPEND E1-T1"
echo "======================="
payload='{
  "contextElements": [
    {
      "type" : "T1",
      "id"   : "E1",
      "attributes" : [
        {
          "name" : "A1",
          "value" : 1
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. PUT /v1/contextEntities/type/T1/id/E1,A1=3 see it work"
echo "=========================================================="
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 3
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1 --payload "$payload" -X PUT
echo
echo


echo "04. PUT /v1/contextEntities/type/T1/id/E1?attributeFormat=object,A1=4 see it work"
echo "================================================================================="
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 4
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1?attributeFormat=object --payload "$payload" -X PUT
echo
echo


echo "05. PUT /v1/contextEntities/type/T1/id/E1?entity::type=T1,A1=5 see it work"
echo "=========================================================================="
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 5
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1?entity::type=T1 --payload "$payload" -X PUT
echo
echo


echo "06. PUT /v1/contextEntities/type/T1/id/E1?entity::type=T2, and see it fail"
echo "=========================================================================="
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 6
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1?entity::type=T2 --payload "$payload" -X PUT
echo
echo


echo "07. PUT /v1/contextEntities/type/T1/id/E1?!exist=entity::type and see it fail"
echo "============================================================================="
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 7
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1?!exist=entity::type --payload "$payload" -X PUT
echo
echo


echo "08. PUT /v1/contextEntities/type/T1/id/E1?exist=entity::type and see it work"
echo "============================================================================"
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 8
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1?exist=entity::type --payload "$payload" -X PUT
echo
echo


echo "09. Register E2-T1 in CB for CP1"
echo "================================"
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "id": "E2"
      }
    ],
    "attributes": [
      {
        "name": "A1"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "10. PUT /v1/contextEntities/type/T1/id/E2, see it fail (does not exist in CP1)"
echo "=============================================================================="
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 5
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E2 --payload "$payload" -X PUT
echo
echo


echo "11. Update/APPEND E2-T1 in CP1"
echo "=============================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E2",
      "attributes": [
        {
          "name": "A1",
          "value": 6
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP1_PORT
echo
echo


echo "12. PUT /v1/contextEntities/type/T1/id/E2, see it work"
echo "======================================================"
payload='{
  "attributes": [
    {
      "name": "A1",
      "value": 7
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E2 --payload "$payload" -X PUT
echo
echo


--REGEXPECT--
01. PUT /v1/contextEntities/type/T1/id/E1, see it fail
======================================================
HTTP/1.1 200 OK
Content-Length: 85
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "details": "E1",
        "reasonPhrase": "No context element found"
    }
}


02. Update/APPEND E1-T1
=======================
HTTP/1.1 200 OK
Content-Length: 183
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. PUT /v1/contextEntities/type/T1/id/E1,A1=3 see it work
==========================================================
HTTP/1.1 200 OK
Content-Length: 122
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1",
                    "type": "",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. PUT /v1/contextEntities/type/T1/id/E1?attributeFormat=object,A1=4 see it work
=================================================================================
HTTP/1.1 200 OK
Content-Length: 115
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": {
                "A1": {
                    "type": "",
                    "value": ""
                }
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. PUT /v1/contextEntities/type/T1/id/E1?entity::type=T1,A1=5 see it work
==========================================================================
HTTP/1.1 200 OK
Content-Length: 122
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1",
                    "type": "",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. PUT /v1/contextEntities/type/T1/id/E1?entity::type=T2, and see it fail
==========================================================================
HTTP/1.1 200 OK
Content-Length: 103
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "non-matching entity::types in URL",
        "reasonPhrase": "Bad Request"
    }
}


07. PUT /v1/contextEntities/type/T1/id/E1?!exist=entity::type and see it fail
=============================================================================
HTTP/1.1 200 OK
Content-Length: 115
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "entity::type cannot be empty for this request",
        "reasonPhrase": "Bad Request"
    }
}


08. PUT /v1/contextEntities/type/T1/id/E1?exist=entity::type and see it work
============================================================================
HTTP/1.1 200 OK
Content-Length: 122
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1",
                    "type": "",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


09. Register E2-T1 in CB for CP1
================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


10. PUT /v1/contextEntities/type/T1/id/E2, see it fail (does not exist in CP1)
==============================================================================
HTTP/1.1 200 OK
Content-Length: 85
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "details": "E2",
        "reasonPhrase": "No context element found"
    }
}


11. Update/APPEND E2-T1 in CP1
==============================
HTTP/1.1 200 OK
Content-Length: 183
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "",
                        "value": ""
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


12. PUT /v1/contextEntities/type/T1/id/E2, see it work
======================================================
HTTP/1.1 200 OK
Content-Length: 122
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1",
                    "type": "",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
