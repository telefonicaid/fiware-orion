# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp getNgsi10ContextEntityTypes: GET /v1/contextEntityTypes/{entity::type}

--SHELL-INIT--
dbInit CB
brokerStart CB 0

--SHELL--

# FIXME P5: Once the broker implements forward queries for entity id patterns, this test case should
#           include forwarding.

#
# 01. GET /v1/contextEntityTypes/ET1 and see 0 responses
# 02. Update/APPEND E1/ET1
# 03. GET /v1/contextEntityTypes/ET1 and see 1 response
# 04. Update/APPEND E1/ET2
# 05. GET /v1/contextEntityTypes/ET1 and see 1 response
# 06. GET /v1/contextEntityTypes/ET2 and see 1 response
# 07. GET /v1/contextEntityTypes/ET1?attributesFormat=object
# 08. GET /v1/contextEntityTypes/ET1?entity::type=ET1 and see 1 response
# 09. GET /v1/contextEntityTypes/ET1?exist=entity::type and see 1 response
# 10. GET /v1/contextEntityTypes/ET1?!exist=entity::type end see it fail
# 11. GET /v1/contextEntityTypes/ET1?entity::type=ET2 and see it fail
#

echo "01. GET /v1/contextEntityTypes/ET1 and see 0 responses"
echo "======================================================"
orionCurl --url /v1/contextEntityTypes/ET1
echo
echo


echo "02. Update/APPEND E1/ET1"
echo "========================"
payload='{
    "contextElements": [
        {
            "type" : "ET1",
            "isPattern" : "false",
            "id" : "E1",
            "attributes" : [
                {
                    "name" : "A1",
                    "type" : "a",
                    "value" : "1"
                }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. GET /v1/contextEntityTypes/ET1 and see 1 response"
echo "====================================================="
orionCurl --url /v1/contextEntityTypes/ET1
echo
echo


echo "04. Update/APPEND E1/ET2"
echo "========================"
payload='{
    "contextElements": [
        {
            "type" : "ET2",
            "isPattern" : "false",
            "id" : "E1",
            "attributes" : [
                {
                    "name" : "A2",
                    "type" : "a",
                    "value" : "2"
                }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "05. GET /v1/contextEntityTypes/ET1 and see 1 response"
echo "====================================================="
orionCurl --url /v1/contextEntityTypes/ET1
echo
echo


echo "06. GET /v1/contextEntityTypes/ET2 and see 1 response"
echo "====================================================="
orionCurl --url /v1/contextEntityTypes/ET2
echo
echo


echo "07. GET /v1/contextEntityTypes/ET1?attributesFormat=object"
echo "=========================================================="
orionCurl --url /v1/contextEntityTypes/ET1?attributesFormat=object
echo
echo


echo "08. GET /v1/contextEntityTypes/ET1?entity::type=ET1 and see 1 response"
echo "======================================================================"
orionCurl --url /v1/contextEntityTypes/ET1?entity::type=ET1
echo
echo


echo "09. GET /v1/contextEntityTypes/ET1?exist=entity::type and see 1 response"
echo "========================================================================"
orionCurl --url /v1/contextEntityTypes/ET1?exist=entity::type
echo
echo


echo "10. GET /v1/contextEntityTypes/ET1?!exist=entity::type end see it fail"
echo "======================================================================"
orionCurl --url /v1/contextEntityTypes/ET1?!exist=entity::type
echo
echo


echo "11. GET /v1/contextEntityTypes/ET1?entity::type=ET2 and see it fail"
echo "==================================================================="
orionCurl --url /v1/contextEntityTypes/ET1?entity::type=ET2
echo
echo


--REGEXPECT--
01. GET /v1/contextEntityTypes/ET1 and see 0 responses
======================================================
HTTP/1.1 200 OK
Content-Length: 116
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "details": "entityId::type /ET1/ non-existent",
        "reasonPhrase": "No context element found"
    }
}


02. Update/APPEND E1/ET1
========================
HTTP/1.1 200 OK
Content-Length: 185
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "a",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. GET /v1/contextEntityTypes/ET1 and see 1 response
=====================================================
HTTP/1.1 200 OK
Content-Length: 186
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "a",
                        "value": "1"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. Update/APPEND E1/ET2
========================
HTTP/1.1 200 OK
Content-Length: 185
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "a",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET2"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. GET /v1/contextEntityTypes/ET1 and see 1 response
=====================================================
HTTP/1.1 200 OK
Content-Length: 186
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "a",
                        "value": "1"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. GET /v1/contextEntityTypes/ET2 and see 1 response
=====================================================
HTTP/1.1 200 OK
Content-Length: 186
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "a",
                        "value": "2"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET2"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


07. GET /v1/contextEntityTypes/ET1?attributesFormat=object
==========================================================
HTTP/1.1 200 OK
Content-Length: 179
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": {
                    "A1": {
                        "type": "a",
                        "value": "1"
                    }
                },
                "id": "E1",
                "isPattern": "false",
                "type": "ET1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


08. GET /v1/contextEntityTypes/ET1?entity::type=ET1 and see 1 response
======================================================================
HTTP/1.1 200 OK
Content-Length: 186
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "a",
                        "value": "1"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


09. GET /v1/contextEntityTypes/ET1?exist=entity::type and see 1 response
========================================================================
HTTP/1.1 200 OK
Content-Length: 186
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "a",
                        "value": "1"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


10. GET /v1/contextEntityTypes/ET1?!exist=entity::type end see it fail
======================================================================
HTTP/1.1 200 OK
Content-Length: 115
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "entity::type cannot be empty for this request",
        "reasonPhrase": "Bad Request"
    }
}


11. GET /v1/contextEntityTypes/ET1?entity::type=ET2 and see it fail
===================================================================
HTTP/1.1 200 OK
Content-Length: 103
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "non-matching entity::types in URL",
        "reasonPhrase": "Bad Request"
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
