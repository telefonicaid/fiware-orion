# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp postContextEntitiesByEntityId: POST /v1/registry/contextEntities/{entityId::id}

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB
brokerStart CP1

--SHELL--

#
# 01. Register E1 using POST /v1/registry/contextEntities/E1
# 02. Discover E1
# 03. Update the registration of E1, CP1 as providing application, using postEntityByIdAttributeByName
# 04. Discover E1
# 05. Create E1/A1 in CP1
# 06. Update/UPDATE E1/A1 in CB
# 07. Query E1/A1 in CB
#

echo "01. Register E1 using POST /v1/registry/contextEntities/E1"
echo "=========================================================="
payload='{
  "duration": "PT1M",
  "providingApplication": "none"
}'
orionCurl --url /v1/registry/contextEntities/E1 --payload "$payload"
REG_ID=$(echo "$_response" | grep registrationId | awk -F\" '{ print $4}')
echo
echo


echo "02. Discover E1"
echo "==============="
orionCurl --url /v1/registry/contextEntities/E1
echo
echo


echo "03. Update the registration of E1, CP1 as providing application, using postEntityByIdAttributeByName"
echo "===================================================================================================="
payload='{
  "duration": "PT1M",
  "providingApplication": "http://localhost:'$CP1_PORT'/v1",
  "registrationId": "'$REG_ID'"
}'
orionCurl --url /v1/registry/contextEntities/E1/attributes/A1 --payload "$payload"
echo
echo


echo "04. Discover E1"
echo "==============="
orionCurl --url /v1/registry/contextEntities/E1
echo
echo


echo "05. Create E1/A1 in CP1"
echo "======================="
payload='{
  "contextElements": [
    {
      "type": "",
      "isPattern": "false",
      "id": "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "degree",
          "value": "20"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP1_PORT
echo
echo


echo "06. Update/UPDATE E1/A1 in CB"
echo "============================="
payload='{
  "contextElements": [
    {
      "type": "",
      "isPattern": "false",
      "id": "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "degree",
          "value": "30"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "07. Query E1/A1 in CB"
echo "====================="
payload='{
  "entities": [
    {
      "type": "",
      "isPattern": "",
      "id": "E1"
    }
  ],
  "attributes": [
    "A1"
  ]
}'
orionCurl --url /v1/queryContext --payload "$payload"
echo
echo


--REGEXPECT--
01. Register E1 using POST /v1/registry/contextEntities/E1
==========================================================
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


02. Discover E1
===============
HTTP/1.1 200 OK
Content-Length: 145
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": ""
                    }
                ],
                "providingApplication": "none"
            }
        }
    ]
}


03. Update the registration of E1, CP1 as providing application, using postEntityByIdAttributeByName
====================================================================================================
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


04. Discover E1
===============
HTTP/1.1 200 OK
Content-Length: 204
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": ""
                    }
                ],
                "entities": [
                    {
                        "id": "E1",
                        "isPattern": "false",
                        "type": ""
                    }
                ],
                "providingApplication": "http://localhost:REGEX(\d*)/v1"
            }
        }
    ]
}


05. Create E1/A1 in CP1
=======================
HTTP/1.1 200 OK
Content-Length: 187
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "degree",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": ""
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. Update/UPDATE E1/A1 in CB
=============================
HTTP/1.1 200 OK
Content-Length: 187
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "degree",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": ""
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


07. Query E1/A1 in CB
=====================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "degree",
                        "value": "30"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": ""
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
