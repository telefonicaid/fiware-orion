# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp getAllEntitiesWithTypeAndId: GET /v1/contextEntities/type/{entity::type}/id/{entity::id}

--SHELL-INIT--
dbInit CB
brokerStart CB 0

--SHELL--

#
# 01. GET /v1/contextEntities/type/T1/id/E1 and see it fail
# 02. Update/APPEND E1-T1
# 03. Update/APPEND E1-T2
# 04. GET /v1/contextEntities/type/T1/id/E1 and see it work
# 05. GET /v1/contextEntities/type/T1/id/E1?entity::type=T1 and see it work
# 06. GET /v1/contextEntities/type/T1/id/E1?entity::type=T2 and see it fail
# 07. GET /v1/contextEntities/type/T2/id/E1?entity::type=T2 and see it work
# 08. GET /v1/contextEntities/type/T1/id/E1?!exist=entity::type and see it fail
# 09. GET /v1/contextEntities/type/T1/id/E1?entity::type=T1&exist=entity::type and see it work
# 10. Update/APPEND E1-T1, service-path /test
# 11. GET /v1/contextEntities/type/T1/id/E1, service-path /test and see it work
# 12. GET /v1/contextEntities/type/T1/id/E1, service-path /test2 and see it fail
# 13. GET /v1/contextEntities/type/T1/id/E1?attributesFormat=object
#

echo "01. GET /v1/contextEntities/type/T1/id/E1 and see it fail"
echo "========================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1
echo
echo


echo "02. Update/APPEND E1-T1"
echo "======================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. Update/APPEND E1-T2"
echo "======================="
payload='{
  "contextElements": [
    {
      "type": "T2",
      "id":   "E1",
      "attributes": [
        {
          "name": "A2",
          "type": "string",
          "value": "2"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "04. GET /v1/contextEntities/type/T1/id/E1 and see it work"
echo "========================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1
echo
echo


echo "05. GET /v1/contextEntities/type/T1/id/E1?entity::type=T1 and see it work"
echo "========================================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1?entity::type=T1
echo
echo


echo "06. GET /v1/contextEntities/type/T1/id/E1?entity::type=T2 and see it fail"
echo "========================================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1?entity::type=T2
echo
echo


echo "07. GET /v1/contextEntities/type/T2/id/E1?entity::type=T2 and see it work"
echo "========================================================================="
orionCurl --url /v1/contextEntities/type/T2/id/E1?entity::type=T2
echo
echo


echo "08. GET /v1/contextEntities/type/T1/id/E1?!exist=entity::type and see it fail"
echo "============================================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1?!exist=entity::type
echo
echo


echo "09. GET /v1/contextEntities/type/T1/id/E1?entity::type=T1&exist=entity::type and see it work"
echo "============================================================================================"
orionCurl --url '/v1/contextEntities/type/T1/id/E1?entity::type=T1&exist=entity::type'
echo
echo


echo "10. Update/APPEND E1-T1, service-path /test"
echo "==========================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "E1-T1-/test"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --servicePath /test
echo
echo


echo "11. GET /v1/contextEntities/type/T1/id/E1, service-path /test and see it work"
echo "============================================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1 --servicePath /test
echo
echo


echo "12. GET /v1/contextEntities/type/T1/id/E1, service-path /test2 and see it fail"
echo "=============================================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1 --servicePath /test2
echo
echo


echo "13. GET /v1/contextEntities/type/T1/id/E1?attributesFormat=object"
echo "================================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1?attributesFormat=object
echo
echo



--REGEXPECT--
01. GET /v1/contextEntities/type/T1/id/E1 and see it fail
=========================================================
HTTP/1.1 200 OK
Content-Length: 160
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "404",
        "details": "Entity id: /E1/",
        "reasonPhrase": "No context element found"
    }
}


02. Update/APPEND E1-T1
=======================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Update/APPEND E1-T2
=======================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T2"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. GET /v1/contextEntities/type/T1/id/E1 and see it work
=========================================================
HTTP/1.1 200 OK
Content-Length: 167
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A1",
                "type": "string",
                "value": "1"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


05. GET /v1/contextEntities/type/T1/id/E1?entity::type=T1 and see it work
=========================================================================
HTTP/1.1 200 OK
Content-Length: 167
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A1",
                "type": "string",
                "value": "1"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


06. GET /v1/contextEntities/type/T1/id/E1?entity::type=T2 and see it fail
=========================================================================
HTTP/1.1 200 OK
Content-Length: 165
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "400",
        "details": "non-matching entity::types in URL",
        "reasonPhrase": "Bad Request"
    }
}


07. GET /v1/contextEntities/type/T2/id/E1?entity::type=T2 and see it work
=========================================================================
HTTP/1.1 200 OK
Content-Length: 167
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A2",
                "type": "string",
                "value": "2"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": "T2"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


08. GET /v1/contextEntities/type/T1/id/E1?!exist=entity::type and see it fail
=============================================================================
HTTP/1.1 200 OK
Content-Length: 177
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "400",
        "details": "entity::type cannot be empty for this request",
        "reasonPhrase": "Bad Request"
    }
}


09. GET /v1/contextEntities/type/T1/id/E1?entity::type=T1&exist=entity::type and see it work
============================================================================================
HTTP/1.1 200 OK
Content-Length: 167
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A1",
                "type": "string",
                "value": "1"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


10. Update/APPEND E1-T1, service-path /test
===========================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


11. GET /v1/contextEntities/type/T1/id/E1, service-path /test and see it work
=============================================================================
HTTP/1.1 200 OK
Content-Length: 177
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A1",
                "type": "string",
                "value": "E1-T1-/test"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


12. GET /v1/contextEntities/type/T1/id/E1, service-path /test2 and see it fail
==============================================================================
HTTP/1.1 200 OK
Content-Length: 160
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "404",
        "details": "Entity id: /E1/",
        "reasonPhrase": "No context element found"
    }
}


13. GET /v1/contextEntities/type/T1/id/E1?attributesFormat=object
=================================================================
HTTP/1.1 200 OK
Content-Length: 160
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": {
            "A1": {
                "type": "string",
                "value": "1"
            }
        },
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
