# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp getIndividualContextEntityAttribute: GET /v1/contextEntities/{entityId::id}/attributes/{attribute::name}

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB 0
brokerStart CP1 0

--SHELL--

#
# 01. GET /v1/contextEntities/E1/attributes/A1 and see it fail
# 02. Update/APPEND E1/T1/A1
# 03. GET /v1/contextEntities/E1/attributes/A1 and see it work
# 04. GET /v1/contextEntities/E1/attributes/A1?!exist=entity::type and see it fail
# 05. Update/APPEND E2//A1
# 06. GET /v1/contextEntities/E2/attributes/A1?!exist=entity::type: E2//A1
# 07. GET /v1/contextEntities/E1/attributes/A1?exist=entity::type: E1/T1/A1
# 08. GET /v1/contextEntities/E1/attributes/A1?entity::type=T2 and see it fail
# 09. GET /v1/contextEntities/E1/attributes/A1?entity::type=T1: E1/T1/A1
# 10. GET /v1/contextEntities/E1/attributes/A1?attributesFormat=object
# 11. Update/APPEND E3/T1/A1 in CP1
# 12. Register E3/T1/A1 in CB, CP1 as provApp
# 13. GET /v1/contextEntities/E3/attributes/A1?entity::type=T1 (from CP1)
#

echo "01. GET /v1/contextEntities/E1/attributes/A1 and see it fail"
echo "============================================================"
orionCurl --url /v1/contextEntities/E1/attributes/A1
echo
echo


echo "02. Update/APPEND E1/T1/A1"
echo "=========================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. GET /v1/contextEntities/E1/attributes/A1 and see it work"
echo "============================================================"
orionCurl --url /v1/contextEntities/E1/attributes/A1
echo
echo


echo "04. GET /v1/contextEntities/E1/attributes/A1?!exist=entity::type and see it fail"
echo "================================================================================"
orionCurl --url /v1/contextEntities/E1/attributes/A1?!exist=entity::type
echo
echo


echo "05. Update/APPEND E2//A1"
echo "========================"
payload='{
  "contextElements": [
    {
      "id":   "E2",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "E2 without type"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "06. GET /v1/contextEntities/E2/attributes/A1?!exist=entity::type: E2//A1"
echo "========================================================================"
orionCurl --url /v1/contextEntities/E2/attributes/A1?!exist=entity::type
echo
echo


echo "07. GET /v1/contextEntities/E1/attributes/A1?exist=entity::type: E1/T1/A1"
echo "========================================================================="
orionCurl --url /v1/contextEntities/E1/attributes/A1?exist=entity::type
echo
echo


echo "08. GET /v1/contextEntities/E1/attributes/A1?entity::type=T2 and see it fail"
echo "============================================================================"
orionCurl --url /v1/contextEntities/E1/attributes/A1?entity::type=T2
echo
echo


echo "09. GET /v1/contextEntities/E1/attributes/A1?entity::type=T1: E1/T1/A1"
echo "======================================================================"
orionCurl --url /v1/contextEntities/E1/attributes/A1?entity::type=T1
echo
echo


echo "10. GET /v1/contextEntities/E1/attributes/A1?attributesFormat=object"
echo "===================================================================="
orionCurl --url /v1/contextEntities/E1/attributes/A1?attributesFormat=object
echo
echo


echo "11. Update/APPEND E3/T1/A1 in CP1"
echo "================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E3",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "On CP1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP1_PORT
echo
echo


echo "12. Register E3/T1/A1 in CB, CP1 as provApp"
echo "==========================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E3"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload" --servicePath /A1
echo
echo


echo "13. GET /v1/contextEntities/E3/attributes/A1?entity::type=T1 (from CP1)"
echo "========================================================================="
orionCurl --url /v1/contextEntities/E3/attributes/A1?entity::type=T1
echo
echo


--REGEXPECT--
01. GET /v1/contextEntities/E1/attributes/A1 and see it fail
============================================================
HTTP/1.1 200 OK
Content-Length: 99
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "404",
        "details": "Entity id: /E1/",
        "reasonPhrase": "No context element found"
    }
}


02. Update/APPEND E1/T1/A1
==========================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. GET /v1/contextEntities/E1/attributes/A1 and see it work
============================================================
HTTP/1.1 200 OK
Content-Length: 106
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A1",
            "type": "string",
            "value": "1"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


04. GET /v1/contextEntities/E1/attributes/A1?!exist=entity::type and see it fail
================================================================================
HTTP/1.1 200 OK
Content-Length: 99
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "404",
        "details": "Entity id: /E1/",
        "reasonPhrase": "No context element found"
    }
}


05. Update/APPEND E2//A1
========================
HTTP/1.1 200 OK
Content-Length: 187
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": ""
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. GET /v1/contextEntities/E2/attributes/A1?!exist=entity::type: E2//A1
========================================================================
HTTP/1.1 200 OK
Content-Length: 120
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A1",
            "type": "string",
            "value": "E2 without type"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


07. GET /v1/contextEntities/E1/attributes/A1?exist=entity::type: E1/T1/A1
=========================================================================
HTTP/1.1 200 OK
Content-Length: 106
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A1",
            "type": "string",
            "value": "1"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


08. GET /v1/contextEntities/E1/attributes/A1?entity::type=T2 and see it fail
============================================================================
HTTP/1.1 200 OK
Content-Length: 99
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "404",
        "details": "Entity id: /E1/",
        "reasonPhrase": "No context element found"
    }
}


09. GET /v1/contextEntities/E1/attributes/A1?entity::type=T1: E1/T1/A1
======================================================================
HTTP/1.1 200 OK
Content-Length: 106
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A1",
            "type": "string",
            "value": "1"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


10. GET /v1/contextEntities/E1/attributes/A1?attributesFormat=object
====================================================================
HTTP/1.1 200 OK
Content-Length: 99
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": {
        "A1": {
            "type": "string",
            "value": "1"
        }
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


11. Update/APPEND E3/T1/A1 in CP1
=================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E3",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


12. Register E3/T1/A1 in CB, CP1 as provApp
===========================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


13. GET /v1/contextEntities/E3/attributes/A1?entity::type=T1 (from CP1)
=========================================================================
HTTP/1.1 200 OK
Content-Length: 111
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A1",
            "type": "string",
            "value": "On CP1"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
