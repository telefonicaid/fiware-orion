# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ExtraOp getAllContextEntities:  GET /v1/contextEntities

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB
brokerStart CP1

--SHELL--

#
# 01. GET /v1/contextEntities and see it fail
# 02. Update/APPEND E1/T1/A1
# 03. GET /v1/contextEntities and see it work
# 04. GET /v1/contextEntities?attributesFormat=object and see it work
# 05. GET /v1/contextEntities?entity::type=T1 and see it work
# 06. GET /v1/contextEntities?exist=entity::type and see it work
# 07. GET /v1/contextEntities?entity::type=T2 and see it fail
# 08. GET /v1/contextEntities?!exist=entity::type and see it fail
# 09. Update/APPEND E2/T1/A1
# 10. Update/APPEND E3/T1/A1
# 11. Update/APPEND E4/T1/A1
# 12. GET /v1/contextEntities?limit=2&details=on
# 13. GET /v1/contextEntities?offset=2&details=on
# 14. Update/APPEND E5//A1
# 15. GET /v1/contextEntities?!exist=entity::type and see it work
#

echo "01. GET /v1/contextEntities and see it fail"
echo "==========================================="
orionCurl --url /v1/contextEntities
echo
echo


echo "02. Update/APPEND E1/T1/A1"
echo "=========================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "02"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. GET /v1/contextEntities and see it work"
echo "==========================================="
orionCurl --url /v1/contextEntities
echo
echo


echo "04. GET /v1/contextEntities?attributesFormat=object and see it work"
echo "==================================================================="
orionCurl --url /v1/contextEntities?attributesFormat=object
echo
echo


echo "05. GET /v1/contextEntities?entity::type=T1 and see it work"
echo "==========================================================="
orionCurl --url /v1/contextEntities?entity::type=T1
echo
echo


echo "06. GET /v1/contextEntities?exist=entity::type and see it work"
echo "=============================================================="
orionCurl --url /v1/contextEntities?exist=entity::type
echo
echo


echo "07. GET /v1/contextEntities?entity::type=T2 and see it fail"
echo "==========================================================="
orionCurl --url /v1/contextEntities?entity::type=T2
echo
echo


echo "08. GET /v1/contextEntities?!exist=entity::type and see it fail"
echo "==============================================================="
orionCurl --url /v1/contextEntities?!exist=entity::type
echo
echo


echo "09. Update/APPEND E2/T1/A1"
echo "=========================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E2",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "02"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "10. Update/APPEND E3/T1/A1"
echo "=========================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E3",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "02"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "11. Update/APPEND E4/T1/A1"
echo "=========================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E4",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "02"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "12. GET /v1/contextEntities?limit=2&details=on"
echo "=============================================="
orionCurl --url '/v1/contextEntities?limit=2&details=on'
echo
echo


echo "13. GET /v1/contextEntities?offset=2&details=on"
echo "==============================================="
orionCurl --url '/v1/contextEntities?offset=2&details=on'
echo
echo


echo "14. Update/APPEND E5//A1"
echo "========================"
payload='{
  "contextElements": [
    {
      "id": "E5",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "15"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "15. GET /v1/contextEntities?!exist=entity::type and see it work"
echo "==============================================================="
orionCurl --url /v1/contextEntities?!exist=entity::type
echo
echo


--REGEXPECT--
01. GET /v1/contextEntities and see it fail
===========================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


02. Update/APPEND E1/T1/A1
==========================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. GET /v1/contextEntities and see it work
===========================================
HTTP/1.1 200 OK
Content-Length: 191
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "02"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. GET /v1/contextEntities?attributesFormat=object and see it work
===================================================================
HTTP/1.1 200 OK
Content-Length: 184
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": {
                    "A1": {
                        "type": "string",
                        "value": "02"
                    }
                },
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. GET /v1/contextEntities?entity::type=T1 and see it work
===========================================================
HTTP/1.1 200 OK
Content-Length: 191
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "02"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. GET /v1/contextEntities?exist=entity::type and see it work
==============================================================
HTTP/1.1 200 OK
Content-Length: 191
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "02"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


07. GET /v1/contextEntities?entity::type=T2 and see it fail
===========================================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


08. GET /v1/contextEntities?!exist=entity::type and see it fail
===============================================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


09. Update/APPEND E2/T1/A1
==========================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


10. Update/APPEND E3/T1/A1
==========================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E3",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


11. Update/APPEND E4/T1/A1
==========================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E4",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


12. GET /v1/contextEntities?limit=2&details=on
==============================================
HTTP/1.1 200 OK
Content-Length: 428
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "02"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "02"
                    }
                ],
                "id": "E2",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "errorCode": {
        "code": "200",
        "details": "Count: 4",
        "reasonPhrase": "OK"
    }
}


13. GET /v1/contextEntities?offset=2&details=on
===============================================
HTTP/1.1 200 OK
Content-Length: 428
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "02"
                    }
                ],
                "id": "E3",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "02"
                    }
                ],
                "id": "E4",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "errorCode": {
        "code": "200",
        "details": "Count: 4",
        "reasonPhrase": "OK"
    }
}


14. Update/APPEND E5//A1
========================
HTTP/1.1 200 OK
Content-Length: 187
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E5",
                "isPattern": "false",
                "type": ""
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


15. GET /v1/contextEntities?!exist=entity::type and see it work
===============================================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "15"
                    }
                ],
                "id": "E5",
                "isPattern": "false",
                "type": ""
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CP1
dbDrop CB
