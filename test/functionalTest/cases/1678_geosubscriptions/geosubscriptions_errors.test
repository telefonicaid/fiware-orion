# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Geo subscriptions - error conditions

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create subscription with errors in geo-fields, get error
# 02. Create subscription, ok
# 03. Update subscription with errors in geo-fields, get error
# 04. Update subscription with partial geo-parameters (one parameter)
# 05. Update subscription with partial geo-parameters (two parameters)
# 06. Create subscription with partial geo-parameters (one parameter)
# 07. Create subscription with partial geo-parameters (two parameters)
#

echo "01. Create subscription with errors in geo-fields, get error"
echo "============================================================"
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "georel": "near;maxDistance:100000",
               "geometry": "xxx",
               "coords": "40.418889,-3.691944"
            }
         }
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create subscription, ok"
echo "==========================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "georel": "near;maxDistance:100000",
               "geometry": "point",
               "coords": "40.418889,-3.691944"
            }
         }
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "03. Update subscription with errors in geo-fields, get error"
echo "============================================================"
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "georel": "near;maxDistance:100",
               "geometry": "point",
               "coords": "36.532787, -6.297897, -23.242"
            }
         }
    }
}
'
orionCurl -X PATCH --url "/v2/subscriptions/$subId" --payload "$payload"
echo
echo


echo "04. Update subscription with partial geo-parameters (one parameter)"
echo "==================================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "georel": "near;maxDistance:100"
            }
         }
    }
}
'
orionCurl -X PATCH --url "/v2/subscriptions/$subId" --payload "$payload"
echo
echo


echo "05. Update subscription with partial geo-parameters (two parameters)"
echo "===================================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "georel": "near;maxDistance:100",
               "geometry": "point"
            }
         }
    }
}
'
orionCurl -X PATCH --url "/v2/subscriptions/$subId" --payload "$payload"
echo
echo


echo "06. Create subscription with partial geo-parameters (one parameter)"
echo "==================================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "georel": "near;maxDistance:100000"
            }
         }
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "07. Create subscription with partial geo-parameters (two parameters)"
echo "===================================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "georel": "near;maxDistance:100000",
               "geometry": "point"
            }
         }
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


--REGEXPECT--
01. Create subscription with errors in geo-fields, get error
============================================================
HTTP/1.1 400 Bad Request
Content-Length: 137
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "error parsing geo-query fields: error parsing geometry: Invalid selector in geometry specification",
    "error": "BadRequest"
}


02. Create subscription, ok
===========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Update subscription with errors in geo-fields, get error
============================================================
HTTP/1.1 400 Bad Request
Content-Length: 106
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "error parsing geo-query fields: invalid point in URI param /coords/",
    "error": "BadRequest"
}


04. Update subscription with partial geo-parameters (one parameter)
===================================================================
HTTP/1.1 400 Bad Request
Content-Length: 119
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "partial geo expression: geometry, georel and coords have to be provided together",
    "error": "BadRequest"
}


05. Update subscription with partial geo-parameters (two parameters)
====================================================================
HTTP/1.1 400 Bad Request
Content-Length: 119
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "partial geo expression: geometry, georel and coords have to be provided together",
    "error": "BadRequest"
}


06. Create subscription with partial geo-parameters (one parameter)
===================================================================
HTTP/1.1 400 Bad Request
Content-Length: 119
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "partial geo expression: geometry, georel and coords have to be provided together",
    "error": "BadRequest"
}


07. Create subscription with partial geo-parameters (two parameters)
====================================================================
HTTP/1.1 400 Bad Request
Content-Length: 119
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "partial geo expression: geometry, georel and coords have to be provided together",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
