# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
POST Subscriptions V2 q expression (equal single number)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription with q: status==22
# 02. Create entity with status=23 (not notif)
# 03. Update entity to status=22 (notif)
# 04. Update entity to status=24 (not notif)
# 05. Update entity to status=22 (notif)
# 06. Dump accumulator (2 notifications)
#

echo "01. Create subscription with q: status==22"
echo "=========================================="
payload='
{
    "subject": {
        "entities": [
            {
                "id": "E1",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "status==22"
            }
         }
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity with status=23 (not notif)"
echo "============================================"
payload='{
  "id": "E1",
  "type": "T",
  "status": 23
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "03. Update entity to status=22 (notif)"
echo "======================================"
payload='{
  "status": 22
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues' --payload "$payload" -X PATCH
echo
echo


echo "04. Update entity to status=24 (not notif)"
echo "=========================================="
payload='{
  "status": 24
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues' --payload "$payload" -X PATCH
echo
echo


echo "05. Update entity to status=22 (notif)"
echo "======================================"
payload='{
  "status": 22
}'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues' --payload "$payload" -X PATCH
echo
echo


echo "06. Get accumulator dump (2 notifications)"
echo "=========================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription with q: status==22
==========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity with status=23 (not notif)
============================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



03. Update entity to status=22 (notif)
======================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. Update entity to status=24 (not notif)
==========================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Update entity to status=22 (notif)
======================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. Get accumulator dump (2 notifications)
==========================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 129
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "id": "E1",
            "status": {
                "metadata": {},
                "type": "Number",
                "value": 22
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 129
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "id": "E1",
            "status": {
                "metadata": {},
                "type": "Number",
                "value": 22
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
