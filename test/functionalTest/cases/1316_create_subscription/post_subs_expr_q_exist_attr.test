# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
POST Subscriptions V2 q expression (exist attribute)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription with q:A (attribute A exists)
# 02. Create entity E1 with A (notif)
# 03. Create entity E2 without A (not notif)
# 04. Append attribute A to E2 (notif)
# 05. Dump accumulator (2 notifications)
#

echo "01. Create subscription with q:A (attribute A exists)"
echo "====================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "q": "A"
            }
         }
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E1 with A (notif)"
echo "==================================="
payload='{
  "id": "E1",
  "type": "T",
  "A": 10,
  "B": 20
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "03. Create entity E2 without A (not notif)"
echo "=========================================="
payload='{
  "id": "E2",
  "type": "T",
  "B": 30,
  "C": 40
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "04. Append attribute A to E2 (notif)"
echo "===================================="
payload='{
  "A": 50
}'
orionCurl --url '/v2/entities/E2/attrs?options=keyValues' --payload "$payload" -X POST
echo
echo


echo "05. Get accumulator dump (2 notifications)"
echo "=========================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription with q:A (attribute A exists)
=====================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity E1 with A (notif)
===================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



03. Create entity E2 without A (not notif)
==========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T
Content-Length: 0



04. Append attribute A to E2 (notif)
====================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Get accumulator dump (2 notifications)
==========================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 171
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Number",
                "value": 10
            },
            "B": {
                "metadata": {},
                "type": "Number",
                "value": 20
            },
            "id": "E1",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 218
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Number",
                "value": 50
            },
            "B": {
                "metadata": {},
                "type": "Number",
                "value": 30
            },
            "C": {
                "metadata": {},
                "type": "Number",
                "value": 40
            },
            "id": "E2",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
