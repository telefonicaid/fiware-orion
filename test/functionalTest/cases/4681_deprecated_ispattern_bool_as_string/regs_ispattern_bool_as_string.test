# Copyright 2025 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Check that deprecated isPattern as string in DB is still working in registrations

--SHELL-INIT--
dbInit CB
dbInit CP1

mongoCmd ${CB_DB_NAME} 'db.registrations.insertMany([
  {
    expiration: Long("9223372036854775807"),
    servicePath: "/",
    contextRegistration: [
      {
        entities: [ { id: "E", type: "T1" } ],
        attrs: [ "A" ],
        providingApplication: "http://localhost:'${CP1_PORT}'/v2"
      }
    ],
    fwdMode: "all",
    format: "normalized"
  },
  {
    expiration: Long("9223372036854775807"),
    servicePath: "/",
    contextRegistration: [
      {
        entities: [ { id: ".*", isPattern: true, type: "T2" } ],
        attrs: [ "A" ],
        providingApplication: "http://localhost:'${CP1_PORT}'/v2"
      }
    ],
    fwdMode: "all",
    format: "normalized"
  },
  {
    expiration: Long("9223372036854775807"),
    servicePath: "/",
    contextRegistration: [
      {
        entities: [ { id: "E", type: "T3" } ],
        attrs: [ "A" ],
        providingApplication: "http://localhost:'${CP1_PORT}'/v2"
      }
    ],
    fwdMode: "all",
    format: "normalized"
  },
  {
    expiration: Long("9223372036854775807"),
    servicePath: "/",
    contextRegistration: [
      {
        entities: [ { id: ".*", isPattern: "true", type: "T4" } ],
        attrs: [ "A" ],
        providingApplication: "http://localhost:'${CP1_PORT}'/v2"
      }
    ],
    fwdMode: "all",
    format: "normalized"
  }
])'

brokerStart CB
brokerStart CP1


--SHELL--

#
# We have pre-inserted in DB 4 registrations:
#
# 1. isPattern: false, type: T1 (*)
# 2. isPattern: true, type: T2
# 3. isPattern: "false", type: T3 (*)
# 4. isPattern: "true", type: T4
#
# (*) It seems that isPattern is not included when not used, so these two are actually the same
#
# 00. Create four entities in CP1
# 01. GET /v2/registrations and see the four registrations
# 02. Query entity four times so registrations get activated
#


echo "00. Create four entities in CP1"
echo "==============================="
payload='{
  "actionType": "append",
  "entities":
  [
    {
      "type": "T1",
      "id":   "E",
      "A": {
         "value": "T1 in CP1",
         "type": "Text"
      }
    },
    {
      "type": "T2",
      "id":   "E",
      "A": {
         "value": "T2 in CP1",
         "type": "Text"
      }
    },
    {
      "type": "T3",
      "id":   "E",
      "A": {
         "value": "T3 in CP1",
         "type": "Text"
      }
    },
    {
      "type": "T4",
      "id":   "E",
      "A": {
         "value": "T4 in CP1",
         "type": "Text"
      }
    }
  ]
}'
orionCurl --url /v2/op/update --payload "$payload" --port $CP1_PORT
echo
echo



echo "01. GET /v2/registrations and see the four registrations"
echo "========================================================"
orionCurl --url /v2/registrations
echo
echo


echo "02. Query entity four times so registrations get activated"
echo "=========================================================="
orionCurl --url '/v2/entities/E?type=T1'
echo
echo


orionCurl --url '/v2/entities/E?type=T2'
echo
echo


orionCurl --url '/v2/entities/E?type=T3'
echo
echo


orionCurl --url '/v2/entities/E?type=T4'
echo
echo


--REGEXPECT--
00. Create four entities in CP1
===============================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



01. GET /v2/registrations and see the four registrations
========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 929

[
    {
        "dataProvided": {
            "attrs": [],
            "entities": [
                {
                    "id": "E",
                    "type": "T1"
                }
            ]
        },
        "id": "REGEX([0-9a-f]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": false,
            "supportedForwardingMode": "all"
        },
        "status": "active"
    },
    {
        "dataProvided": {
            "attrs": [],
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T2"
                }
            ]
        },
        "id": "REGEX([0-9a-f]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": false,
            "supportedForwardingMode": "all"
        },
        "status": "active"
    },
    {
        "dataProvided": {
            "attrs": [],
            "entities": [
                {
                    "id": "E",
                    "type": "T3"
                }
            ]
        },
        "id": "REGEX([0-9a-f]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": false,
            "supportedForwardingMode": "all"
        },
        "status": "active"
    },
    {
        "dataProvided": {
            "attrs": [],
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T4"
                }
            ]
        },
        "id": "REGEX([0-9a-f]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": false,
            "supportedForwardingMode": "all"
        },
        "status": "active"
    }
]


02. Query entity four times so registrations get activated
==========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "A": {
        "metadata": {},
        "type": "Text",
        "value": "T1 in CP1"
    },
    "id": "E",
    "type": "T1"
}


HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "A": {
        "metadata": {},
        "type": "Text",
        "value": "T2 in CP1"
    },
    "id": "E",
    "type": "T2"
}


HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "A": {
        "metadata": {},
        "type": "Text",
        "value": "T3 in CP1"
    },
    "id": "E",
    "type": "T3"
}


HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

{
    "A": {
        "metadata": {},
        "type": "Text",
        "value": "T4 in CP1"
    },
    "id": "E",
    "type": "T4"
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1