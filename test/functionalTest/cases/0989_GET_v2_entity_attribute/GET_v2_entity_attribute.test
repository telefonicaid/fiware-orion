# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET Entitity Attribute V2

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v2/entities/8787GHY
# 02. GET /v2/entities/8787GHY/brand
# 03. GET /v2/entities/8787GHY/model
# 04. GET /v2/entities/8787GHY/speed
# 05. GET /v2/entities/8787GHY/A3
#

echo "01. POST /v2/entities/8787GHY"
echo "============================="
payload='{
    "id": "8787GHY",
    "type": "Car",
    "brand":{

            "type": "string",
            "value": "Mercedes Benz"
        },
    "speed":{

            "type": "number",
            "value" : "150"
        },
    "plateCountry": {
          "value" : "ES"
        },
    "madeInCountry": {
          "value" : "DE"
        },
    "model" : {
          "type": "myString",
          "value" : "Klasse C"
        },
    "A3" : {
          "type": "a",
          "value": "E1/T1/A3/M1",
          "metadata": {
            "m1":
              {
                "value": "M1"
              }
            }
        }


}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo

echo "02. GET /v2/entities/8787GHY/attrs/brand"
echo "========================================"
orionCurl --url /v2/entities/8787GHY/attrs/brand
echo
echo

echo "03. GET /v2/entities/8787GHY/attrs/model"
echo "========================================"
orionCurl --url /v2/entities/8787GHY/attrs/model
echo
echo

echo "04. GET /v2/entities/8787GHY/attrs/speed"
echo "========================================"
orionCurl --url /v2/entities/8787GHY/attrs/speed
echo
echo

echo "05. GET /v2/entities/8787GHY/attrs/A3"
echo "====================================="
orionCurl --url /v2/entities/8787GHY/attrs/A3
echo
echo

--REGEXPECT--
01. POST /v2/entities/8787GHY
=============================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/8787GHY?type=Car
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. GET /v2/entities/8787GHY/attrs/brand
========================================
HTTP/1.1 200 OK
Content-Length: 55
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "metadata": {},
    "type": "string",
    "value": "Mercedes Benz"
}


03. GET /v2/entities/8787GHY/attrs/model
========================================
HTTP/1.1 200 OK
Content-Length: 52
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "metadata": {},
    "type": "myString",
    "value": "Klasse C"
}


04. GET /v2/entities/8787GHY/attrs/speed
========================================
HTTP/1.1 200 OK
Content-Length: 45
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "metadata": {},
    "type": "number",
    "value": "150"
}


05. GET /v2/entities/8787GHY/attrs/A3
=====================================
HTTP/1.1 200 OK
Content-Length: 81
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "metadata": {
        "m1": {
            "type": "Text",
            "value": "M1"
        }
    },
    "type": "a",
    "value": "E1/T1/A3/M1"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
