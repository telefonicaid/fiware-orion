# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Input and Output Format Test

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
url="/v1/queryContext"
payload='<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="Room" isPattern="false">
      <id>OfficeRoom</id>
    </entityId>
  </entityIdList>
  <attributeList>
    <attribute>temperature</attribute>
  </attributeList>
</queryContextRequest>'

echo "0.0: Add an Entity with UpdateContext:APPEND"
(curl localhost:${CB_PORT}/v1/updateContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) << EOF
<?xml version="1.0" encoding="UTF-8"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>OfficeRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue>12</contextValue>
          </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>
EOF
echo '================================================================='
echo

echo "0.1: Query the Entity just to make sure it is there"
orionCurl --url "$url" --payload "${payload}"
echo '================================================================='
echo

echo "1.1: Unrecognized Content-Type, Accepts ONLY JSON: 415, response in JSON"
orionCurl --url "$url" --payload "${payload}" --in "text/plain" --out "application/json"
echo '================================================================='
echo

echo "1.2: Unrecognized Content-Type, Accepts ONLY XML: 415, response in XML"
orionCurl --url "$url" --payload "${payload}" --in "text/plain" --out "application/xml"
echo '================================================================='
echo

echo "1.3: Unrecognized Content-Type, Accepts BOTH JSON and XML: 415, response in XML"
orionCurl --url "$url" --payload "${payload}" --in "text/plain" --out "application/xml, application/json"
echo '================================================================='
echo

echo "1.4: Unrecognized Content-Type, Accepts text/plain: 415, response in XML"
orionCurl --url "$url" --payload "${payload}" --in "text/plain" --out "text/plain"
echo '================================================================='
echo

echo "1.5: Unrecognized Content-Type, Accepts NOTHING: 415, response in XML"
orionCurl --url "$url" --payload "${payload}" --in "text/plain" --out " "
echo '================================================================='
echo

echo "2.1: Content-Type OK, Accepts ONLY JSON: 200, response in JSON"
orionCurl --url "$url" --payload "${payload}" --in "application/xml" --out "application/json"
echo '================================================================='
echo

echo "2.2: Content-Type OK, Accepts ONLY XML: 200, response in XML"
orionCurl --url "$url" --payload "${payload}" --in "application/xml" --out "application/xml"
echo '================================================================='
echo

echo "2.3: Content-Type OK, Accepts BOTH JSON and XML: 200, response in XML"
orionCurl --url "$url" --payload "${payload}" --in "application/xml" --out "application/xml, application/json"
echo '================================================================='
echo

echo "2.4: Content-Type OK, Accepts text/plain: 406, Response in XML"
orionCurl --url "$url" --payload "${payload}" --in "application/xml" --out "text/plain"
echo '================================================================='
echo

--REGEXPECT--
0.0: Add an Entity with UpdateContext:APPEND
<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
=================================================================

0.1: Query the Entity just to make sure it is there
HTTP/1.1 200 OK
Content-Length: 640
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>12</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>
=================================================================

1.1: Unrecognized Content-Type, Accepts ONLY JSON: 415, response in JSON
HTTP/1.1 415 Unsupported Media Type
Connection: close
Content-Length: 151
Content-Type: application/json
Date: REGEX(.*)

{
    "orionError": {
        "code": "415",
        "details": "not supported content type: text/plain",
        "reasonPhrase": "Unsupported Media Type"
    }
}
=================================================================

1.2: Unrecognized Content-Type, Accepts ONLY XML: 415, response in XML
HTTP/1.1 415 Unsupported Media Type
Connection: close
Content-Length: 160
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<orionError>
  <code>415</code>
  <reasonPhrase>Unsupported Media Type</reasonPhrase>
  <details>not supported content type: text/plain</details>
</orionError>
=================================================================

1.3: Unrecognized Content-Type, Accepts BOTH JSON and XML: 415, response in XML
HTTP/1.1 415 Unsupported Media Type
Connection: close
Content-Length: 160
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<orionError>
  <code>415</code>
  <reasonPhrase>Unsupported Media Type</reasonPhrase>
  <details>not supported content type: text/plain</details>
</orionError>
=================================================================

1.4: Unrecognized Content-Type, Accepts text/plain: 415, response in XML
HTTP/1.1 415 Unsupported Media Type
Connection: close
Content-Length: 160
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<orionError>
  <code>415</code>
  <reasonPhrase>Unsupported Media Type</reasonPhrase>
  <details>not supported content type: text/plain</details>
</orionError>
=================================================================

1.5: Unrecognized Content-Type, Accepts NOTHING: 415, response in XML
HTTP/1.1 415 Unsupported Media Type
Connection: close
Content-Length: 160
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<orionError>
  <code>415</code>
  <reasonPhrase>Unsupported Media Type</reasonPhrase>
  <details>not supported content type: text/plain</details>
</orionError>
=================================================================

2.1: Content-Type OK, Accepts ONLY JSON: 200, response in JSON
HTTP/1.1 200 OK
Content-Length: 404
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "temperature",
                        "type": "degree",
                        "value": "12"
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=================================================================

2.2: Content-Type OK, Accepts ONLY XML: 200, response in XML
HTTP/1.1 200 OK
Content-Length: 640
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>12</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>
=================================================================

2.3: Content-Type OK, Accepts BOTH JSON and XML: 200, response in XML
HTTP/1.1 200 OK
Content-Length: 640
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>12</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>
=================================================================

2.4: Content-Type OK, Accepts text/plain: 406, Response in XML
HTTP/1.1 406 Not Acceptable
Connection: close
Content-Length: 208
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<orionError>
  <code>406</code>
  <reasonPhrase>Not Acceptable</reasonPhrase>
  <details>acceptable MIME types: application/xml, application/json. Accept header in request: text/plain</details>
</orionError>
=================================================================

--TEARDOWN--
brokerStop CB
