# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notification Templates - many notifications - after updating csub

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create custom subscription covering E1/T and E2/T
# 02. Create E1/T (notif)
# 03. Create E2/T (notif)
# 04. Create E3/T (not notif)
# 05. Update subscription covering E2/T and E3/T
# 06. Update E1/T (not notif)
# 07. Update E2/T (notif)
# 08. Update E3/T (notif)
# 09. Dump accumulator and see 4 notifications
#


echo "01. Create custom subscription covering E1/T and E2/T"
echo "====================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : "E[1-2]",
        "type" : "T"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  },
  "throttling": 0
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "02. Create E1/T (notif)"
echo "======================="
payload='{
  "id": "E1",
  "type": "T",
  "A1": true
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "03. Create E2/T (notif)"
echo "======================="
payload='{
  "id": "E2",
  "type": "T",
  "A2": null
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "04. Create E3/T (not notif)"
echo "==========================="
payload='{
  "id": "E3",
  "type": "T",
  "A3": 3
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "05. Update subscription covering E2/T and E3/T"
echo "=============================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : "E[2-3]",
        "type" : "T"
      }
    ],
    "condition": {
      "attrs": []
    }
  }
}'
orionCurl --url /v2/subscriptions/$subId -X PATCH --payload "$payload"
echo
echo


echo "06. Update E1/T (not notif)"
echo "==========================="
payload='{
  "A1": false
}'
orionCurl --url /v2/entities/E1/attrs?options=keyValues --payload "$payload"
echo
echo


echo "07. Update E2/T (notif)"
echo "======================="
payload='{
  "A2": "notnull"
}'
orionCurl --url /v2/entities/E2/attrs?options=keyValues --payload "$payload"
echo
echo


echo "08. Update E3/T (notif)"
echo "======================="
payload='{
  "A3": 4
}'
orionCurl --url /v2/entities/E3/attrs?options=keyValues --payload "$payload"
echo
echo


echo "09. Dump accumulator and see 4 notifications"
echo "============================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Create custom subscription covering E1/T and E2/T
=====================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create E1/T (notif)
=======================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T
Content-Length: 0



03. Create E2/T (notif)
=======================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T
Content-Length: 0



04. Create E3/T (not notif)
===========================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E3?type=T
Content-Length: 0



05. Update subscription covering E2/T and E3/T
==============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. Update E1/T (not notif)
===========================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



07. Update E2/T (notif)
=======================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



08. Update E3/T (notif)
=======================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



09. Dump accumulator and see 4 notifications
============================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Boolean",
                "value": true
            },
            "id": "E1",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 125
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A2": {
                "metadata": {},
                "type": "None",
                "value": null
            },
            "id": "E2",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 130
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A2": {
                "metadata": {},
                "type": "Text",
                "value": "notnull"
            },
            "id": "E2",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 124
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A3": {
                "metadata": {},
                "type": "Number",
                "value": 4
            },
            "id": "E3",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
