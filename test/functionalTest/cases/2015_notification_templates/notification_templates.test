# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notification Templates, Normal Case

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription for E1 with only URL in template part
# 02. Create subscription for E1 with URL and VERB in template part
# 03. Create subscription for E1 with URL and PAYLOAD in template part - PAYLOAD with substitutions
# 04. Create subscription for E1 with URL and QS in template part - QS with substitutions
# 05. Create subscription for E1 with URL and HEADERS in template part - HEADERS with substitutions
# 06. Create subscription for E1 with URL, VERB, PAYLOAD, QS and HEADERS in template part - all with substitutions (except VERB, of course)
# 07. Create subscription for E1 with PAYLOAD, QS and HEADERS with unknown attribute 'A4' for substitution
# 08. Create E1 with attributes A1, A2 and A3
# 09. Dump accumulator, see 7 notifications
#

echo "01. Create subscription for E1 with only URL in template part"
echo "============================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":     "http://127.0.0.1:'${LISTENER_PORT}'/${NOTIFY_URL}",
      "qs":      { "step": "01" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create subscription for E1 with URL and VERB in template part"
echo "================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":     "http://127.0.0.1:'${LISTENER_PORT}'/${NOTIFY_URL}",
      "method":  "PATCH",
      "qs":      { "step": "02" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "03. Create subscription for E1 with URL and PAYLOAD in template part - PAYLOAD with substitutions"
echo "================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":     "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "payload": "{ %22A1%22: %22${A1}%22, %22A2%22: %22${A2}%22, %22A3%22: %22${A3}%22, %22step%22: %2203%22 }",
      "qs":       { "step": "03" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "04. Create subscription for E1 with URL and QS in template part - QS with substitutions"
echo "======================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":      "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "qs":       { "step": "04", "id": "${id}", "type": "${type}", "a1": "${A1}", "a2": "${A2}", "a3": "${A3}" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "05. Create subscription for E1 with URL and HEADERS in template part - HEADERS with substitutions"
echo "================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":     "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "headers": { "entity-id": "${id}", "entity-type": "${type}", "A1": "${A1}", "A2": "${A2}", "A3": "${A3}", "step": "05" },
      "qs":      { "step": "05" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "06. Create subscription for E1 with URL, VERB, PAYLOAD, QS and HEADERS in template part - all with substitutions (except VERB, of course)"
echo "========================================================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":      "http://127.0.0.1:'${LISTENER_PORT}'/${NOTIFY_URL}",
      "method":   "DELETE",
      "payload":  "{ %22A1%22: %22${A1}%22, %22A2%22: %22${A2}%22, %22A3%22: %22${A3}%22 }",
      "qs":       { "step": "06", "id": "${id}", "type": "${type}", "a1": "${A1}", "a2": "${A2}", "a3": "${A3}" },
      "headers":  { "entity-id": "${id}", "entity-type": "${type}", "A1": "${A1}", "A2": "${A2}", "A3": "${A3}", "step": "06" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "07. Create subscription for E1 with PAYLOAD, QS and HEADERS with unknown attribute 'A4' for substitution"
echo "========================================================================================================"
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":      "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "payload":  "{ %22A1%22: %22${A1}%22, %22A2%22: %22${A2}%22, %22A4%22: %22${A4}%22 }",
      "qs":       { "step": "07", "id": "${id}", "type": "${type}", "a1": "${A1}", "a2": "${A2}", "a4": "${A4}" },
      "headers":  { "entity-id": "${id}", "entity-type": "${type}", "A1": "${A1}", "A2": "${A2}", "A4": "${A4}", "step": "07", "Content-Type": "user-specified" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "08. Create E1 with attributes A1, A2 and A3"
echo "==========================================="
payload='{
  "id": "E1",
  "A1": "a1",
  "A2": "a2",
  "A3": 13,
  "NOTIFY_URL": "notify"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "09. Dump accumulator, see 7 notifications"
echo "========================================="
sleep 0.5  # Without this sleep, sometimes the last notification is missing
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription for E1 with only URL in template part
=============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create subscription for E1 with URL and VERB in template part
=================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create subscription for E1 with URL and PAYLOAD in template part - PAYLOAD with substitutions
=================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Create subscription for E1 with URL and QS in template part - QS with substitutions
=======================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create subscription for E1 with URL and HEADERS in template part - HEADERS with substitutions
=================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Create subscription for E1 with URL, VERB, PAYLOAD, QS and HEADERS in template part - all with substitutions (except VERB, of course)
=========================================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Create subscription for E1 with PAYLOAD, QS and HEADERS with unknown attribute 'A4' for substitution
========================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Create E1 with attributes A1, A2 and A3
===========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. Dump accumulator, see 7 notifications
=========================================
#SORT_START
POST http://127.0.0.1:REGEX(\d+)/notify?step=01
Fiware-Servicepath: /
Content-Length: 285
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234567])

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Text",
                "value": "a1"
            },
            "A2": {
                "metadata": {},
                "type": "Text",
                "value": "a2"
            },
            "A3": {
                "metadata": {},
                "type": "Number",
                "value": 13
            },
            "NOTIFY_URL": {
                "metadata": {},
                "type": "Text",
                "value": "notify"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
PATCH http://127.0.0.1:REGEX(\d+)/notify?step=02
Fiware-Servicepath: /
Content-Length: 285
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234567])

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Text",
                "value": "a1"
            },
            "A2": {
                "metadata": {},
                "type": "Text",
                "value": "a2"
            },
            "A3": {
                "metadata": {},
                "type": "Number",
                "value": 13
            },
            "NOTIFY_URL": {
                "metadata": {},
                "type": "Text",
                "value": "notify"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify?step=03
Fiware-Servicepath: /
Content-Length: 52
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: custom
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: text/plain; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234567])

{
    "A1": "a1",
    "A2": "a2",
    "A3": "13",
    "step": "03"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify?a1=a1&a2=a2&a3=13&id=E1&step=04&type=Thing
Fiware-Servicepath: /
Content-Length: 285
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234567])

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Text",
                "value": "a1"
            },
            "A2": {
                "metadata": {},
                "type": "Text",
                "value": "a2"
            },
            "A3": {
                "metadata": {},
                "type": "Number",
                "value": 13
            },
            "NOTIFY_URL": {
                "metadata": {},
                "type": "Text",
                "value": "notify"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify?step=05
Fiware-Servicepath: /
Ngsiv2-Attrsformat: normalized
Entity-Id: E1
Content-Length: 285
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Step: 05
Accept: application/json
Host: 127.0.0.1:REGEX(\d+)
A3: 13
A2: a2
A1: a1
Entity-Type: Thing
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234567])

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Text",
                "value": "a1"
            },
            "A2": {
                "metadata": {},
                "type": "Text",
                "value": "a2"
            },
            "A3": {
                "metadata": {},
                "type": "Number",
                "value": 13
            },
            "NOTIFY_URL": {
                "metadata": {},
                "type": "Text",
                "value": "notify"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
DELETE http://127.0.0.1:REGEX(\d+)/notify?a1=a1&a2=a2&a3=13&id=E1&step=06&type=Thing
Fiware-Servicepath: /
Ngsiv2-Attrsformat: custom
Entity-Id: E1
Content-Length: 38
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Step: 06
Accept: application/json
Host: 127.0.0.1:REGEX(\d+)
A3: 13
A2: a2
A1: a1
Entity-Type: Thing
Content-Type: text/plain; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234567])

{
    "A1": "a1",
    "A2": "a2",
    "A3": "13"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify?a1=a1&a2=a2&id=E1&step=07&type=Thing
Fiware-Servicepath: /
Entity-Id: E1
Content-Length: 36
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Step: 07
Ngsiv2-Attrsformat: custom
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
A2: a2
A1: a1
Entity-Type: Thing
Content-Type: user-specified
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234567])

{
    "A1": "a1",
    "A2": "a2",
    "A4": ""
}
=======================================
#SORT_END


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
