# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notification Templates, with refresh of the subscription cache

--SHELL-INIT--
dbInit CB
brokerStart CB 0 IPv4 -subCacheIval 2
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription with template
# 02. Sleep 2.1 seconds to assure the sub-cache is refreshed from mongo
# 03. Create entity to trigger the subscription
# 04. Dump accumulator to see the notification
# 05. GET the subscription
#

echo "01. Create subscription with template"
echo "====================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":      "http://127.0.0.1:'${LISTENER_PORT}'/${NOTIFY_URL}",
      "method":   "PATCH",
      "payload":  "{ %22A1%22: %22${A1}%22, %22A2%22: %22${A2}%22, %22A3%22: %22${A3}%22 }",
      "qs":       { "id": "${id}", "type": "${type}", "a1": "${A1}", "a2": "${A2}", "a3": "${A3}" },
      "headers":  { "entity-id": "${id}", "entity-type": "${type}", "A1": "${A1}", "A2": "${A2}", "A3": "${A3}" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Sleep 2.1 seconds to assure the sub-cache is refreshed from mongo"
echo "====================================================================="
sleep 2.1
echo
echo


echo "03. Create entity to trigger the subscription"
echo "============================================="
payload='{
  "id": "E1",
  "A1": "a1",
  "A2": "a2",
  "A3": 13,
  "NOTIFY_URL": "notify"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "04. Dump accumulator to see the notification"
echo "============================================"
accumulatorDump
echo
echo


echo "05. GET the subscription"
echo "========================"
orionCurl --url /v2/subscriptions
echo
echo


--REGEXPECT--
01. Create subscription with template
=====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Sleep 2.1 seconds to assure the sub-cache is refreshed from mongo
=====================================================================


03. Create entity to trigger the subscription
=============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Dump accumulator to see the notification
============================================
PATCH http://127.0.0.1:REGEX(\d+)/notify?a1=a1&a2=a2&a3=13&id=E1&type=Thing
Fiware-Servicepath: /
Content-Length: 38
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: custom
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: text/plain; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1
A1: a1
A2: a2
A3: 13
Entity-Id: E1
Entity-Type: Thing

{
    "A1": "a1",
    "A2": "a2",
    "A3": "13"
}
=======================================


05. GET the subscription
========================
HTTP/1.1 200 OK
Content-Length: 665
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "covered": false,
            "httpCustom": {
                "headers": {
                    "A1": "${A1}",
                    "A2": "${A2}",
                    "A3": "${A3}",
                    "entity-id": "${id}",
                    "entity-type": "${type}"
                },
                "method": "PATCH",
                "payload": "{ %22A1%22: %22${A1}%22, %22A2%22: %22${A2}%22, %22A3%22: %22${A3}%22 }",
                "qs": {
                    "a1": "${A1}",
                    "a2": "${A2}",
                    "a3": "${A3}",
                    "id": "${id}",
                    "type": "${type}"
                },
                "url": "http://127.0.0.1:9997/${NOTIFY_URL}"
            },
            "lastNotification": "REGEX(.*)",
            "lastSuccess": "REGEX(.*)",
            "lastSuccessCode": 200,
            "onlyChangedAttrs": false,
            "timesSent": 1
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": []
            },
            "entities": [
                {
                    "id": "E1"
                }
            ]
        }
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
