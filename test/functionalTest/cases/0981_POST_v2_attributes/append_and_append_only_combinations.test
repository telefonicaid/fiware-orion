# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
POST /v2/entities/E1 on entity that exists

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1 with attr1
# 02. Get E1 (only attr1)
# 03. POST /v2/entities/E1 attribute 'attr2'
# 04. Get E1 (attr1, attr2)
# 05. POST /v2/entities/E1?options=append attribute 'attr3'
# 06. Get E1 (attr1, attr2, attr3)
# 07. POST /v2/entities/E1 attribute 'attr3+attr4' (no error)
# 08. Get E1 (attr1, attr2, attr3, attr4)
# 09. POST /v2/entities/E1?options=append attribute 'attr4+attr5' (attr4 already exists. error)
# 10. Get E1 (attr1, attr2, attr3, attr4, attr5)

echo "01. Create E1 with attr1"
echo "========================"
payload='{ "id": "E1", "attr1": 1 }'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "02. Get E1 (only attr1)"
echo "======================="
orionCurl --url /v2/entities/E1
echo
echo


echo "03. POST /v2/entities/E1/attrs attribute 'attr2'"
echo "================================================"
payload='{  "attr2": 2 }'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues' --payload "$payload"
echo
echo


echo "04. Get E1 (attr1, attr2)"
echo "========================="
orionCurl --url /v2/entities/E1
echo
echo


echo "05. POST /v2/entities/E1/attrs?options=append attribute 'attr3'"
echo "==============================================================="
payload='{  "attr3": 3 }'
orionCurl --url '/v2/entities/E1/attrs?options=append,keyValues' --payload "$payload"
echo
echo


echo "06. Get E1 (attr1, attr2, attr3)"
echo "================================"
orionCurl --url /v2/entities/E1
echo
echo


echo "07. POST /v2/entities/E1/attrs attribute 'attr3+attr4' (no error)"
echo "================================================================="
payload='{  "attr3": 33, "attr4": 4 }'
orionCurl --url '/v2/entities/E1/attrs?options=keyValues' --payload "$payload"
echo
echo


echo "08. Get E1 (attr1, attr2, attr3, att4)"
echo "======================================"
orionCurl --url /v2/entities/E1
echo
echo


echo "09. POST /v2/entities/E1/attrs?options=append attribute 'attr4+attr5' (attr4 already exists. error)"
echo "==================================================================================================="
payload='{  "attr4": 44, "attr5": 5 }'
orionCurl --url '/v2/entities/E1/attrs?options=append,keyValues' --payload "$payload"
echo
echo


echo "10. Get E1 (attr1, attr2, attr3, attr4, attr5)"
echo "=============================================="
orionCurl --url /v2/entities/E1
echo
echo


--REGEXPECT--
01. Create E1 with attr1
========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Get E1 (only attr1)
=======================
HTTP/1.1 200 OK
Content-Length: 76
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "Number",
        "value": 1
    },
    "id": "E1",
    "type": "Thing"
}


03. POST /v2/entities/E1/attrs attribute 'attr2'
================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Get E1 (attr1, attr2)
=========================
HTTP/1.1 200 OK
Content-Length: 126
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "Number",
        "value": 1
    },
    "attr2": {
        "metadata": {},
        "type": "Number",
        "value": 2
    },
    "id": "E1",
    "type": "Thing"
}


05. POST /v2/entities/E1/attrs?options=append attribute 'attr3'
===============================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Get E1 (attr1, attr2, attr3)
================================
HTTP/1.1 200 OK
Content-Length: 176
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "Number",
        "value": 1
    },
    "attr2": {
        "metadata": {},
        "type": "Number",
        "value": 2
    },
    "attr3": {
        "metadata": {},
        "type": "Number",
        "value": 3
    },
    "id": "E1",
    "type": "Thing"
}


07. POST /v2/entities/E1/attrs attribute 'attr3+attr4' (no error)
=================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Get E1 (attr1, attr2, attr3, att4)
======================================
HTTP/1.1 200 OK
Content-Length: 227
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "Number",
        "value": 1
    },
    "attr2": {
        "metadata": {},
        "type": "Number",
        "value": 2
    },
    "attr3": {
        "metadata": {},
        "type": "Number",
        "value": 33
    },
    "attr4": {
        "metadata": {},
        "type": "Number",
        "value": 4
    },
    "id": "E1",
    "type": "Thing"
}


09. POST /v2/entities/E1/attrs?options=append attribute 'attr4+attr5' (attr4 already exists. error)
===================================================================================================
HTTP/1.1 422 Unprocessable Entity
Content-Length: 111
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "one or more of the attributes in the request already exist: [ attr4 ]",
    "error": "Unprocessable"
}


10. Get E1 (attr1, attr2, attr3, attr4, attr5)
==============================================
HTTP/1.1 200 OK
Content-Length: 277
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "Number",
        "value": 1
    },
    "attr2": {
        "metadata": {},
        "type": "Number",
        "value": 2
    },
    "attr3": {
        "metadata": {},
        "type": "Number",
        "value": 33
    },
    "attr4": {
        "metadata": {},
        "type": "Number",
        "value": 4
    },
    "attr5": {
        "metadata": {},
        "type": "Number",
        "value": 5
    },
    "id": "E1",
    "type": "Thing"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
