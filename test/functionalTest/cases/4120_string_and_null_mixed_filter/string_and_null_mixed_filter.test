# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Mix string and null in same filter

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity E1 with attribute A=null
# 02. Create entity E2 with attribute A=foo
# 03. Create entity E3 without attribute A
# 04. GET /v2/entities?q=A:null and see E1
# 05. GET /v2/entities?q=A:foo,null and see E1 and E2
# 05b. GET /v2/entities?q=A:null,foo (reverse order) and see E1 and E2
# 06. GET /v2/entities?q=A!=null and see E2
# 07. GET /v2/entities?q=A!=foo,null and see nothing
# 07b. GET /v2/entities?q=A!=null,foo (reserve order) and see nothing
#

echo "01. Create entity E1 with attribute A=null"
echo "=========================================="
payload='{
    "id": "E1",
    "type": "T",
    "A": {
        "value": null,
        "type": "None"
    }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create entity E2 with attribute A=foo"
echo "========================================="
payload='{
    "id": "E2",
    "type": "T",
    "A": {
        "value": "foo",
        "type": "Text"
    }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Create entity E3 without attribute A"
echo "========================================"
payload='{
    "id": "E3",
    "type": "T",
    "B": {
        "value": "zzz",
        "type": "Text"
    }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo



echo "04. GET /v2/entities?q=A:null and see E1"
echo "========================================"
orionCurl --url /v2/entities?q=A:null
echo
echo


echo "05. GET /v2/entities?q=A:foo,null and see E1 and E2"
echo "==================================================="
orionCurl --url /v2/entities?q=A:foo,null
echo
echo


echo "05b. GET /v2/entities?q=A:foo,null (reverse order) and see E1 and E2"
echo "===================================================================="
orionCurl --url /v2/entities?q=A:null,foo
echo
echo


echo "06. GET /v2/entities?q=A!=null and see E2"
echo "========================================="
orionCurl --url '/v2/entities?q=A!=null'
echo
echo


echo "07. GET /v2/entities?q=A!=foo,null and see nothing"
echo "=================================================="
orionCurl --url '/v2/entities?q=A!=foo,null'
echo
echo


echo "07b. GET /v2/entities?q=A!=null,foo (reverse order) and see nothing"
echo "==================================================================="
orionCurl --url '/v2/entities?q=A!=null,foo'
echo
echo


--REGEXPECT--
01. Create entity E1 with attribute A=null
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E2 with attribute A=foo
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create entity E3 without attribute A
========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. GET /v2/entities?q=A:null and see E1
========================================
HTTP/1.1 200 OK
Content-Length: 71
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A": {
            "metadata": {},
            "type": "None",
            "value": null
        },
        "id": "E1",
        "type": "T"
    }
]


05. GET /v2/entities?q=A:foo,null and see E1 and E2
===================================================
HTTP/1.1 200 OK
Content-Length: 142
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A": {
            "metadata": {},
            "type": "None",
            "value": null
        },
        "id": "E1",
        "type": "T"
    },
    {
        "A": {
            "metadata": {},
            "type": "Text",
            "value": "foo"
        },
        "id": "E2",
        "type": "T"
    }
]


05b. GET /v2/entities?q=A:foo,null (reverse order) and see E1 and E2
====================================================================
HTTP/1.1 200 OK
Content-Length: 142
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A": {
            "metadata": {},
            "type": "None",
            "value": null
        },
        "id": "E1",
        "type": "T"
    },
    {
        "A": {
            "metadata": {},
            "type": "Text",
            "value": "foo"
        },
        "id": "E2",
        "type": "T"
    }
]


06. GET /v2/entities?q=A!=null and see E2
=========================================
HTTP/1.1 200 OK
Content-Length: 72
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A": {
            "metadata": {},
            "type": "Text",
            "value": "foo"
        },
        "id": "E2",
        "type": "T"
    }
]


07. GET /v2/entities?q=A!=foo,null and see nothing
==================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


07b. GET /v2/entities?q=A!=null,foo (reverse order) and see nothing
===================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
