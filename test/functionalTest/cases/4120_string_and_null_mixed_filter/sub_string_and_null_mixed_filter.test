# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Mix string and null in same filter (subscriptions)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription with q filter A:foo,null
# 02. Create entity E1 with attribute A=null
# 03. Create entity E2 with attribute A=foo
# 04. Create entity E3 with attribute A=bar
# 05. Create entity E4 without attribute A
# 06. Check notifications see two ones (E1 and E2)
#


echo "01. Create subscription with q filter A:foo,null"
echo "================================================"
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": ".*",
        "type": "T"
      }
    ],
    "condition": {
      "expression": {
        "q": "A:foo,null"
      }
    }
  },
  "notification": {
    "http": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E1 with attribute A=null"
echo "=========================================="
payload='{
    "id": "E1",
    "type": "T",
    "A": {
        "value": null,
        "type": "None"
    }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Create entity E2 with attribute A=foo"
echo "========================================="
payload='{
    "id": "E2",
    "type": "T",
    "A": {
        "value": "foo",
        "type": "Text"
    }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. Create entity E3 with attribute A=bar"
echo "========================================="
payload='{
    "id": "E3",
    "type": "T",
    "A": {
        "value": "bar",
        "type": "Text"
    }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "05. Create entity E4 without attribute A"
echo "========================================"
payload='{
    "id": "E4",
    "type": "T",
    "B": {
        "value": "zzz",
        "type": "Text"
    }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "06. Check notifications see two ones (E1 and E2)"
echo "================================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription with q filter A:foo,null
================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E1 with attribute A=null
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create entity E2 with attribute A=foo
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Create entity E3 with attribute A=bar
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create entity E4 without attribute A
========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E4?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Check notifications see two ones (E1 and E2)
================================================
POST http://127.0.0.1:9997/notify
Fiware-Servicepath: /
Content-Length: 124
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:9997
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "None",
                "value": null
            },
            "id": "E1",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:9997/notify
Fiware-Servicepath: /
Content-Length: 125
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:9997
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Text",
                "value": "foo"
            },
            "id": "E2",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
