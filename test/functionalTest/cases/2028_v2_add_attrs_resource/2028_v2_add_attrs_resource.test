# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET Entity V2 /attrs (w/o id type)

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v2/entities to create 8787GHY entity
# 02. GET /v2/entities/8787GHY/attrs
# 03. GET /v2/entities/8787GHY/attrs?options=keyValues
# 04. GET /v2/entities/8787GHY/attrs?options=values
#

echo "01. POST /v2/entities to create 8787GHY entity"
echo "=============================================="
payload='{
  "id": "8787GHY",
  "type": "Car",
  "brand":{
    "type": "string",
    "value": "Mercedes Benz"
  },
  "speed":{
    "type": "number",
    "value" : "150"
  },
  "plateCountry": {
    "value" : "ES"
  },
  "madeInCountry": {
    "value" : "DE"
  },
  "model" : {
    "type": "myString",
    "value" : "Klasse C"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. GET /v2/entities/8787GHY/attrs"
echo "=================================="
orionCurl --url /v2/entities/8787GHY/attrs
echo
echo


echo "03. GET /v2/entities/8787GHY/attrs?options=keyValues"
echo "===================================================="
orionCurl --url /v2/entities/8787GHY/attrs?options=keyValues
echo
echo


echo "04. GET /v2/entities/8787GHY/attrs?options=values"
echo "================================================="
orionCurl --url /v2/entities/8787GHY/attrs?options=values
echo
echo


--REGEXPECT--
01. POST /v2/entities to create 8787GHY entity
==============================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/8787GHY?type=Car
Content-Length: 0



02. GET /v2/entities/8787GHY/attrs
==================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 297

{
    "brand": {
        "metadata": {},
        "type": "string",
        "value": "Mercedes Benz"
    },
    "madeInCountry": {
        "metadata": {},
        "type": "Text",
        "value": "DE"
    },
    "model": {
        "metadata": {},
        "type": "myString",
        "value": "Klasse C"
    },
    "plateCountry": {
        "metadata": {},
        "type": "Text",
        "value": "ES"
    },
    "speed": {
        "metadata": {},
        "type": "number",
        "value": "150"
    }
}


03. GET /v2/entities/8787GHY/attrs?options=keyValues
====================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 99

{
    "brand": "Mercedes Benz",
    "madeInCountry": "DE",
    "model": "Klasse C",
    "plateCountry": "ES",
    "speed": "150"
}


04. GET /v2/entities/8787GHY/attrs?options=values
=================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 44

[
    "Mercedes Benz",
    "DE",
    "Klasse C",
    "ES",
    "150"
]


--TEARDOWN--
brokerStop CB
dbDrop CB
