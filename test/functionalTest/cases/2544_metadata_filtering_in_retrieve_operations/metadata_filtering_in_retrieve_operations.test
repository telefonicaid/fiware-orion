# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
HTTP info in cached subscription on subUpdate

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity E1 with attr A1 with md M1, M2 and M3
# 02. GET /v2/entities/E1/attrs?metadata=M1,M2
# 03. GET /v2/entities?metadata=M1,M2
# 04. GET /v2/entities/E1?metadata=M1,M2
# 05. GET /v2/entities/E1/attrs/A1?metadata=M1,M2
# 06. POST /v2/op/query with attributes=A1 and metadata=M1,M2 in payload
# 07. GET /v2/entities/E1/attrs?metadata=* - see M1, M2 and M3
# 08. POST /v2/op/query with attributes=A1 and metadata=* in payload - see M1, M2 and M3
#

echo "01. Create entity E1 with attr A1 with md M1, M2 and M3"
echo "======================================================="
payload='{
  "id": "E1",
  "A1": {
    "value": 1,
    "metadata": {
      "M1": {
        "value": "m1"
      },
      "M2": {
        "value": "m2"
      },
      "M3": {
        "value": "m3"
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. GET /v2/entities/E1/attrs?metadata=M1,M2"
echo "============================================"
orionCurl --url '/v2/entities/E1/attrs?metadata=M1,M2'
echo
echo


echo "03. GET /v2/entities?metadata=M1,M2"
echo "==================================="
orionCurl --url '/v2/entities?metadata=M1,M2'
echo
echo


echo "04. GET /v2/entities/E1?metadata=M1,M2"
echo "======================================"
orionCurl --url '/v2/entities/E1?metadata=M1,M2'
echo
echo


echo "05. GET /v2/entities/E1/attrs/A1?metadata=M1,M2"
echo "==============================================="
orionCurl --url '/v2/entities/E1/attrs/A1?metadata=M1,M2'
echo
echo


echo "06. POST /v2/op/query with attributes=A1 and metadata=M1,M2 in payload"
echo "======================================================================"
payload='{
  "attributes": [ "A1" ],
  "metadata":   [ "M1", "M2" ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "07. GET /v2/entities/E1/attrs?metadata=* - see M1, M2 and M3"
echo "============================================================"
orionCurl --url '/v2/entities/E1/attrs?metadata=*'
echo
echo


echo "08. POST /v2/op/query with attributes=A1 and metadata=* in payload - see M1, M2 and M3"
echo "======================================================================================"
payload='{
  "attributes": [ "A1" ],
  "metadata":   [ "*" ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


--REGEXPECT--
01. Create entity E1 with attr A1 with md M1, M2 and M3
=======================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



02. GET /v2/entities/E1/attrs?metadata=M1,M2
============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 115

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "Text",
                "value": "m1"
            },
            "M2": {
                "type": "Text",
                "value": "m2"
            }
        },
        "type": "Number",
        "value": 1
    }
}


03. GET /v2/entities?metadata=M1,M2
===================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 142

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Text",
                    "value": "m1"
                },
                "M2": {
                    "type": "Text",
                    "value": "m2"
                }
            },
            "type": "Number",
            "value": 1
        },
        "id": "E1",
        "type": "Thing"
    }
]


04. GET /v2/entities/E1?metadata=M1,M2
======================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 140

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "Text",
                "value": "m1"
            },
            "M2": {
                "type": "Text",
                "value": "m2"
            }
        },
        "type": "Number",
        "value": 1
    },
    "id": "E1",
    "type": "Thing"
}


05. GET /v2/entities/E1/attrs/A1?metadata=M1,M2
===============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 108

{
    "metadata": {
        "M1": {
            "type": "Text",
            "value": "m1"
        },
        "M2": {
            "type": "Text",
            "value": "m2"
        }
    },
    "type": "Number",
    "value": 1
}


06. POST /v2/op/query with attributes=A1 and metadata=M1,M2 in payload
======================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 142

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Text",
                    "value": "m1"
                },
                "M2": {
                    "type": "Text",
                    "value": "m2"
                }
            },
            "type": "Number",
            "value": 1
        },
        "id": "E1",
        "type": "Thing"
    }
]


07. GET /v2/entities/E1/attrs?metadata=* - see M1, M2 and M3
============================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 149

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "Text",
                "value": "m1"
            },
            "M2": {
                "type": "Text",
                "value": "m2"
            },
            "M3": {
                "type": "Text",
                "value": "m3"
            }
        },
        "type": "Number",
        "value": 1
    }
}


08. POST /v2/op/query with attributes=A1 and metadata=* in payload - see M1, M2 and M3
======================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 176

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "Text",
                    "value": "m1"
                },
                "M2": {
                    "type": "Text",
                    "value": "m2"
                },
                "M3": {
                    "type": "Text",
                    "value": "m3"
                }
            },
            "type": "Number",
            "value": 1
        },
        "id": "E1",
        "type": "Thing"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
