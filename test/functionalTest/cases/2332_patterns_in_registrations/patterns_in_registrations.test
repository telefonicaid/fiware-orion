# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
id patterns in registrations

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Try to register using isPattern=true, see error
# 02. Try to register using isPattern=true AND isPattern=false, see error
#

echo "01. Try to register using isPattern=true, see error"
echo "==================================================="
payload='{
  "contextRegistrations": [
    {
      "entities": [
        {
          "id": "E.*",
          "isPattern": "true",
          "type": "T1"
        }
      ],
      "attributes": [
        {
          "name": "A1",
          "type": "string"
        }
      ],
      "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
  ],
  "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "02. Try to register using isPattern=true AND isPattern=false, see error"
echo "======================================================================="
payload='{
  "contextRegistrations": [
    {
      "entities": [
        {
          "id": "E.*",
          "isPattern": "true",
          "type": "T1"
        }
      ],
      "attributes": [
        {
          "name": "A1",
          "type": "string"
        }
      ],
      "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    },
    {
      "entities": [
        {
          "id": "E2",
          "isPattern": "false",
          "type": "T1"
        }
      ],
      "attributes": [
        {
          "name": "A2",
          "type": "string"
        }
      ],
      "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }

  ],
  "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


--REGEXPECT--
01. Try to register using isPattern=true, see error
===================================================
HTTP/1.1 200 OK
Content-Length: 180
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "isPattern set to true for registrations is currently not supported",
        "reasonPhrase": "Bad Request"
    },
    "registrationId": "000000000000000000000000"
}


02. Try to register using isPattern=true AND isPattern=false, see error
=======================================================================
HTTP/1.1 200 OK
Content-Length: 180
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "isPattern set to true for registrations is currently not supported",
        "reasonPhrase": "Bad Request"
    },
    "registrationId": "000000000000000000000000"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
