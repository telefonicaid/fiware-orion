# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

#
# Uncached/Cached update/DELETE
#
# 01. Register an entity/attribute E1/A1 in broker, with CP as providing application
# 02. Update/APPEND E1/A1(=CP) in CP
# 03. Query broker for E1/A1 (will go to CP and E1/A1(=CP) is found)
# 04. Update/DELETE E1/A1 in broker (will fail as E1/A1 isn't local)
# 05. Query broker for E1/A1 (will go to CP and E1/A1(=CP) is found)
#

--NAME--
Update Redirect/DELETE
--SHELL-INIT--

dbInit CB
dbInit CP1

brokerStart CB
brokerStart CP1

--SHELL--
echo "01. Register an entity/attribute E1/A1 in broker, with CP as providing application"
echo "=================================================================================="
url="/v1/registry/registerContext"
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "E",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "T1"
      }
    ],
    "providingApplication": "http://localhost:'$CP1_PORT'/v1"
    }
 ]
}'
orionCurl --url "$url" --payload "$payload"
echo
echo


echo "02. Update/APPEND E1/A1(=CP) in CP"
echo "=================================="
url="/v1/updateContext"
payload='{
  "contextElements": [
    {
      "type": "E",
      "isPattern": "false",
      "id": "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "T1",
          "value": "CP"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "$payload" --port $CP1_PORT
echo
echo


echo "03. Query broker for E1/A1 (will go to CP and E1/A1(=CP) is found)"
echo "=================================================================="
url="/v1/queryContext"
payload='{
  "entities": [
    {
      "type": "E",
      "isPattern": "false",
      "id": "E1"
    }
  ],
  "attributes": [
    "A1"
  ]
}'
orionCurl --url "$url" --payload "$payload"
echo
echo


echo "04. Update/DELETE E1/A1 in broker (will fail as E1/A1 isn't local)"
echo "=================================================================="
url="/v1/updateContext"
payload='{
  "contextElements": [
    {
      "type": "E",
      "isPattern": "false",
      "id": "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "T1",
          "value": "broker"
        }
      ]
    }
  ],
  "updateAction": "DELETE"
}'
orionCurl --url "$url" --payload "$payload"
echo
echo


echo "05. Query broker for E1/A1 (will go to CP and E1/A1(=CP) is found)"
echo "=================================================================="
url="/v1/queryContext"
payload='{
  "entities": [
    {
      "type": "E",
      "isPattern": "false",
      "id": "E1"
    }
  ],
  "attributes": [
    "A1"
  ]
}'
orionCurl --url "$url" --payload "$payload"
echo
echo


--REGEXPECT--
01. Register an entity/attribute E1/A1 in broker, with CP as providing application
==================================================================================
HTTP/1.1 200 OK
Content-Length: 64
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT24H",
    "registrationId": "REGEX([0-9a-f]{24})"
}


02. Update/APPEND E1/A1(=CP) in CP
==================================
HTTP/1.1 200 OK
Content-Length: 184
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "T1",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "E"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Query broker for E1/A1 (will go to CP and E1/A1(=CP) is found)
==================================================================
HTTP/1.1 200 OK
Content-Length: 186
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "T1",
                        "value": "CP"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "E"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. Update/DELETE E1/A1 in broker (will fail as E1/A1 isn't local)
==================================================================
HTTP/1.1 200 OK
Content-Length: 221
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "T1",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "E"
            },
            "statusCode": {
                "code": "404",
                "details": "E1",
                "reasonPhrase": "No context element found"
            }
        }
    ]
}


05. Query broker for E1/A1 (will go to CP and E1/A1(=CP) is found)
==================================================================
HTTP/1.1 200 OK
Content-Length: 186
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "T1",
                        "value": "CP"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "E"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
