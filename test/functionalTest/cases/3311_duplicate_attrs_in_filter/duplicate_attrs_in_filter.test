# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET entities with duplicated items in attrs filter

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity E with atributes A and B
# 02. GET /v2/entities?attrs=A,A,A should return A only one time
# 03. GET /v2/entities/E?attrs=A,A,A should return A only one time
# 04. GET /v2/entities/E/attrs?attrs=A,A,A should return A only one time
# 05. GET /v2/op/query with attrs: A,A,A should return A only one time
#


echo "01. Create entity E with atributes A and B"
echo "=========================================="
payload='{
  "id": "E",
  "type": "T",
  "A":{
    "type": "Number",
    "value": 1
  },
  "B":{
    "type": "Number",
    "value" : 2
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. GET /v2/entities?attrs=A,A,A should return A only one time"
echo "=============================================================="
orionCurl --url /v2/entities?attrs=A,A,A --noPayloadCheck
echo
echo


echo "03. GET /v2/entities/E?attrs=A,A,A should return A only one time"
echo "================================================================"
orionCurl --url /v2/entities/E?attrs=A,A,A --noPayloadCheck
echo
echo


echo "04. GET /v2/entities/E/attrs?attrs=A,A,A should return A only one time"
echo "======================================================================"
orionCurl --url /v2/entities/E/attrs?attrs=A,A,A --noPayloadCheck
echo
echo


echo "05. GET /v2/op/query with attrs: A,A,A should return A only one time"
echo "===================================================================="
payload='{
  "entities": [
    {
      "id":   "E",
      "type": "T"
    }
  ],
  "attrs": [ "A","A", "A" ]
}'
orionCurl --url /v2/op/query --payload "$payload" --noPayloadCheck
echo
echo


--REGEXPECT--
01. Create entity E with atributes A and B
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. GET /v2/entities?attrs=A,A,A should return A only one time
==============================================================
HTTP/1.1 200 OK
Content-Length: 69
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[{"id":"E","type":"T","A":{"type":"Number","value":1,"metadata":{}}}]


03. GET /v2/entities/E?attrs=A,A,A should return A only one time
================================================================
HTTP/1.1 200 OK
Content-Length: 67
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{"id":"E","type":"T","A":{"type":"Number","value":1,"metadata":{}}}


04. GET /v2/entities/E/attrs?attrs=A,A,A should return A only one time
======================================================================
HTTP/1.1 200 OK
Content-Length: 47
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{"A":{"type":"Number","value":1,"metadata":{}}}


05. GET /v2/op/query with attrs: A,A,A should return A only one time
====================================================================
HTTP/1.1 200 OK
Content-Length: 69
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[{"id":"E","type":"T","A":{"type":"Number","value":1,"metadata":{}}}]


--TEARDOWN--
brokerStop CB
dbDrop CB
