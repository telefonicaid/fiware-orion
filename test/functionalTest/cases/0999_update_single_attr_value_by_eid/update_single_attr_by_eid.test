# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
PUT Individual Entity Attribute

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. PUT /v2/entities/E1/attrs/A1/value and see it fail
# 02. POST /v2/entities to create E1/A1=2
# 03. GET /v2/entities/E1 to see A1==2
# 04. PUT /v2/entities/E1/attrs/A1/value (=4) and see it work
# 05. GET /v2/entities/E1 to see A1==4
# 06. PUT /v2/entities/E1/attrs/A1/value (=true)
# 07. GET /v2/entities/E1 to see A1==true
# 08. PUT /v2/entities/E1/attrs/A1/value (=false)
# 09. GET /v2/entities/E1 to see A1==false
# 10. PUT /v2/entities/E1/attrs/A1/value (="STRING")
# 11. GET /v2/entities/E1 to see A1=="STRING"
# 12. PUT /v2/entities/E1/attrs/A1/value (=[ 1, 2, 3 ])
# 13. GET /v2/entities/E1 to see A1==[ 1, 2, 3 ]
# 14. PUT /v2/entities/E1/attrs/A1/value (={ "a": 1, "b": 2, "c": 3 })
# 15. GET /v2/entities/E1 to see A1=={ "a": 1, "b": 2, "c": 3 }
#

echo "01. PUT /v2/entities/E1/attrs/A1/value and see it fail"
echo "======================================================"
payload='{ "a": 1 }'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" -X PUT
echo
echo


echo "02. POST /v2/entities to create E1/A1=2"
echo "======================================="
payload='{ "id": "E1", "type": "T1", "A1": 2 }'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "03. GET /v2/entities/E1 to see A1==2"
echo "===================================="
orionCurl --url /v2/entities/E1
echo
echo


echo "04. PUT /v2/entities/E1/attrs/A1/value (=4) and see it work"
echo "==========================================================="
payload='4'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --in text/plain --out json -X PUT
echo
echo


echo "05. GET /v2/entities/E1 to see A1==4"
echo "===================================="
orionCurl --url /v2/entities/E1
echo
echo


echo "06. PUT /v2/entities/E1/attrs/A1/value (=true)"
echo "=============================================="
payload='true'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --in text/plain --out json -X PUT
echo
echo


echo "07. GET /v2/entities/E1 to see A1==true"
echo "======================================="
orionCurl --url /v2/entities/E1
echo
echo


echo "08. PUT /v2/entities/E1/attrs/A1/value (=false)"
echo "==============================================="
payload='false'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --in text/plain --out json -X PUT
echo
echo


echo "09. GET /v2/entities/E1 to see A1==false"
echo "========================================"
orionCurl --url /v2/entities/E1
echo
echo

echo '10. PUT /v2/entities/E1/attrs/A1/value (="STRING")'
echo "=================================================="
payload='"STRING"'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --in text/plain --out json -X PUT
echo
echo


echo '11. GET /v2/entities/E1 to see A1=="STRING"'
echo "==========================================="
orionCurl --url /v2/entities/E1
echo
echo


echo "12. PUT /v2/entities/E1/attrs/A1/value (=[ 1, 2, 3 ])"
echo "====================================================="
payload='[ 1, 2, 3 ]'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" -X PUT
echo
echo


echo "13. GET /v2/entities/E1 to see A1==[ 1, 2, 3 ]"
echo "=============================================="
orionCurl --url /v2/entities/E1
echo
echo


echo '14. PUT /v2/entities/E1/attrs/A1/value (={ "a": 1, "b": 2, "c": 3 })'
echo "===================================================================="
payload='{ "a": 1, "b": 2, "c": 3 }'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" -X PUT
echo
echo


echo '15. GET /v2/entities/E1 to see A1=={ "a": 1, "b": 2, "c": 3 }'
echo "============================================================="
orionCurl --url /v2/entities/E1
echo
echo


--REGEXPECT--
01. PUT /v2/entities/E1/attrs/A1/value and see it fail
======================================================
HTTP/1.1 404 Not Found
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


02. POST /v2/entities to create E1/A1=2
=======================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. GET /v2/entities/E1 to see A1==2
====================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": 2
    },
    "id": "E1",
    "type": "T1"
}


04. PUT /v2/entities/E1/attrs/A1/value (=4) and see it work
===========================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. GET /v2/entities/E1 to see A1==4
====================================
HTTP/1.1 200 OK
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": 4
    },
    "id": "E1",
    "type": "T1"
}


06. PUT /v2/entities/E1/attrs/A1/value (=true)
==============================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. GET /v2/entities/E1 to see A1==true
=======================================
HTTP/1.1 200 OK
Content-Length: 73
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": true
    },
    "id": "E1",
    "type": "T1"
}


08. PUT /v2/entities/E1/attrs/A1/value (=false)
===============================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. GET /v2/entities/E1 to see A1==false
========================================
HTTP/1.1 200 OK
Content-Length: 74
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": false
    },
    "id": "E1",
    "type": "T1"
}


10. PUT /v2/entities/E1/attrs/A1/value (="STRING")
==================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



11. GET /v2/entities/E1 to see A1=="STRING"
===========================================
HTTP/1.1 200 OK
Content-Length: 77
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": "STRING"
    },
    "id": "E1",
    "type": "T1"
}


12. PUT /v2/entities/E1/attrs/A1/value (=[ 1, 2, 3 ])
=====================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



13. GET /v2/entities/E1 to see A1==[ 1, 2, 3 ]
==============================================
HTTP/1.1 200 OK
Content-Length: 76
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": [
            1,
            2,
            3
        ]
    },
    "id": "E1",
    "type": "T1"
}


14. PUT /v2/entities/E1/attrs/A1/value (={ "a": 1, "b": 2, "c": 3 })
====================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



15. GET /v2/entities/E1 to see A1=={ "a": 1, "b": 2, "c": 3 }
=============================================================
HTTP/1.1 200 OK
Content-Length: 88
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Number",
        "value": {
            "a": 1,
            "b": 2,
            "c": 3
        }
    },
    "id": "E1",
    "type": "T1"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
