# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Custom metadata query/update

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "=== 1. Create an entity with an attribute with metadata"
url="/v1/updateContext"
payload='{
    "contextElements": [
    {
        "type": "Room",
        "isPattern": "false",
        "id": "Room1",
        "attributes": [
        {
            "name": "temperature",
            "type": "centigrade",
            "value": "23",
            "metadatas": [
                {
                    "name": "colour",
                    "type": "string",
                    "value": "black"
                },
                {
                    "name": "flavour",
                    "type": "string",
                    "value": "sweet"
                }
            ]
        },
        {
            "name": "presence",
            "type": "bool",
            "value": "true",
            "metadatas": [
                {
                    "name": "taste",
                    "type": "string",
                    "value": "bitter"
                }
            ]
        },
        {
            "name": "pressure",
            "type": "mmHg",
            "value": "720"
        }
        ]
    }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "${payload}"

echo "=== 2. Query the entity"
orionCurl --url "/v1/contextEntities/Room1"

echo "=== 3. Update the entity changing metadata value an adding a new one"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "Room1",
            "attributes": [
            {
                "name": "temperature",
                "type": "centigrade",
                "value": "43",
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "red"
                    },
                    {
                        "name": "feeling",
                        "type": "string",
                        "value": "angry"
                    }
                ]
            }
            ]
        }
    ],
    "updateAction": "UPDATE"
}'
orionCurl --url "$url" --payload "${payload}"

echo "=== 4. Query the entity"
orionCurl --url "/v1/contextEntities/Room1"

echo "=== 5. Append a new attribute with metadata"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "Room1",
            "attributes": [
            {
                "name": "humidity",
                "type": "percentage",
                "value": "60.5",
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "white"
                    },
                    {
                        "name": "direction",
                        "type": "string",
                        "value": "up"
                    }
                ]
            }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "${payload}"

echo "=== 6. Query the entity"
orionCurl --url "/v1/contextEntities/Room1"

echo "=== 7. Remove an attribute with metadata"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "Room1",
            "attributes": [
            {
                "name": "temperature",
                "type": "centigrade",
                "value": ""
            }
            ]
        }
    ],
    "updateAction": "DELETE"
}'
orionCurl --url "$url" --payload "${payload}"

echo "=== 8. Query the entity"
orionCurl --url "/v1/contextEntities/Room1"

--REGEXPECT--
=== 1. Create an entity with an attribute with metadata
HTTP/1.1 200 OK
Content-Length: 476
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "colour",
                                "type": "string",
                                "value": "black"
                            },
                            {
                                "name": "flavour",
                                "type": "string",
                                "value": "sweet"
                            }
                        ],
                        "name": "temperature",
                        "type": "centigrade",
                        "value": ""
                    },
                    {
                        "metadatas": [
                            {
                                "name": "taste",
                                "type": "string",
                                "value": "bitter"
                            }
                        ],
                        "name": "presence",
                        "type": "bool",
                        "value": ""
                    },
                    {
                        "name": "pressure",
                        "type": "mmHg",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=== 2. Query the entity
HTTP/1.1 200 OK
Content-Length: 462
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "metadatas": [
                    {
                        "name": "taste",
                        "type": "string",
                        "value": "bitter"
                    }
                ],
                "name": "presence",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "pressure",
                "type": "mmHg",
                "value": "720"
            },
            {
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "black"
                    },
                    {
                        "name": "flavour",
                        "type": "string",
                        "value": "sweet"
                    }
                ],
                "name": "temperature",
                "type": "centigrade",
                "value": "23"
            }
        ],
        "id": "Room1",
        "isPattern": "false",
        "type": "Room"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
=== 3. Update the entity changing metadata value an adding a new one
HTTP/1.1 200 OK
Content-Length: 320
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "colour",
                                "type": "string",
                                "value": "red"
                            },
                            {
                                "name": "feeling",
                                "type": "string",
                                "value": "angry"
                            }
                        ],
                        "name": "temperature",
                        "type": "centigrade",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=== 4. Query the entity
HTTP/1.1 200 OK
Content-Length: 511
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "metadatas": [
                    {
                        "name": "taste",
                        "type": "string",
                        "value": "bitter"
                    }
                ],
                "name": "presence",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "pressure",
                "type": "mmHg",
                "value": "720"
            },
            {
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "red"
                    },
                    {
                        "name": "feeling",
                        "type": "string",
                        "value": "angry"
                    },
                    {
                        "name": "flavour",
                        "type": "string",
                        "value": "sweet"
                    }
                ],
                "name": "temperature",
                "type": "centigrade",
                "value": "43"
            }
        ],
        "id": "Room1",
        "isPattern": "false",
        "type": "Room"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
=== 5. Append a new attribute with metadata
HTTP/1.1 200 OK
Content-Length: 318
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "colour",
                                "type": "string",
                                "value": "white"
                            },
                            {
                                "name": "direction",
                                "type": "string",
                                "value": "up"
                            }
                        ],
                        "name": "humidity",
                        "type": "percentage",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=== 6. Query the entity
HTTP/1.1 200 OK
Content-Length: 680
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "white"
                    },
                    {
                        "name": "direction",
                        "type": "string",
                        "value": "up"
                    }
                ],
                "name": "humidity",
                "type": "percentage",
                "value": "60.5"
            },
            {
                "metadatas": [
                    {
                        "name": "taste",
                        "type": "string",
                        "value": "bitter"
                    }
                ],
                "name": "presence",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "pressure",
                "type": "mmHg",
                "value": "720"
            },
            {
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "red"
                    },
                    {
                        "name": "feeling",
                        "type": "string",
                        "value": "angry"
                    },
                    {
                        "name": "flavour",
                        "type": "string",
                        "value": "sweet"
                    }
                ],
                "name": "temperature",
                "type": "centigrade",
                "value": "43"
            }
        ],
        "id": "Room1",
        "isPattern": "false",
        "type": "Room"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
=== 7. Remove an attribute with metadata
HTTP/1.1 200 OK
Content-Length: 207
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "temperature",
                        "type": "centigrade",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
=== 8. Query the entity
HTTP/1.1 200 OK
Content-Length: 460
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "metadatas": [
                    {
                        "name": "colour",
                        "type": "string",
                        "value": "white"
                    },
                    {
                        "name": "direction",
                        "type": "string",
                        "value": "up"
                    }
                ],
                "name": "humidity",
                "type": "percentage",
                "value": "60.5"
            },
            {
                "metadatas": [
                    {
                        "name": "taste",
                        "type": "string",
                        "value": "bitter"
                    }
                ],
                "name": "presence",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "pressure",
                "type": "mmHg",
                "value": "720"
            }
        ],
        "id": "Room1",
        "isPattern": "false",
        "type": "Room"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
--TEARDOWN--
brokerStop CB
dbDrop CB
