# Copyright 2023 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Right JSON change evaluation in subs (objects and arrays in attribute value case)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription covering E-A
# 02. Create E-A entity with JSON object (notification)
# 03. Update E-A entity with same JSON object (no notification)
# 04. Update E-A entity with different JSON object (notification)
# 05. Update E-A entity with JSON array (notification)
# 06. Update E-A entity with same JSON array (no notification)
# 07. Update E-A entity with different JSON array (notification)
# 08. Update E-A entity with same string (notification)
# 09. Dump accumulator, see 5 notifications
#

echo "01. Create subscription covering E-A"
echo "===================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E",
        "type": "T"
      }
    ]
  },
  "notification": {    
    "http": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create E-A entity with JSON object (notification)"
echo "====================================================="
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": {
      "text": "foo",
      "number": 10,
      "bool": true,
      "null": null,
      "array": [
        "22",
        {
          "x" : [ "x1", "x2" ],
          "y" : 3
        },
        [ "z1", "z2" ]
      ],
      "object": {
        "x": {
          "x1": "a",
          "x2": "b"
        },
        "y": [ "y1", "y2" ]
      }
    },
    "type": "Json"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Update E-A entity with same JSON object (no notification)"
echo "============================================================="
payload='{
  "A": {
    "value": {
      "text": "foo",
      "number": 10,
      "bool": true,
      "null": null,
      "array": [
        "22",
        {
          "x" : [ "x1", "x2" ],
          "y" : 3
        },
        [ "z1", "z2" ]
      ],
      "object": {
        "x": {
          "x1": "a",
          "x2": "b"
        },
        "y": [ "y1", "y2" ]
      }
    },
    "type": "Json"
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "$payload"
echo
echo


echo "04. Update E-A entity with different JSON object (notification)"
echo "==============================================================="
payload='{
  "A": {
    "value": {
      "text": "foo",
      "number": 10,
      "bool": true,
      "null": null,
      "array": [
        "22",
        {
          "x" : [ "x1", "x2" ],
          "y" : 3
        },
        [ "z1", "z2" ]
      ],
      "object": {
        "x": {
          "x1": "a",
          "x2": "b"
        },
        "y": [ "y1", "y_new" ]
      }
    },
    "type": "Json"
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "$payload"
echo
echo


echo "05. Update E-A entity with JSON array (notification)"
echo "===================================================="
payload='{
  "A": {
    "value": [
      "",
      {
        "x": [ "x1", "x2" ],
        "y": "3"
      },
      [ "z1", "z2" ]
    ],
    "type": "Array"
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "$payload"
echo
echo


echo "06. Update E-A entity with same JSON array (no notification)"
echo "============================================================"
payload='{
  "A": {
    "value": [
      "",
      {
        "x": [ "x1", "x2" ],
        "y": "3"
      },
      [ "z1", "z2" ]
    ],
    "type": "Array"
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "$payload"
echo
echo


echo "07. Update E-A entity with different JSON array (notification)"
echo "=============================================================="
payload='{
  "A": {
    "value": [
      "",
      {
        "x": [ "x1", "x_new" ],
        "y": "3"
      },
      [ "z1", "z2" ]
    ],
    "type": "Array"
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "$payload"
echo
echo


echo "08. Update E-A entity with same string (notification)"
echo "====================================================="
payload='{
  "A": {
    "value": "foo",
    "type": "Text"
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "$payload"
echo
echo


echo "09. Dump accumulator, see 5 notifications"
echo "========================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription covering E-A
====================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create E-A entity with JSON object (notification)
=====================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E?type=T
Content-Length: 0



03. Update E-A entity with same JSON object (no notification)
=============================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. Update E-A entity with different JSON object (notification)
===============================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Update E-A entity with JSON array (notification)
====================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. Update E-A entity with same JSON array (no notification)
============================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



07. Update E-A entity with different JSON array (notification)
==============================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



08. Update E-A entity with same string (notification)
=====================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



09. Dump accumulator, see 5 notifications
=========================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 271
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Json",
                "value": {
                    "array": [
                        "22",
                        {
                            "x": [
                                "x1",
                                "x2"
                            ],
                            "y": 3
                        },
                        [
                            "z1",
                            "z2"
                        ]
                    ],
                    "bool": true,
                    "null": null,
                    "number": 10,
                    "object": {
                        "x": {
                            "x1": "a",
                            "x2": "b"
                        },
                        "y": [
                            "y1",
                            "y2"
                        ]
                    },
                    "text": "foo"
                }
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 274
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Json",
                "value": {
                    "array": [
                        "22",
                        {
                            "x": [
                                "x1",
                                "x2"
                            ],
                            "y": 3
                        },
                        [
                            "z1",
                            "z2"
                        ]
                    ],
                    "bool": true,
                    "null": null,
                    "number": 10,
                    "object": {
                        "x": {
                            "x1": "a",
                            "x2": "b"
                        },
                        "y": [
                            "y1",
                            "y_new"
                        ]
                    },
                    "text": "foo"
                }
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 162
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Array",
                "value": [
                    "",
                    {
                        "x": [
                            "x1",
                            "x2"
                        ],
                        "y": "3"
                    },
                    [
                        "z1",
                        "z2"
                    ]
                ]
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 165
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Array",
                "value": [
                    "",
                    {
                        "x": [
                            "x1",
                            "x_new"
                        ],
                        "y": "3"
                    },
                    [
                        "z1",
                        "z2"
                    ]
                ]
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 124
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Text",
                "value": "foo"
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
