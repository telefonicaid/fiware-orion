# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Cross-subscription filtering isolation for metadata

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# This test case covers a problem introduced by PR #3285 during the 1.15.0-next
# devel cycle which causes cross-subscription filtering pollution. In particular,
# for subscription triggered by the same update, the filter in each subscription
# was not processed in a isolate way and could affect to other subscriptions.
#
# 01. Create sub with metadata filter: MD1
# 02. Create sub with metadata filter: MD2
# 03. Create sub with metadata filter: MD3
# 04. Create sub with metadata filter: MD4

# 05. Create entity with attribute with metadata MD1, MD2, MD3, MD4
# 06. Dump accumulator: see 4 notifications, each one with a single metadata
#


echo "01. Create sub with attrs filter: MD1"
echo "====================================="
payload='{
    "subject": {
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "metadata": [ "MD1" ]
    }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create sub with attrs filter: MD2"
echo "====================================="
payload='{
    "subject": {
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "metadata": [ "MD2" ]
    }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "03. Create sub with attrs filter: MD3"
echo "====================================="
payload='{
    "subject": {
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "metadata": [ "MD3" ]
    }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "04. Create sub with attrs filter: MD4"
echo "====================================="
payload='{
    "subject": {
        "entities": [
            {
                "id": "E",
                "type": "T"
            }
        ]
    },
    "notification": {
        "http": {"url": "http://localhost:'$LISTENER_PORT'/notify"},
        "metadata": [ "MD4" ]
    }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "05. Create entity with attribute with metadata MD1, MD2, MD3, MD4"
echo "================================================================="
payload='{
  "id": "E",
  "type": "T",
  "A": {
    "value": 1,
    "type": "Text",
    "metadata": {
      "MD1": {
        "value": 1,
        "type": "Number"
      },
      "MD2": {
        "value": 2,
        "type": "Number"
      },
      "MD3": {
        "value": 3,
        "type": "Number"
      },
      "MD4": {
        "value": 4,
        "type": "Number"
      }
    }
  }
}'
orionCurl --url '/v2/entities' --payload "$payload"
echo
echo


echo "06. Dump accumulator: see 4 notifications, each one with a single metadata"
echo "=========================================================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create sub with attrs filter: MD1
=====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create sub with attrs filter: MD2
=====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create sub with attrs filter: MD3
=====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Create sub with attrs filter: MD4
=====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create entity with attribute with metadata MD1, MD2, MD3, MD4
=================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Dump accumulator: see 4 notifications, each one with a single metadata
==========================================================================
#SORT_START
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 153
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A": {
                "metadata": {
                    "MD1": {
                        "type": "Number",
                        "value": 1
                    }
                },
                "type": "Text",
                "value": 1
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 153
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A": {
                "metadata": {
                    "MD2": {
                        "type": "Number",
                        "value": 2
                    }
                },
                "type": "Text",
                "value": 1
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 153
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A": {
                "metadata": {
                    "MD3": {
                        "type": "Number",
                        "value": 3
                    }
                },
                "type": "Text",
                "value": 1
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 153
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "A": {
                "metadata": {
                    "MD4": {
                        "type": "Number",
                        "value": 4
                    }
                },
                "type": "Text",
                "value": 1
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
#SORT_END


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
