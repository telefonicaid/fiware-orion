# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
V2 query with ranges and invalid operator

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create an entity E1 with attribute A1=10
# 02. Create an entity E2 with attribute A1=20
# 03. Create an entity E3 with attribute A1=30
# 04. GET all entities (3 entities)
# 05. Erroneous GET entities with q=A1>=0..20
# 06. Erroneous GET entities with q=A1>0..20
# 07. Erroneous GET entities with q=A1<=0..20
# 08. Erroneous GET entities with q=A1<0..20
# 09. Correct GET entities with q=A1==0..20 (2 hits)
# 10. Correct GET entities with q=A1!=0..20 (1 hit)
#


echo "01. Create an entity E1 with attribute A1=10"
echo "============================================"
payload='{
    "id": "E1",
    "A1": { "value": 10 }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create an entity E2 with attribute A1=20"
echo "============================================"
payload='{
    "id": "E2",
    "A1": { "value": 20 }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Create an entity E3 with attribute A1=30"
echo "============================================"
payload='{
    "id": "E3",
    "A1": { "value": 30 }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. GET all entities (3 entities)"
echo "================================="
orionCurl --url /v2/entities
echo
echo


echo "05. Erroneous GET entities with q=A1>=0..20"
echo "==========================================="
orionCurl --url '/v2/entities?q=A1>=0..20'
echo
echo


echo "06. Erroneous GET entities with q=A1>0..20"
echo "=========================================="
orionCurl --url '/v2/entities?q=A1>0..20'
echo
echo

echo "07. Erroneous GET entities with q=A1<=0..20"
echo "==========================================="
orionCurl --url '/v2/entities?q=A1<=0..20'
echo
echo

echo "08. Erroneous GET entities with q=A1<0..20"
echo "=========================================="
orionCurl --url '/v2/entities?q=A1<=0..20'
echo
echo


echo "09. Correct GET entities with q=A1==0..20 (2 hits)"
echo "=================================================="
orionCurl --url '/v2/entities?q=A1==0..20'
echo
echo


echo "10. Correct GET entities with q=A1!=0..20 (1 hit)"
echo "================================================="
orionCurl --url '/v2/entities?q=A1!=0..20'
echo
echo


--REGEXPECT--
01. Create an entity E1 with attribute A1=10
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create an entity E2 with attribute A1=20
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create an entity E3 with attribute A1=30
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. GET all entities (3 entities)
=================================
HTTP/1.1 200 OK
Content-Length: 226
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "Number",
            "value": 10
        },
        "id": "E1",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {},
            "type": "Number",
            "value": 20
        },
        "id": "E2",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {},
            "type": "Number",
            "value": 30
        },
        "id": "E3",
        "type": "Thing"
    }
]


05. Erroneous GET entities with q=A1>=0..20
===========================================
HTTP/1.1 400 Bad Request
Content-Length: 84
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "ranges only valid for equal and not equal ops",
    "error": "BadRequest"
}


06. Erroneous GET entities with q=A1>0..20
==========================================
HTTP/1.1 400 Bad Request
Content-Length: 84
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "ranges only valid for equal and not equal ops",
    "error": "BadRequest"
}


07. Erroneous GET entities with q=A1<=0..20
===========================================
HTTP/1.1 400 Bad Request
Content-Length: 84
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "ranges only valid for equal and not equal ops",
    "error": "BadRequest"
}


08. Erroneous GET entities with q=A1<0..20
==========================================
HTTP/1.1 400 Bad Request
Content-Length: 84
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "ranges only valid for equal and not equal ops",
    "error": "BadRequest"
}


09. Correct GET entities with q=A1==0..20 (2 hits)
==================================================
HTTP/1.1 200 OK
Content-Length: 151
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "Number",
            "value": 10
        },
        "id": "E1",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {},
            "type": "Number",
            "value": 20
        },
        "id": "E2",
        "type": "Thing"
    }
]


10. Correct GET entities with q=A1!=0..20 (1 hit)
=================================================
HTTP/1.1 200 OK
Content-Length: 76
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "Number",
            "value": 30
        },
        "id": "E3",
        "type": "Thing"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
