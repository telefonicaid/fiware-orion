# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
V2 batch query with slash in pattern

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create 4 entities
# 02. Query for numerics, get only one
#

echo "01. Create 4 entities"
echo "====================="
payload1='{
  "id": "room1",
  "type": "house",
  "temperature": 24
}'
payload2='{
  "id": "car",
  "type": "vehicle",
  "temperature": 34
}'
payload3='{
  "id": "nothing",
  "type": "tetetete",
  "temperature": 44
}'
payload4='{
  "id": "numeric",
  "type": "12345678",
  "temperature": 54
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload1"
orionCurl --url /v2/entities?options=keyValues --payload "$payload2"
orionCurl --url /v2/entities?options=keyValues --payload "$payload3"
orionCurl --url /v2/entities?options=keyValues --payload "$payload4"
echo
echo


echo "02. Query for numerics, get only one"
echo "===================================="
payload='{
  "entities": [
    {
      "idPattern": ".*",
      "typePattern": "\\d+"
    }
  ],
  "attributes": [ "temperature" ]
}'
orionCurl --url /v2/op/query?options=keyValues --payload "$payload"
echo
echo


--REGEXPECT--
01. Create 4 entities
=====================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/room1?type=house
Content-Length: 0

HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/car?type=vehicle
Content-Length: 0

HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/nothing?type=tetetete
Content-Length: 0

HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/numeric?type=12345678
Content-Length: 0



02. Query for numerics, get only one
====================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 53

[
    {
        "id": "numeric",
        "temperature": 54,
        "type": "12345678"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
