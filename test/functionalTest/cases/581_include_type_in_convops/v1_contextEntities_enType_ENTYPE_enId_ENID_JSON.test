# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
/v1/contextEntities ALL Entities with TYPE and ID

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. PUT /v1/contextEntities/type/T1/id/E1 and see it fail
# 02. GET /v1/contextEntities/type/T1/id/E1 and see it fail
# 03. POST /v1/contextEntities/type/T1/id/E1 OK
# 04. PUT /v1/contextEntities/type/T1/id/E1 OK
# 05. GET /v1/contextEntities/type/T1/id/E1 OK
# 06. POST /v1/contextEntities/type/T2/id/E1 OK
# 07. GET /v1/contextEntities and see E1 and E2
# 08. GET /v1/contextEntities/type/T1/id/E1 and see E1 only
# 09. GET /v1/contextEntities/type/T1/id/E1 and see E2 only
# 10. DELETE /v1/contextEntities/type/T1/id/E1 OK
# 11. DELETE /v1/contextEntities/type/T1/id/E1 and see it fail
# 12. GET /v1/contextEntities/type/T1/id/E1 and see it fail
# 13. GET /v1/contextEntities/type/T2/id/E1 OK
# 14. NOP /v1/contextEntities/type/T2/id/E1 and see it fail



echo "01. PUT /v1/contextEntities/type/T1/id/E1 and see it fail"
echo "========================================================="
payload='{
  "attributeDomainName" : "",
  "attributes" : [
    {
      "name": "A1",
      "type": "degree",
      "value": 1
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1 --payload "${payload}" -X "PUT" --json
echo
echo


echo "02. GET /v1/contextEntities/type/T1/id/E1 and see it fail"
echo "========================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1 --json
echo
echo


echo "03. POST /v1/contextEntities/type/T1/id/E1 OK"
echo "============================================="
payload='{
  "attributeDomainName" : "",
  "attributes" : [
    {
      "name": "A1",
      "type": "degree",
      "value": 1
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1 --payload "${payload}" -X "POST" --json
echo
echo


echo "04. PUT /v1/contextEntities/type/T1/id/E1 OK"
echo "============================================"
payload='{
  "attributeDomainName" : "",
  "attributes" : [
    {
      "name": "A1",
      "type": "degree",
      "value": 2
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1 --payload "${payload}" -X "PUT" --json
echo
echo


echo "05. GET /v1/contextEntities/type/T1/id/E1 OK"
echo "============================================"
orionCurl --url /v1/contextEntities/type/T1/id/E1 --json
echo
echo


echo "06. POST /v1/contextEntities/type/T2/id/E1 OK"
echo "============================================="
payload='{
  "attributeDomainName" : "",
  "attributes": [
    {
      "name": "A2",
      "type": "degree",
      "value": 1
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T2/id/E1 --payload "${payload}" --json
echo
echo


echo "07. GET /v1/contextEntities and see E1 and E2"
echo "============================================="
orionCurl --url /v1/contextEntities --json
echo
echo



echo "08. GET /v1/contextEntities/type/T1/id/E1 OK"
echo "============================================"
orionCurl --url /v1/contextEntities/type/T1/id/E1 --json
echo
echo

echo "09. GET /v1/contextEntities/type/T2/id/E1 OK"
echo "============================================"
orionCurl --url /v1/contextEntities/type/T2/id/E1 --json
echo
echo


echo "10. DELETE /v1/contextEntities/type/T1/id/E1 OK"
echo "==============================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1 -X DELETE --json
echo
echo


echo "11. DELETE /v1/contextEntities/type/T1/id/E1 and see it fail"
echo "============================================================"
orionCurl --url /v1/contextEntities/type/T1/id/E1 -X DELETE --json
echo
echo


echo "12. GET /v1/contextEntities/type/T1/id/E1 and see it fail"
echo "========================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1 --json
echo
echo


echo "13. GET /v1/contextEntities/type/T2/id/E1 OK"
echo "============================================"
orionCurl --url /v1/contextEntities/type/T2/id/E1 --json
echo
echo


echo "14. NOP /v1/contextEntities/type/T2/id/E1 and see it fail"
echo "========================================================="
orionCurl --url /v1/contextEntities/type/T2/id/E1 -X NOP
echo
echo


--REGEXPECT--
01. PUT /v1/contextEntities/type/T1/id/E1 and see it fail
=========================================================
HTTP/1.1 200 OK
Content-Length: 116
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404", 
        "details": "E1", 
        "reasonPhrase": "No context element found"
    }
}


02. GET /v1/contextEntities/type/T1/id/E1 and see it fail
=========================================================
HTTP/1.1 200 OK
Content-Length: 220
Content-Type: application/json
Date: REGEX(.*)

{
    "contextElement": {
        "id": "E1", 
        "isPattern": "false", 
        "type": "T1"
    }, 
    "statusCode": {
        "code": "404", 
        "details": "Entity id: /E1/", 
        "reasonPhrase": "No context element found"
    }
}


03. POST /v1/contextEntities/type/T1/id/E1 OK
=============================================
HTTP/1.1 200 OK
Content-Length: 316
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1", 
                    "type": "degree", 
                    "value": ""
                }
            ], 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E1", 
    "isPattern": "false", 
    "type": "T1"
}


04. PUT /v1/contextEntities/type/T1/id/E1 OK
============================================
HTTP/1.1 200 OK
Content-Length: 259
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1", 
                    "type": "degree", 
                    "value": ""
                }
            ], 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. GET /v1/contextEntities/type/T1/id/E1 OK
============================================
HTTP/1.1 200 OK
Content-Length: 279
Content-Type: application/json
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A1", 
                "type": "degree", 
                "value": "2"
            }
        ], 
        "id": "E1", 
        "isPattern": "false", 
        "type": "T1"
    }, 
    "statusCode": {
        "code": "200", 
        "reasonPhrase": "OK"
    }
}


06. POST /v1/contextEntities/type/T2/id/E1 OK
=============================================
HTTP/1.1 200 OK
Content-Length: 316
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A2", 
                    "type": "degree", 
                    "value": ""
                }
            ], 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E1", 
    "isPattern": "false", 
    "type": "T2"
}


07. GET /v1/contextEntities and see E1 and E2
=============================================
HTTP/1.1 200 OK
Content-Length: 736
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1", 
                        "type": "degree", 
                        "value": "2"
                    }
                ], 
                "id": "E1", 
                "isPattern": "false", 
                "type": "T1"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }, 
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2", 
                        "type": "degree", 
                        "value": "1"
                    }
                ], 
                "id": "E1", 
                "isPattern": "false", 
                "type": "T2"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


08. GET /v1/contextEntities/type/T1/id/E1 OK
============================================
HTTP/1.1 200 OK
Content-Length: 279
Content-Type: application/json
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A1", 
                "type": "degree", 
                "value": "2"
            }
        ], 
        "id": "E1", 
        "isPattern": "false", 
        "type": "T1"
    }, 
    "statusCode": {
        "code": "200", 
        "reasonPhrase": "OK"
    }
}


09. GET /v1/contextEntities/type/T2/id/E1 OK
============================================
HTTP/1.1 200 OK
Content-Length: 279
Content-Type: application/json
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A2", 
                "type": "degree", 
                "value": "1"
            }
        ], 
        "id": "E1", 
        "isPattern": "false", 
        "type": "T2"
    }, 
    "statusCode": {
        "code": "200", 
        "reasonPhrase": "OK"
    }
}


10. DELETE /v1/contextEntities/type/T1/id/E1 OK
===============================================
HTTP/1.1 200 OK
Content-Length: 46
Content-Type: application/json
Date: REGEX(.*)

{
    "code": "200", 
    "reasonPhrase": "OK"
}


11. DELETE /v1/contextEntities/type/T1/id/E1 and see it fail
============================================================
HTTP/1.1 200 OK
Content-Length: 88
Content-Type: application/json
Date: REGEX(.*)

{
    "code": "404", 
    "details": "E1", 
    "reasonPhrase": "No context element found"
}


12. GET /v1/contextEntities/type/T1/id/E1 and see it fail
=========================================================
HTTP/1.1 200 OK
Content-Length: 220
Content-Type: application/json
Date: REGEX(.*)

{
    "contextElement": {
        "id": "E1", 
        "isPattern": "false", 
        "type": "T1"
    }, 
    "statusCode": {
        "code": "404", 
        "details": "Entity id: /E1/", 
        "reasonPhrase": "No context element found"
    }
}


13. GET /v1/contextEntities/type/T2/id/E1 OK
============================================
HTTP/1.1 200 OK
Content-Length: 279
Content-Type: application/json
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A2", 
                "type": "degree", 
                "value": "1"
            }
        ], 
        "id": "E1", 
        "isPattern": "false", 
        "type": "T2"
    }, 
    "statusCode": {
        "code": "200", 
        "reasonPhrase": "OK"
    }
}


14. NOP /v1/contextEntities/type/T2/id/E1 and see it fail
=========================================================
HTTP/1.1 405 Method Not Allowed
Content-Length: 0
Allow: POST, GET, PUT, DELETE
Date: REGEX(.*)



--TEARDOWN--
brokerStop CB
