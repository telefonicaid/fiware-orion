# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription Cache Throttling and expiration after Refresh

--SHELL-INIT--
dbInit CB
dbInit CB t1
brokerStart CB 38,101 IPv4 -multiservice -subCacheIval 10 --cache
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription for s0.* entities, attribute A, w/o tenant, expiration time 21 secs
# 02. Sleep 11 secs to let the cache refresh from DB - one cache insert comes from the refresh
# 03. Create entity s01 w/ attr A w/o tenant
# 04. Modify entity s01 w/ attr A w/o tenant - notification lost by throttling
# 05. Modify entity s01 w/ attr A w/o tenant - notification lost by throttling
# 06. Wait 5 secs so that the throttling of 4 secs is OK
# 07. Modify entity s01 w/ attr A w/o tenant - notification NOT lost by throttling
# 08. Modify entity s01 w/ attr A w/o tenant - notification lost by throttling
# 09. Wait 6 secs more, to make subscription expire
# 10. Modify entity s01 w/ attr A w/o tenant - no notification as expired
# 11. Dump accumulator - see two notifications
#


echo "01. Create subscription for s0.* entities, attribute A, w/o tenant, expiration time 21 secs"
echo "==========================================================================================="
payload='{
  "entities": [
    {
      "isPattern": "true",
      "id": "s0.*"
    }
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "PT21S",
  "throttling": "PT4S",
  "notifyConditions": [
    {
      "type": "ONCHANGE",
      "condValues": [ "A" ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload"
echo
echo


echo "02. Sleep 11 secs to let the cache refresh from DB - one cache insert comes from the refresh"
echo "============================================================================================"
sleep 11
orionCurl --url /cache/statistics
echo
echo


echo "03. Create entity s01 w/ attr A w/o tenant"
echo "=========================================="
payload='{
  "id": "s01",
  "A": "03. Creation"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "04. Modify entity s01 w/ attr A w/o tenant - notification lost by throttling"
echo "============================================================================"
payload='{ "A": "04. notification lost by throttling" }'
orionCurl --url '/v2/entities/s01/attrs?options=keyValues' -X PUT --payload "$payload"
echo
echo


echo "05. Modify entity s01 w/ attr A w/o tenant - notification lost by throttling"
echo "============================================================================"
payload='{ "A": "05. notification lost by throttling" }'
orionCurl --url '/v2/entities/s01/attrs?options=keyValues' -X PUT --payload "$payload"
echo
echo


echo "06. Wait 5 secs so that the throttling of 4 secs is OK"
echo "======================================================"
if [ "$VALGRIND" == "" ]
then
  sleep 5
else
  sleep 4
fi
echo
echo


echo "07. Modify entity s01 w/ attr A w/o tenant - notification NOT lost by throttling"
echo "================================================================================"
payload='{ "A": "07. Modification" }'
orionCurl --url '/v2/entities/s01/attrs?options=keyValues' -X PUT --payload "$payload"
echo
echo


echo "08. Modify entity s01 w/ attr A=5 w/o tenant - notification lost by throttling"
echo "=============================================================================="
payload='{ "A": "08. notification lost by throttling" }'
orionCurl --url '/v2/entities/s01/attrs?options=keyValues' -X PUT --payload "$payload"
echo
echo


echo "09. Wait 6 secs more, to make subscription expire"
echo "================================================="
sleep 6
echo
echo


echo "10. Modify entity s01 w/ attr A w/o tenant - no notification as expired"
echo "======================================================================="
payload='{ "A": "10. no notification as expired" }'
orionCurl --url '/v2/entities/s01/attrs?options=keyValues' -X PUT --payload "$payload"
echo
echo


echo "11. Dump accumulator - see two notifications"
echo "============================================"
sleep 1
accumulatorDump
echo
echo


#
# About
#   "subCacheRefreshs": "REGEX((0|1|2))",
#
# If started with -noCache:  0
# Normal start:              1
# Under valgrind:            2 (possibly, depending on timing)
#


--REGEXPECT--
01. Create subscription for s0.* entities, attribute A, w/o tenant, expiration time 21 secs
===========================================================================================
HTTP/1.1 200 OK
Content-Length: 106
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "PT21S",
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT4S"
    }
}


02. Sleep 11 secs to let the cache refresh from DB - one cache insert comes from the refresh
============================================================================================
HTTP/1.1 200 OK
Content-Length: 92
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "ids": "REGEX([0-9a-f]{24})",
    "inserts": REGEX((1|2)),
    "items": 1,
    "refresh": REGEX((0|1|2)),
    "removes": 0,
    "updates": 0
}


03. Create entity s01 w/ attr A w/o tenant
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/s01?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Modify entity s01 w/ attr A w/o tenant - notification lost by throttling
============================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Modify entity s01 w/ attr A w/o tenant - notification lost by throttling
============================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Wait 5 secs so that the throttling of 4 secs is OK
======================================================


07. Modify entity s01 w/ attr A w/o tenant - notification NOT lost by throttling
================================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Modify entity s01 w/ attr A=5 w/o tenant - notification lost by throttling
==============================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. Wait 6 secs more, to make subscription expire
=================================================


10. Modify entity s01 w/ attr A w/o tenant - no notification as expired
=======================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



11. Dump accumulator - see two notifications
============================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 271
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "Text",
                        "value": "03. Creation"
                    }
                ],
                "id": "s01",
                "isPattern": "false",
                "type": "Thing"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 275
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A",
                        "type": "Text",
                        "value": "07. Modification"
                    }
                ],
                "id": "s01",
                "isPattern": "false",
                "type": "Thing"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
dbDrop CB t1
