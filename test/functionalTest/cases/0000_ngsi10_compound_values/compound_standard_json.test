# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Create and query compound values (standard op and JSON creation)

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: +++++++++ create vector compound +++++++++++"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EVector",
            "attributes": [
            {
                "name": "att",
                "type": "compound",
                "value": [
                   "22",
                   {
                      "x": [ "x1", "x2" ],
                      "y": "3"
                   },
                   [ "z1", "z2" ]
                ]
            }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "$payload"

echo "2: +++++++++ create object compound +++++++++++"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EObject",
            "attributes": [
            {
                "name": "att",
                "type": "compound",
                "value": {
                   "x": {
                      "x1": "a",
                      "x2": "b"
                   },
                   "y": [ "y1", "y2" ]
                }
            }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "$payload"

echo "3: ++++++++++ query for vector compound in JSON ++++++++++"
url="/v1/queryContext"
payload='{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EVector"
        }
    ]
}'
orionCurl --url "$url" --payload "$payload"

echo "4: ++++++++++ query for object compound in JSON ++++++++++"
url="/v1/queryContext"
payload='{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EObject"
        }
    ]
}'
orionCurl --url "$url" --payload "$payload"

echo "5: ++++++++++ query for vector compound in JSON convop ++++++++++"
orionCurl --url "/v1/contextEntities/EVector"

echo "6: ++++++++++ query for object compound in JSON convop ++++++++++"
orionCurl --url "/v1/contextEntities/EObject"

--REGEXPECT--
1: +++++++++ create vector compound +++++++++++
HTTP/1.1 200 OK
Content-Length: 196
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att",
                        "type": "compound",
                        "value": ""
                    }
                ],
                "id": "EVector",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
2: +++++++++ create object compound +++++++++++
HTTP/1.1 200 OK
Content-Length: 196
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att",
                        "type": "compound",
                        "value": ""
                    }
                ],
                "id": "EObject",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
3: ++++++++++ query for vector compound in JSON ++++++++++
HTTP/1.1 200 OK
Content-Length: 238
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att",
                        "type": "compound",
                        "value": [
                            "22",
                            {
                                "x": [
                                    "x1",
                                    "x2"
                                ],
                                "y": "3"
                            },
                            [
                                "z1",
                                "z2"
                            ]
                        ]
                    }
                ],
                "id": "EVector",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
4: ++++++++++ query for object compound in JSON ++++++++++
HTTP/1.1 200 OK
Content-Length: 235
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att",
                        "type": "compound",
                        "value": {
                            "x": {
                                "x1": "a",
                                "x2": "b"
                            },
                            "y": [
                                "y1",
                                "y2"
                            ]
                        }
                    }
                ],
                "id": "EObject",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
5: ++++++++++ query for vector compound in JSON convop ++++++++++
HTTP/1.1 200 OK
Content-Length: 215
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "att",
                "type": "compound",
                "value": [
                    "22",
                    {
                        "x": [
                            "x1",
                            "x2"
                        ],
                        "y": "3"
                    },
                    [
                        "z1",
                        "z2"
                    ]
                ]
            }
        ],
        "id": "EVector",
        "isPattern": "false",
        "type": "T"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
6: ++++++++++ query for object compound in JSON convop ++++++++++
HTTP/1.1 200 OK
Content-Length: 212
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "att",
                "type": "compound",
                "value": {
                    "x": {
                        "x1": "a",
                        "x2": "b"
                    },
                    "y": [
                        "y1",
                        "y2"
                    ]
                }
            }
        ],
        "id": "EObject",
        "isPattern": "false",
        "type": "T"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
--TEARDOWN--
brokerStop CB
dbDrop CB
