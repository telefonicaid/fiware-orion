# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Query SEQ with attributes as JSON objects and compound values

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: Append entity E1 with two different attributes A1 and A2, with compound values"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "Test",
            "isPattern": "false",
            "id": "E1",
            "attributes": [
            {
                "name": "A1",
                "type": "test",
                "value": {
                  "compound": {"a": "1", "b": "2", "c": "3" }
                }
            },
            {
                "name": "A2",
                "type": "test",
                "value": [ "a", "b", "c" ]
            }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "$payload"
echo
echo

echo "2. JsonAttributeObjectQuery for the entity E1 for attributes A1 and A2, with compound values"
url="/v1/queryContext"
payload='{
    "entities": [
        {
            "type": "Test",
            "isPattern": "false",
            "id": "E1"
        }
    ],
    "attributes": [ "A1", "A2" ]
}'
orionCurl --url "$url" --payload "$payload" --urlParams attributeFormat=object
echo
echo

--REGEXPECT--
1: Append entity E1 with two different attributes A1 and A2, with compound values
HTTP/1.1 200 OK
Content-Length: 228
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "test",
                        "value": ""
                    },
                    {
                        "name": "A2",
                        "type": "test",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "Test"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


2. JsonAttributeObjectQuery for the entity E1 for attributes A1 and A2, with compound values
HTTP/1.1 200 OK
Content-Length: 261
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": {
                    "A1": {
                        "type": "test",
                        "value": {
                            "compound": {
                                "a": "1",
                                "b": "2",
                                "c": "3"
                            }
                        }
                    },
                    "A2": {
                        "type": "test",
                        "value": [
                            "a",
                            "b",
                            "c"
                        ]
                    }
                },
                "id": "E1",
                "isPattern": "false",
                "type": "Test"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
