# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
CREATE Entity V2 Already exist

--SHELL-INIT--
dbInit CB
brokerStart CB 0

--SHELL--

#
# 01. POST /v2/entities (Room1-Room)
# 02. POST /v2/entities (Room1-Room)
# 03. GET /v2/entities/Room1
# 04. GET /v2/entities/Room1?options=keyValues
# 05. GET /v2/entities/Room1?options=values
#

echo "01. POST /v2/entities (Room1-Room)"
echo "=================================="
payload='{
  "id": "Room1",
  "type": "Room",
  "temp": "29"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "02. POST /v2/entities (Room1-Room)"
echo "=================================="
payload='{
  "id": "Room1",
  "type": "Room",
  "temp": "30"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "03. GET /v2/entities/Room1"
echo "=========================="
orionCurl --url /v2/entities/Room1
echo
echo


echo "04. GET /v2/entities/Room1?options=keyValues"
echo "============================================"
orionCurl --url '/v2/entities/Room1?options=keyValues'
echo
echo


echo "05. GET /v2/entities/Room1?options=values"
echo "========================================="
orionCurl --url '/v2/entities/Room1?options=values'
echo
echo


--REGEXPECT--
01. POST /v2/entities (Room1-Room)
==================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/Room1?type=Room
Content-Length: 0



02. POST /v2/entities (Room1-Room)
==================================
HTTP/1.1 422 Unprocessable Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 56

{
    "description": "Already Exists",
    "error": "Unprocessable"
}


03. GET /v2/entities/Room1
==========================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 78

{
    "id": "Room1",
    "temp": {
        "metadata": {},
        "type": "Text",
        "value": "29"
    },
    "type": "Room"
}


04. GET /v2/entities/Room1?options=keyValues
============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 40

{
    "id": "Room1",
    "temp": "29",
    "type": "Room"
}


05. GET /v2/entities/Room1?options=values
=========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 6

[
    "29"
]


--TEARDOWN--
brokerStop CB
dbDrop CB

