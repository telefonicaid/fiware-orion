# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET entities with type patterns

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1 with type T1
# 02. Create E2 with type T12
# 03. Create E3 with type T2
# 04. GET /v2/entities?typePattern=T.* - see all three
# 05. GET /v2/entities?typePattern=T1.* - see E1 and E2
# 06. GET /v2/entities?typePattern=T1.*&idPattern=E.* - see E1 and E2
# 07. GET entities with type T.*, using POST /v2/op/query - see all three
# 08. GET entities with type T1.*, using POST /v2/op/query - see all E1 and E2
# 09. GET entities with id E.* and type T.*, using POST /v2/op/query - see all three
#

echo "01. Create E1 with type T1"
echo "=========================="
payload='{
  "id": "E1",
  "type": "T1"
}
'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create E2 with type T12"
echo "==========================="
payload='{
  "id": "E2",
  "type": "T12"
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Create E3 with type T2"
echo "=========================="
payload='{
  "id": "E3",
  "type": "T2"
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. GET /v2/entities?typePattern=T.* - see all three"
echo "===================================================="
orionCurl --url '/v2/entities?typePattern=T.*'
echo
echo


echo "05. GET /v2/entities?typePattern=T1.* - see E1 and E2"
echo "====================================================="
orionCurl --url '/v2/entities?typePattern=T1.*'
echo
echo


echo "06. GET /v2/entities?typePattern=T1.*&idPattern=E.* - see E1 and E2"
echo "==================================================================="
orionCurl --url '/v2/entities?typePattern=T1.*&idPattern=E.*'
echo
echo



echo "07. GET entities with type T.*, using POST /v2/op/query - see all three"
echo "======================================================================="
payload='{
  "entities": [
    {
      "idPattern": ".*",
      "typePattern": "T.*"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "08. GET entities with type T1.*, using POST /v2/op/query - see all E1 and E2"
echo "============================================================================"
payload='{
  "entities": [
    {
      "idPattern": ".*",
      "typePattern": "T1.*"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


echo "09. GET entities with id E.* and type T.*, using POST /v2/op/query - see all three"
echo "=================================================================================="
payload='{
  "entities": [
    {
      "idPattern": "E.*",
      "typePattern": "T.*"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


--REGEXPECT--
01. Create E1 with type T1
==========================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T1
Content-Length: 0



02. Create E2 with type T12
===========================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T12
Content-Length: 0



03. Create E3 with type T2
==========================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E3?type=T2
Content-Length: 0



04. GET /v2/entities?typePattern=T.* - see all three
====================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 74

[
    {
        "id": "E1",
        "type": "T1"
    },
    {
        "id": "E2",
        "type": "T12"
    },
    {
        "id": "E3",
        "type": "T2"
    }
]


05. GET /v2/entities?typePattern=T1.* - see E1 and E2
=====================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 50

[
    {
        "id": "E1",
        "type": "T1"
    },
    {
        "id": "E2",
        "type": "T12"
    }
]


06. GET /v2/entities?typePattern=T1.*&idPattern=E.* - see E1 and E2
===================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 50

[
    {
        "id": "E1",
        "type": "T1"
    },
    {
        "id": "E2",
        "type": "T12"
    }
]


07. GET entities with type T.*, using POST /v2/op/query - see all three
=======================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 74

[
    {
        "id": "E1",
        "type": "T1"
    },
    {
        "id": "E2",
        "type": "T12"
    },
    {
        "id": "E3",
        "type": "T2"
    }
]


08. GET entities with type T1.*, using POST /v2/op/query - see all E1 and E2
============================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 50

[
    {
        "id": "E1",
        "type": "T1"
    },
    {
        "id": "E2",
        "type": "T12"
    }
]


09. GET entities with id E.* and type T.*, using POST /v2/op/query - see all three
==================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 74

[
    {
        "id": "E1",
        "type": "T1"
    },
    {
        "id": "E2",
        "type": "T12"
    },
    {
        "id": "E3",
        "type": "T2"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
