# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
X-Auth-Token From Subscribe Request

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Make accumulator subscribe to changes in E1/A1, using an X-Auth-Token at01
# 02. Update/Append E1/A1, with auth-token at02
# 03. Check that the X-Auth-Token from the update request (at02) was propagated to accumulator
# 04. Clear the accumulator
# 05. Update subscription, using X-Auth-Token at03
# 06. Update/Append E1/A1, with auth-token at04
# 07. Check that the X-Auth-Token from the update request (at04) was propagated to accumulator
#

echo "01. Make accumulator subscribe to changes in E1/A1, using an X-Auth-Token at01"
echo "=============================================================================="
payload='{
  "entities": [
    {
        "type": "ET",
        "isPattern": "false",
        "id": "E1"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "${payload}" --xauthToken at01
SUB_ID=$(echo "$_response" | grep subscriptionId | awk -F\" '{ print $4 }')
echo
echo


echo "02. Update/Append E1/A1, with auth-token at02"
echo "============================================="
payload='{
  "attributes" : [
    {
      "name" : "A1",
      "type" : "AT",
      "value" : "V"
    },
    {
      "name" : "A2",
      "type" : "AT",
      "value" : "V"
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/ET/id/E1 --payload "${payload}" --xauthToken at02
echo
echo


echo "03. Check that the X-Auth-Token from the update request (at02) was propagated to accumulator"
echo "============================================================================================"
accumulatorDump
echo
echo


echo "04. Clear the accumulator"
echo "========================="
curl localhost:${LISTENER_PORT}/reset -s -S -X POST
echo
echo


echo "05. Update subscription, using X-Auth-Token at03"
echo "================================================"
payload='{
  "duration": "P1Y",
  "subscriptionId": "'$SUB_ID'",
  "notifyConditions": [
    {
      "type": "ONCHANGE",
        "condValues": [
          "A2"
        ]
    }
  ]
}'
orionCurl --url /v1/contextSubscriptions/$SUB_ID --payload "${payload}" --xauthToken at03 -X PUT
echo
echo

echo "06. Update/Append E1/A1, with auth-token at04"
echo "============================================="
payload='{
  "attributes" : [
    {
      "name" : "A1",
      "type" : "AT",
      "value" : "V"
    },
    {
      "name" : "A2",
      "type" : "AT",
      "value" : "Vbis"
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/ET/id/E1 --payload "${payload}" --xauthToken at04
echo
echo



echo "07. Check that the X-Auth-Token from the update request (at04) was propagated to accumulator"
echo "============================================================================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Make accumulator subscribe to changes in E1/A1, using an X-Auth-Token at01
==============================================================================
HTTP/1.1 200 OK
Content-Length: 84
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}


02. Update/Append E1/A1, with auth-token at02
=============================================
HTTP/1.1 200 OK
Content-Length: 203
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1",
                    "type": "AT",
                    "value": ""
                },
                {
                    "name": "A2",
                    "type": "AT",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E1",
    "isPattern": "false",
    "type": "ET"
}


03. Check that the X-Auth-Token from the update request (at02) was propagated to accumulator
============================================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 255
X-Auth-Token: at02
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "AT",
                        "value": "V"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


04. Clear the accumulator
=========================


05. Update subscription, using X-Auth-Token at03
================================================
HTTP/1.1 200 OK
Content-Length: 84
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1Y",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}


06. Update/Append E1/A1, with auth-token at04
=============================================
HTTP/1.1 200 OK
Content-Length: 203
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1",
                    "type": "AT",
                    "value": ""
                },
                {
                    "name": "A2",
                    "type": "AT",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E1",
    "isPattern": "false",
    "type": "ET"
}


07. Check that the X-Auth-Token from the update request (at04) was propagated to accumulator
============================================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 255
X-Auth-Token: at04
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "AT",
                        "value": "V"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
