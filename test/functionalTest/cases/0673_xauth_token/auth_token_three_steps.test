# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
X-Auth-Token In Three Steps

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB 0-255
brokerStart CP1 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Make CP1 subscribe to changes in CB/E1/A1, with X-Auth token kz01
# 02. Make accumulator subscribe to changes in CP1/E1/A1, with X-Auth token kz02
# 03. Update/Append E1/A1 in CB, with auth-token fg01
# 04. Check that the X-Auth-Token from the update request was propagated to accumulator
# 05. Reset the accumulator
# 06. Update E1/A1 in CB, with auth-token kz03
# 07. Make sure the accumulator receives the Update, with the correct X-Auth token
#


echo "01. Make CP1 subscribe to changes in CB/E1/A1, with X-Auth token kz01"
echo "====================================================================="
payload='{
  "entities": [
    {
        "type": "ET",
        "isPattern": "false",
        "id": "E1"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://127.0.0.1:'${CP1_PORT}'/v1/notifyContext",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
sleep 1
orionCurl --url /v1/subscribeContext --payload "${payload}" --xauthToken kz01
SUB_ID=$(echo "$_response" | grep subscriptionId | awk -F\" '{ print $4 }')
echo
echo


echo "02. Make accumulator subscribe to changes in CP1/E1/A1, with X-Auth token kz02"
echo "=============================================================================="
payload='{
  "entities": [
    {
        "type": "ET",
        "isPattern": "false",
        "id": "E1"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
sleep 1
orionCurl --url /v1/subscribeContext --port $CP1_PORT --payload "${payload}" --xauthToken kz02
echo
echo


echo "03. Update/Append E1/A1 in CB, with auth-token fg01"
echo "==================================================="
payload='{
  "attributes" : [
    {
      "name" : "A1",
      "type" : "AT",
      "value" : "V"
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/ET/id/E1 --payload "${payload}" --xauthToken fg01
echo
echo


echo "04. Check that the X-Auth-Token from the update request was propagated to accumulator"
echo "====================================================================================="
accumulatorDump
echo
echo


echo "05. Reset the accumulator"
echo "========================="
sleep 1
curl localhost:${LISTENER_PORT}/reset -s -S -X POST
echo
echo


echo "06. Update E1/A1 in CB, with auth-token kz03"
echo "============================================"
payload='{
  "attributes" : [
    {
      "name" : "A1",
      "type" : "AT",
      "value" : "V2"
    },
    {
      "name" : "A2",
      "type" : "AT",
      "value" : "V2"
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/ET/id/E1 --payload "${payload}" --xauthToken kz03
echo
echo


echo "07. Make sure the accumulator receives the Update, with the correct X-Auth token"
echo "================================================================================"
# Include a small time interval to avoid glitches
sleep 1s
accumulatorDump
echo
echo



--REGEXPECT--
01. Make CP1 subscribe to changes in CB/E1/A1, with X-Auth token kz01
=====================================================================
HTTP/1.1 200 OK
Content-Length: 104
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M",
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT1S"
    }
}


02. Make accumulator subscribe to changes in CP1/E1/A1, with X-Auth token kz02
==============================================================================
HTTP/1.1 200 OK
Content-Length: 104
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M",
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT1S"
    }
}


03. Update/Append E1/A1 in CB, with auth-token fg01
===================================================
HTTP/1.1 200 OK
Content-Length: 166
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1",
                    "type": "AT",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E1",
    "isPattern": "false",
    "type": "ET"
}


04. Check that the X-Auth-Token from the update request was propagated to accumulator
=====================================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 255
X-Auth-Token: fg01
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1; cbnotif=1

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "AT",
                        "value": "V"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


05. Reset the accumulator
=========================


06. Update E1/A1 in CB, with auth-token kz03
============================================
HTTP/1.1 200 OK
Content-Length: 203
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1",
                    "type": "AT",
                    "value": ""
                },
                {
                    "name": "A2",
                    "type": "AT",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E1",
    "isPattern": "false",
    "type": "ET"
}


07. Make sure the accumulator receives the Update, with the correct X-Auth token
================================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 256
X-Auth-Token: kz03
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1; cbnotif=1

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "AT",
                        "value": "V2"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "ET"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
brokerStop CP1
accumulatorStop

dbDrop CB
dbDrop CP1
