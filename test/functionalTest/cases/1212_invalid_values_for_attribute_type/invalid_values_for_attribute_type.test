# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Invalid Values For Attribute Type

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity with attr A1 - POST /v2/entities E1 A1/TA1/a1
# 02. Update entity with attr A1 using an invalid type for A1 - POST /v2/entities/E1 A1/<TA1>/a1
# 03. GET /v2/entities/E1 to make sure A1 still has type TA1
#


echo "01. Create entity with attr A1 - POST /v2/entities E1 A1/TA1/a1"
echo "==============================================================="
payload='{ "id": "E1", "type": "T1", "A1": { "type": "TA1", "value" : "a1" } }'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "02. Update entity with attr A1 using an invalid type for A1 - POST /v2/entities/E1 A1/<TA1>/a1"
echo "=============================================================================================="
payload='{ "A1": { "type": "<TA1>", "value" : "a2" } }'
orionCurl --url /v2/entities/E1 --payload "$payload" --json
echo
echo


echo "03. GET /v2/entities/E1 to make sure A1 still has type TA1"
echo "=========================================================="
orionCurl --url /v2/entities/E1 --json
echo
echo


--REGEXPECT--
01. Create entity with attr A1 - POST /v2/entities E1 A1/TA1/a1
===============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1
Date: REGEX(.*)



02. Update entity with attr A1 using an invalid type for A1 - POST /v2/entities/E1 A1/<TA1>/a1
==============================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 89
Content-Type: application/json
Date: REGEX(.*)

{
    "description": "Parse Error (Invalid characters in attribute type)",
    "error": "BadRequest"
}


03. GET /v2/entities/E1 to make sure A1 still has type TA1
==========================================================
HTTP/1.1 200 OK
Content-Length: 56
Content-Type: application/json
Date: REGEX(.*)

{
    "A1": {
        "type": "TA1",
        "value": "a1"
    },
    "id": "E1",
    "type": "T1"
}


--TEARDOWN--
brokerStop CB
dbDrop CB

