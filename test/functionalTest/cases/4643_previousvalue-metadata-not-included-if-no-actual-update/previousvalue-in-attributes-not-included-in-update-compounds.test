# Copyright 2025 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
previousValue metadata in attributes not included in update (compound variant)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--
#
# 01. Create entity with attributes A1=[1], A2={x:2}, A3=[3,3], A4={x:4,y:4}, A5=[5,{x:5}]
# 02. Create sub with previousValue enabled
# 03. Update entity A2=[[20]] and A4={x:{y:40}}
# 04. Dump accumulator
#

echo "01. Create entity with attributes A1=[1], A2={x:2}, A3=[3,3], A4={x:4,y:4}, A5=[5,{x:5}]"
echo "========================================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A1": {
    "type": "Number",
    "value": [ 1 ]
  },
  "A2": {
    "type": "Number",
    "value": { "x": 2 }
  },
  "A3": {
    "type": "Number",
    "value": [ 3, 3 ]
  },
  "A4": {
    "type": "Number",
    "value": { "x": 4, "y": 4 }
  },
  "A5": {
    "type": "Number",
    "value": [ 5, {"x": 5} ]
  }   
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create sub with previousValue enabled"
echo "========================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    },
    "metadata": [
      "previousValue",
      "*"
    ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "03. Update entity A2=[[20]] and A4={x:{y:40}}"
echo "============================================="
payload='{
  "A2": {
    "value": [ [ 20 ] ],
    "type": "Number"
  },
  "A4": {
    "value": { "x": { "y": 40 } },
    "type": "Number"
  }
}'
orionCurl --url /v2/entities/E/attrs -X PATCH --payload "$payload"
echo
echo


echo "04. Dump accumulator"
echo "===================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create entity with attributes A1=[1], A2={x:2}, A3=[3,3], A4={x:4,y:4}, A5=[5,{x:5}]
========================================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E?type=T
Content-Length: 0



02. Create sub with previousValue enabled
=========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



03. Update entity A2=[[20]] and A4={x:{y:40}}
=============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. Dump accumulator
====================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 594
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "previousValue": {
                        "type": "Number",
                        "value": [
                            1
                        ]
                    }
                },
                "type": "Number",
                "value": [
                    1
                ]
            },
            "A2": {
                "metadata": {
                    "previousValue": {
                        "type": "Number",
                        "value": {
                            "x": 2
                        }
                    }
                },
                "type": "Number",
                "value": [
                    [
                        20
                    ]
                ]
            },
            "A3": {
                "metadata": {
                    "previousValue": {
                        "type": "Number",
                        "value": [
                            3,
                            3
                        ]
                    }
                },
                "type": "Number",
                "value": [
                    3,
                    3
                ]
            },
            "A4": {
                "metadata": {
                    "previousValue": {
                        "type": "Number",
                        "value": {
                            "x": 4,
                            "y": 4
                        }
                    }
                },
                "type": "Number",
                "value": {
                    "x": {
                        "y": 40
                    }
                }
            },
            "A5": {
                "metadata": {
                    "previousValue": {
                        "type": "Number",
                        "value": [
                            5,
                            {
                                "x": 5
                            }
                        ]
                    }
                },
                "type": "Number",
                "value": [
                    5,
                    {
                        "x": 5
                    }
                ]
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
