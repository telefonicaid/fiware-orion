# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
REPLACE v1 test

----SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

# We are using v2 operations as they are more "lean" in the test specification/result

# 01. Create E1 with attr1, attr2
# 02. Get entity (attr1)
# 03. v1 REPLACE with attr3, attr4
# 04. Get entity (attr3, attr4)


echo "01. Create E1 with attr1"
echo "========================"
payload='{ "id": "E1", "type": "T1", "attr1": "1", "attr2": "2" }'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "02. Get E1 (attr1, attr2)"
echo "========================="
orionCurl --url /v2/entities/E1
echo
echo


echo "03. v1 REPLACE with attr3, attr4"
echo "================================"
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "attr3",
          "value": "3"
        },
        {
          "name": "attr4",
          "value": "4"
        }
      ]
    }
  ],
  "updateAction": "REPLACE"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "04. Get E1 (attr3, attr4)"
echo "========================="
orionCurl --url /v2/entities/E1
echo
echo


--REGEXPECT--
01. Create E1 with attr1
========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Get E1 (attr1, attr2)
=========================
HTTP/1.1 200 OK
Content-Length: 123
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "Text",
        "value": "1"
    },
    "attr2": {
        "metadata": {},
        "type": "Text",
        "value": "2"
    },
    "id": "E1",
    "type": "T1"
}


03. v1 REPLACE with attr3, attr4
================================
HTTP/1.1 200 OK
Content-Length: 224
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "attr3",
                        "type": "",
                        "value": ""
                    },
                    {
                        "name": "attr4",
                        "type": "",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. Get E1 (attr3, attr4)
=========================
HTTP/1.1 200 OK
Content-Length: 123
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr3": {
        "metadata": {},
        "type": "Text",
        "value": "3"
    },
    "attr4": {
        "metadata": {},
        "type": "Text",
        "value": "4"
    },
    "id": "E1",
    "type": "T1"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
