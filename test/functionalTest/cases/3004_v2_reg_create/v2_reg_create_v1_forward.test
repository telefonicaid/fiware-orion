# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Create registration using APIv2 and provoke v1 forwards

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB
brokerStart CP1

--SHELL--

#
# 01. Register entity E1/A1 (using APIv2) for CP1
# 02. Create E1/A1 in CP1
# 03. GET E1/A1 from main broker (forward made to CP1)
# 04. UPDATE E1/A1 in main broker (forward made to CP1)
# 05. GET E1/A1 directly from CP1, make sure updates are there
#
# FIXME: Add test case for v2 forwarding once v2 forwarding is implemented
#

echo "01. Register entity E1/A1 (using APIv2) for CP1"
echo "==============================================="
payload='{
   "description": "located in CP1",
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [ "A1" ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v1"
     },
     "legacyForwarding": true
   },
   "status": "active"
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "02. Create E1/A1 in CP1"
echo "======================="
payload='{
  "id": "E1",
  "type": "T1",
  "A1": {
    "value": "untouched"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "03. GET E1/A1 from main broker (forward made to CP1)"
echo "===================================================="
orionCurl --url '/v2/entities/E1?type=T1'
echo
echo


echo "04. UPDATE E1/A1 in main broker (forward made to CP1)"
echo "====================================================="
payload='{
  "A1": {
    "value": "touched"
  }
}'
orionCurl --url '/v2/entities/E1/attrs?type=T1' --payload "$payload" -X PATCH
echo
echo


echo "05. GET E1/A1 directly from CP1, make sure updates are there"
echo "============================================================"
orionCurl --url /v2/entities/E1 --port $CP1_PORT
echo
echo


--REGEXPECT--
01. Register entity E1/A1 (using APIv2) for CP1
===============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E1/A1 in CP1
=======================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. GET E1/A1 from main broker (forward made to CP1)
====================================================
HTTP/1.1 200 OK
Content-Length: 78
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Text",
        "value": "untouched"
    },
    "id": "E1",
    "type": "T1"
}


04. UPDATE E1/A1 in main broker (forward made to CP1)
=====================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. GET E1/A1 directly from CP1, make sure updates are there
============================================================
HTTP/1.1 200 OK
Content-Length: 76
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "Text",
        "value": "touched"
    },
    "id": "E1",
    "type": "T1"
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
