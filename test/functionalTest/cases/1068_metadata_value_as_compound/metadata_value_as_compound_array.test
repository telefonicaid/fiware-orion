# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Metadata value as compound array

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a subscription to trigger a notification (without entity type)
# 02. Create a subscription to trigger a notification (with entity type as Thing)
# 03. Create an entity E1 with attr A1 with metadata M1 = [ 1, 2 ]
# 04. GET /v2/entities, to see the entity
# 05. Dump accumulator to see the compound value of M1 correctly rendered in the notification twice
#

echo "01. Create a subscription to trigger a notification (without entity type)"
echo "========================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E2"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create a subscription to trigger a notification (with entity type as Thing)"
echo "==============================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E2",
        "type": "Thing"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo '03. Create an entity E2 with attr A1 with metadata M1 = [ 1, 2 ]'
echo '================================================================'
payload='{
  "id": "E2",
  "A1": {
    "value": "01",
    "metadata": {
      "M1": {
        "value": [ 1, 2 ]
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo



echo "04. GET /v2/entities, to see the entity"
echo "======================================="
orionCurl --url /v2/entities
echo
echo


echo "05. Dump accumulator to see the compound value of M1 correctly rendered in the notification twice"
echo "================================================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create a subscription to trigger a notification (without entity type)
=========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create a subscription to trigger a notification (with entity type as Thing)
===============================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create an entity E2 with attr A1 with metadata M1 = [ 1, 2 ]
================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. GET /v2/entities, to see the entity
=======================================
HTTP/1.1 200 OK
Content-Length: 121
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": [
                        1,
                        2
                    ]
                }
            },
            "type": "Text",
            "value": "01"
        },
        "id": "E2",
        "type": "Thing"
    }
]


05. Dump accumulator to see the compound value of M1 correctly rendered in the notification twice
=================================================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 174
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "StructuredValue",
                        "value": [
                            1,
                            2
                        ]
                    }
                },
                "type": "Text",
                "value": "01"
            },
            "id": "E2",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 174
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "StructuredValue",
                        "value": [
                            1,
                            2
                        ]
                    }
                },
                "type": "Text",
                "value": "01"
            },
            "id": "E2",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
