# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Attribute type overwritten to 'none' in updates using PUT /v2/entities/E1/attrs/A1/value

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1/T1/A1 in CB, A1 with type string
# 02. Update E1/T1/A1, using PUT /v2/entities/E1/attrs/A1/value
# 03. Make sure the type of A1 hasn't changed
# 04. Update E1/T1/A1, using PUT /v2/entities/E1/attrs/A1/value, with a compound value
# 05. Make sure the type of A1 hasn't changed
#

echo "01. Create E1/T1/A1 in CB, A1 with type string"
echo "=============================================="
payload='{
  "type": "T1",
  "id":   "E1",
  "A1": {
    "type": "string",
    "value": "A1 01"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Update E1/T1/A1, using PUT /v2/entities/E1/attrs/A1/value"
echo "============================================================="
payload='"A1 02"'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" -X PUT --in text/plain
echo
echo


echo "03. Make sure the type of A1 hasn't changed"
echo "==========================================="
orionCurl --url /v2/entities
echo
echo


echo "04. Update E1/T1/A1, using PUT /v2/entities/E1/attrs/A1/value, with a compound value"
echo "===================================================================================="
payload='{ "x": 1 }'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" -X PUT --in application/json
echo
echo


echo "05. Make sure the type of A1 hasn't changed"
echo "==========================================="
orionCurl --url /v2/entities
echo
echo


--REGEXPECT--
01. Create E1/T1/A1 in CB, A1 with type string
==============================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=T1
Content-Length: 0



02. Update E1/T1/A1, using PUT /v2/entities/E1/attrs/A1/value
=============================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



03. Make sure the type of A1 hasn't changed
===========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 78

[
    {
        "A1": {
            "metadata": {},
            "type": "string",
            "value": "A1 02"
        },
        "id": "E1",
        "type": "T1"
    }
]


04. Update E1/T1/A1, using PUT /v2/entities/E1/attrs/A1/value, with a compound value
====================================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05. Make sure the type of A1 hasn't changed
===========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 78

[
    {
        "A1": {
            "metadata": {},
            "type": "string",
            "value": {
                "x": 1
            }
        },
        "id": "E1",
        "type": "T1"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
