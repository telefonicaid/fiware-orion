# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
XML Parse Compound Values
--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
# 1. Compound contextValue without vector
echo "1: +++++++++++++++++++++++++++++++++"
url='/v1/updateContext'
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue>
            <level1>
              <value1>1</value1>
              <level2>
                <value2>2</value2>
                <value3>3</value3>
                <value4>4</value4>
                <level3>
                  <value31>vv2</value31>
                  <value32>vv3</value32>
                  <value33>vv4</value33>
                </level3>
              </level2>
              <level2again>
                <value5>5</value5>
                <value6>6</value6>
              </level2again>
            </level1>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "${payload}"

# 2. Compound contextValue with vector
echo "2: +++++++++++++++++++++++++++++++++"
url='/v1/updateContext'
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue>
            <level1>
              <value1>1</value1>
              <level2>
                <value2>2</value2>
                <value3>3</value3>
                <value4>4</value4>
                <level3 type="vector">
                  <value>vv2</value>
                  <value>vv3</value>
                  <value>vv4</value>
                </level3>
              </level2>
              <level2again>
                <value5>5</value5>
                <value6>6</value6>
              </level2again>
            </level1>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "${payload}"

# 3. Compound contextValue with vector but one of the items have an incorrect tagname
echo "3: +++++++++++++++++++++++++++++++++"
url='/v1/updateContext'
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue>
            <level1>
              <value1>1</value1>
              <level2>
                <value2>2</value2>
                <value3>3</value3>
                <value4>4</value4>
                <level3 type="vector">
                  <value>vv2</value>
                  <value>vv3</value>
                  <value3>vv4</value3>
                </level3>
              </level2>
              <level2again>
                <value5>5</value5>
                <value6>6</value6>
              </level2again>
            </level1>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "${payload}"

# 4. Compound contextValue with vector but two type-attributes
#INVALID_XML
echo "4: +++++++++++++++++++++++++++++++++"
url='/v1/updateContext'
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue>
            <level1>
              <value1>1</value1>
              <level2>
                <value2>2</value2>
                <value3>3</value3>
                <value4>4</value4>
                <level3 type="vector" type="vector">
                  <value>vv2</value>
                  <value>vv3</value>
                  <value>vv4</value>
                </level3>
              </level2>
              <level2again>
                <value5>5</value5>
                <value6>6</value6>
              </level2again>
            </level1>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "${payload}"

# 5. Compound contextValue with vector but type-attribute with value != 'vector'
echo "5: +++++++++++++++++++++++++++++++++"
url='/v1/updateContext'
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue>
            <level1>
              <value1>1</value1>
              <level2>
                <value2>2</value2>
                <value3>3</value3>
                <value4>4</value4>
                <level3 type="badType">
                  <value>vv2</value>
                  <value>vv3</value>
                  <value>vv4</value>
                </level3>
              </level2>
              <level2again>
                <value5>5</value5>
                <value6>6</value6>
              </level2again>
            </level1>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "${payload}"

# 6. Compound contextValue with vector but with unknown attribute
echo "6: +++++++++++++++++++++++++++++++++"
url='/v1/updateContext'
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue>
            <level1>
              <value1>1</value1>
              <level2>
                <value2>2</value2>
                <value3>3</value3>
                <value4>4</value4>
                <level3 happy="yes">
                  <value>vv2</value>
                  <value>vv3</value>
                  <value>vv4</value>
                </level3>
              </level2>
              <level2again>
                <value5>5</value5>
                <value6>6</value6>
              </level2again>
            </level1>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "${payload}"

# 7. Compound contextValue with vector and contextValue as a vector
echo "7: +++++++++++++++++++++++++++++++++"
url='/v1/updateContext'
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue type="vector">
            <item>1</item>
            <item>2</item>
            <item>3</item>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "${payload}"

# 8. Compound contextValue with struct that has two fields with the same name
echo "8: +++++++++++++++++++++++++++++++++"
url='/v1/updateContext'
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>temperature</name>
          <type>degree</type>
          <contextValue>
            <struct>
              <int>2</int>
              <long>21</long>
              <int>3</int>
            </struct>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "${payload}"

--REGEXPECT--
1: +++++++++++++++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 644
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>ConferenceRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
2: +++++++++++++++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 644
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>ConferenceRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
3: +++++++++++++++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 246
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <errorCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>compound value error: bad tag-name of vector item: /value3/, should be /value/</details>
  </errorCode>
</updateContextResponse>
4: +++++++++++++++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 247
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <errorCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>Bad value for XML attribute /type/ for /level3/: more than one /type/ attribute</details>
  </errorCode>
</updateContextResponse>
5: +++++++++++++++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 224
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <errorCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>Bad value for XML attribute /type/ for /level3/: badType</details>
  </errorCode>
</updateContextResponse>
6: +++++++++++++++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 242
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <errorCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>Bad value for XML attribute /type/ for /level3/: unknown attribute /happy/</details>
  </errorCode>
</updateContextResponse>
7: +++++++++++++++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 644
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>ConferenceRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
8: +++++++++++++++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 233
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <errorCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>compound value error: duplicated tag-name: /int/ in path: /struct</details>
  </errorCode>
</updateContextResponse>
--TEARDOWN--
brokerStop CB

