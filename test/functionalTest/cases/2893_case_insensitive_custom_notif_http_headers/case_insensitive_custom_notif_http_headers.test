# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Case sensitivness in httpCustom notification headers

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription for E1 with custom header names
# 02. Create E1 with attributes A1, A2, A3 and 4
# 03. Dump accumulator, see 1 notification
#

echo "01. Create subscription for E1 with custom header names that collide with the default ones"
echo "=============================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1"
      }
    ],
    "condition": {
      "attrs": []
    }
  },
  "notification": {
    "httpCustom": {
      "url":     "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "headers": { "${A3}": "${A4}" }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create E1 with attributes A1, A2, A3 and A4"
echo "==============================================="
payload='{
  "id": "E1",
  "A1": "foo",
  "A2": "bar",
  "A3": "Content-Type",
  "A4": "application/json"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "03. Dump accumulator, see 1 notification"
echo "========================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription for E1 with custom header names that collide with the default ones
==============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E1 with attributes A1, A2, A3 and A4
===============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Dump accumulator, see 1 notification
========================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 299
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Text",
                "value": "foo"
            },
            "A2": {
                "metadata": {},
                "type": "Text",
                "value": "bar"
            },
            "A3": {
                "metadata": {},
                "type": "Text",
                "value": "Content-Type"
            },
            "A4": {
                "metadata": {},
                "type": "Text",
                "value": "application/json"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
