# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Broker without -multservice must notify without regard to tenant

--SHELL-INIT--
dbInit CB
brokerStart CB 0
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a subcription to catch everything, for accumulator
# 02. Create entity without tenant
# 03. Create entity with empty tenant
# 04. Create entity with tenant abc
# 05. Dump accumulator, see three notifications
#

echo "01. Create a subcription to catch everything, for accumulator"
echo "============================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": ".*"
            }
        ],
        "condition": {
            "attrs": [ ]
         }
    },
    "notification": {
        "http": {
            "url": "http://localhost:'$LISTENER_PORT'/notify"
        },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity without tenant"
echo "================================"
payload='{
  "id": "E2",
  "A2": 2
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "03. Create entity with empty tenant"
echo "==================================="
payload='{
  "id": "E3",
  "A3": 3
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --tenant ""
echo
echo


echo "04. Create entity with tenant abc"
echo "================================="
payload='{
  "id": "E4",
  "A4": 4
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --tenant "abc"
echo
echo


echo "05. Dump accumulator, see three notifications"
echo "============================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create a subcription to catch everything, for accumulator
=============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity without tenant
================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create entity with empty tenant
===================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Create entity with tenant abc
=================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E4?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Dump accumulator, see three notifications
=============================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A2": {
                "metadata": {},
                "type": "Number",
                "value": 2
            },
            "id": "E2",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A3": {
                "metadata": {},
                "type": "Number",
                "value": 3
            },
            "id": "E3",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Fiware-Service: abc
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A4": {
                "metadata": {},
                "type": "Number",
                "value": 4
            },
            "id": "E4",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
