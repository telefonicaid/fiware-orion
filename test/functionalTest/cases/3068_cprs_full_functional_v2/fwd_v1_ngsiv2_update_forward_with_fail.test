# Copyright 2024 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Forward Update with fail (NGSIv1 legacy forwarding)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# This test is to check the parseEntitiesResponseV1() logic in CB. Accumulator is used as "fake" CPr
#
# 01. Register ConferenceRoom on CB with accumulator as providing application
# 02. Update ConferenceRoom in CB
# 03. Check the error in CB logs
# 04. Check one forwarded requests in logs
#

echo "01. Register ConferenceRoom on CB with accumulator as providing application"
echo "==========================================================================="
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "Room",
        "id": "ConferenceRoom"
      }
    ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${LISTENER_PORT}'/cprfail"
    },
    "legacyForwarding": true
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


REG1_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "02. Update ConferenceRoom in CB"
echo "==============================="
payload='{
  "lightstatus": {
    "type": "StructuredValue",
    "value": {
      "x": 1,
      "y": 2
    }
  },
  "pressure": {
    "type": "StructuredValue",
    "value": ["a", "b", "c"]
  },
 "temperature": {
   "value": 14,
   "type": "Number",
   "metadata": {
    "ID1": {
      "type": "Text",
      "value": {
        "x": 1,
        "y": 2
      }
    },
    "ID2": {
      "type": "Text",
      "value": ["a", "b", "c"]
    },
    "ID3": {
      "type": "Text",
      "value": "ThisIsID3"
    }
   }
  }
}'
orionCurl --url /v2/entities/ConferenceRoom/attrs?type=Room --payload "$payload" -X PATCH
echo
echo


echo "03. Check the error in CB logs"
echo "=============================="
# parentheis are problematic in combintation with REGEX(), so we change to | symbol
cat /tmp/contextBroker.log | grep WARN | awk -F 'msg=' '{print $2}' | sed 's/(/|/' | sed 's/)/|/'
echo
echo


echo "04. Check one forwarded requests in logs"
echo "========================================"
cat /tmp/contextBroker.log | grep "Request forwarded" | awk -F 'msg=' '{print $2}' | sed "s/${REG1_ID}/REG1_ID/"
echo
echo


--REGEXPECT--
01. Register ConferenceRoom on CB with accumulator as providing application
===========================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Content-Length: 0



02. Update ConferenceRoom in CB
===============================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


03. Check the error in CB logs
==============================
Raising alarm BadInput REGEX((0.0.0.0|127.0.0.1)): JSON Parse Error |non-200 code: 422|
Raising alarm ForwardingError localhost:9997/cprfail/updateContext: error parsing reply from context provider: BadRequest |non-200 code: 422|


04. Check one forwarded requests in logs
========================================
Request forwarded (regId: REG1_ID): POST http://localhost:9997/cprfail/updateContext, request payload (542 bytes): {"contextElements":[{"id":"ConferenceRoom","isPattern":"false","type":"Room","attributes":[{"name":"lightstatus","type":"StructuredValue","value":{"x":1,"y":2}},{"name":"pressure","type":"StructuredValue","value":["a","b","c"]},{"name":"temperature","type":"Number","value":14,"metadatas":[{"name":"ID1","type":"Text","value":{"type":"Text","value":{"x":1,"y":2}}},{"name":"ID2","type":"Text","value":{"type":"Text","value":["a","b","c"]}},{"name":"ID3","type":"Text","value":{"type":"Text","value":"ThisIsID3"}}]}]}],"updateAction":"UPDATE"}, response payload (3188 bytes): {


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
