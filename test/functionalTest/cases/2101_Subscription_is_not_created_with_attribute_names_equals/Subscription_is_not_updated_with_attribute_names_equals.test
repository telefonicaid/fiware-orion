# Copyright 2021 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription_is_not_updated_with_attribute_names_equals

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v2/subscriptions, to create subscription.
# 02. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with the same name in attrs and see error
# 03. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with the same name in condition and see error
# 04. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with the same name in exceptAttrs and see error
# 05. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with the same name in metadata and see error
# 06. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in attrs and see no error
# 07. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in condition and see no error
# 08. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in exceptAttrs and see no error
# 09. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in metadata and see no error
#



echo '01. POST /v2/subscriptions, Create a subscription'
echo '================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:1028/notify"
    },
    "attrs": [
      "temperature"
    ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo



echo '02. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with same name in attrs and see error'
echo '==================================================================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "temperature",
      "temperature"
    ]
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo



echo '03. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with the same name in condition and see error'
echo '==========================================================================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure",
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "temperature"
    ]
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo



echo '04. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with same name in exceptAttrs and see error'
echo '========================================================================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "exceptAttrs" : [
          "temperature",
          "temperature"
        ]
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo



echo '05. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with the same name in metadata and see error'
echo '=========================================================================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "temperature"
    ],
    "metadata": [
      "temperature",
      "temperature"
    ]
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo



echo '06. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in attrs and see no error'
echo '==========================================================================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "temperature",
      "pressure"
    ]
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo



echo '07. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in condition and see no error'
echo '==============================================================================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure",
        "temperature"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "temperature"
    ]
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo



echo '08. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in exceptAttrs and see no error'
echo '================================================================================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "exceptAttrs" : [
          "temperature",
          "pressure"
        ]
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo



echo '09. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in metadata and see no error'
echo '=============================================================================================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "temperature"
    ],
    "metadata": [
      "temperature",
      "pressure"
    ]
  }
}'
orionCurl --url /v2/subscriptions/${subId} --payload "$payload" -X PATCH
echo
echo



--REGEXPECT--
01. POST /v2/subscriptions, Create a subscription
=================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with same name in attrs and see error
===================================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 77
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "duplicated item /temperature/ in array",
    "error": "BadRequest"
}


03. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with the same name in condition and see error
===========================================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 74
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "duplicated item /pressure/ in array",
    "error": "BadRequest"
}


04. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with same name in exceptAttrs and see error
=========================================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 77
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "duplicated item /temperature/ in array",
    "error": "BadRequest"
}


05. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with the same name in metadata and see error
==========================================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 77
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "duplicated item /temperature/ in array",
    "error": "BadRequest"
}


06. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in attrs and see no error
===========================================================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in condition and see no error
===============================================================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in exceptAttrs and see no error
=================================================================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. PATCH /v2/subscriptions/{subId}, to update subscription with N attributes with different name in metadata and see no error
==============================================================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
