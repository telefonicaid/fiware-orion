# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Update attribute type

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create E with A/T/V
# 02. Query and get A/T/V
# 03. Update only attribute type, i.e. A/T2/V
# 04. Query and get A/T2/V
# 05. Update only attribute value, i.e. A//V2
# 06. Query and get A/T2/V2
# 07. Update both attribute value and type, i.e. A/T3/V3
# 08. Query and get A/T3/V3

echo "01. Create E with A/T/V"
echo "========================================================================="
payload='{
  "attributes" : [
    {
      "name" : "A",
      "type" : "T",
      "value" : "V"
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/TEnt/id/E --payload "${payload}"
echo
echo

echo "02. Query and get A/T/V"
echo "========================================================================="
orionCurl --url /v1/contextEntities/type/TEnt/id/E/attributes/A
echo
echo

echo "03. Update only attribute type, i.e. A/T2/V"
echo "========================================================================="
payload='{
   "type" : "T2",
   "value" : "V"
}'
orionCurl --url /v1/contextEntities/type/TEnt/id/E/attributes/A --payload "${payload}" -X PUT
echo
echo

echo "04. Query and get A/T2/V"
echo "========================================================================="
orionCurl --url /v1/contextEntities/type/TEnt/id/E/attributes/A
echo
echo

echo "05. Update only attribute value, i.e. A//V2"
echo "========================================================================="
payload='{
   "value" : "V2"
}'
orionCurl --url /v1/contextEntities/type/TEnt/id/E/attributes/A --payload "${payload}" -X PUT
echo
echo

echo "06. Query and get A/T2/V2"
echo "========================================================================="
orionCurl --url /v1/contextEntities/type/TEnt/id/E/attributes/A
echo
echo

echo "07. Update both attribute value and type, i.e. A/T3/V3"
echo "========================================================================="
payload='{
   "type" : "T3",
   "value" : "V3"
}'
orionCurl --url /v1/contextEntities/type/TEnt/id/E/attributes/A --payload "${payload}" -X PUT
echo
echo

echo "08. Query and get A/T3/V3"
echo "========================================================================="
orionCurl --url /v1/contextEntities/type/TEnt/id/E/attributes/A
echo
echo

--REGEXPECT--
01. Create E with A/T/V
=========================================================================
HTTP/1.1 200 OK
Content-Length: 165
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "T",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E",
    "isPattern": "false",
    "type": "TEnt"
}


02. Query and get A/T/V
=========================================================================
HTTP/1.1 200 OK
Content-Length: 100
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A",
            "type": "T",
            "value": "V"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


03. Update only attribute type, i.e. A/T2/V
=========================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


04. Query and get A/T2/V
=========================================================================
HTTP/1.1 200 OK
Content-Length: 101
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A",
            "type": "T2",
            "value": "V"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


05. Update only attribute value, i.e. A//V2
=========================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


06. Query and get A/T2/V2
=========================================================================
HTTP/1.1 200 OK
Content-Length: 102
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A",
            "type": "T2",
            "value": "V2"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


07. Update both attribute value and type, i.e. A/T3/V3
=========================================================================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "code": "200",
    "reasonPhrase": "OK"
}


08. Query and get A/T3/V3
=========================================================================
HTTP/1.1 200 OK
Content-Length: 102
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attributes": [
        {
            "name": "A",
            "type": "T3",
            "value": "V3"
        }
    ],
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
