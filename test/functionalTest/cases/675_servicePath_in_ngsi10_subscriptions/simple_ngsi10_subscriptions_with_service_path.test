# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Simple NGSI10 subscriptions with service path

--SHELL-INIT--
dbInit CB
brokerStart CB 0
accumulatorStart

--SHELL--

#
# 01. Create entity E1 with Service Path /entity
# 02. Create entity E2 with Service Path /entity2
# 03. Make accumulator subscribe to all entities of Service Path /entity
# 04. Check that the accumulator received the initial notification of E1 only
#


echo "01. Create entity E1 with Service Path /entity"
echo "=============================================="
payload='{
  "attributes" : [
    {
      "name" : "A1",
      "type" : "AT",
      "value" : "V"
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T/id/E1 --payload "${payload}" --servicePath /entity --json
echo
echo


echo "02. Create entity E2 with Service Path /entity2"
echo "=============================================="
payload='{
  "attributes" : [
    {
      "name" : "A1",
      "type" : "AT",
      "value" : "V"
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T/id/E2 --payload "${payload}" --servicePath /entity2 --json
echo
echo


echo "03. Make accumulator subscribe to all entities of Service Path /entity"
echo "======================================================================"
payload='{
  "entities": [
    {
        "type": "T",
        "isPattern": "true",
        "id": "E.*"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "${payload}" --servicePath /entity --json
echo
echo


echo "04. Check that the accumulator received the initial notification of E1 only"
echo "==========================================================================="
sleep 1
curl localhost:${LISTENER_PORT}/dump -s -S
echo
echo


--REGEXPECT--
01. Create entity E1 with Service Path /entity
==============================================
HTTP/1.1 200 OK
Content-Length: 311
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1", 
                    "type": "AT", 
                    "value": ""
                }
            ], 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ], 
    "id": "E1", 
    "isPattern": "false", 
    "type": "T"
}


02. Create entity E2 with Service Path /entity2
===============================================
HTTP/1.1 200 OK
Content-Length: 311
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A1", 
                    "type": "AT", 
                    "value": ""
                }
            ], 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ], 
    "id": "E2", 
    "isPattern": "false", 
    "type": "T"
}


03. Make accumulator subscribe to all entities of Service Path /entity
======================================================================
HTTP/1.1 200 OK
Content-Length: 135
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M", 
        "subscriptionId": "REGEX([0-9a-f]{24})", 
        "throttling": "PT1S"
    }
}


04. Check that the accumulator received the initial notification of E1 only
===========================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /entity
Content-Length: 
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "E1",
        "attributes" : [
          {
            "name" : "A1",
            "type" : "AT",
            "value" : "V"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


--TEARDOWN---
brokerStop CB
accumulatorStop
# dbDrop CB
