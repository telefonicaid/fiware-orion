# Copyright 2023 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
notifyOnMetadataChange false (attribute with no value variant)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. POST /v2/entities, to create entity E1 with attr A1 and metadata M1
# 02. POST /v2/subscriptions, to create subscription for E1 with notifyOnMetadataChange=false
# 03. PATCH /v2/entities/E1/attrs, to update the value of metadata (and implicitely the attribute, which takes value null)
# 04. Dump the accumulator, see the notification with value null
# 05. PATCH /v2/entities/E1/attrs, to update the value of attribute
# 06. Dump the accumulator, see the notification when value of attribute changes
#


echo "01. POST /v2/entities, to create entity E1 with attr A1 and metadata M1"
echo "======================================================================="
payload='{
  "id": "E1",
  "type": "Thing",
  "A1": {
    "value": 26.5,
    "type": "Float",
    "metadata": {
      "M1": {
        "value": 0.77,
        "type": "Float"
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. POST /v2/subscriptions, to create subscription for E1 with notifyOnMetadataChange=false"
echo "==========================================================================================="
payload='{
  "description": "A subscription to get info about E1",
  "subject": {
    "entities": [
      {
        "id": "E1",
        "type": "Thing"
      }
    ],
    "condition": {
      "attrs": [
        "A1"
      ],
      "notifyOnMetadataChange": false
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "A1"
    ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "03. PATCH /v2/entities/E1/attrs, to update the value of metadata (and implicitely the attribute, which takes value null)"
echo "========================================================================================================================"
payload='{
  "A1": {
    "metadata": {
      "M1": {
        "value": 1.55,
        "type": "Float"
      }
    }
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X PATCH
echo
echo


echo "04. Dump the accumulator, see the notification with value null"
echo "=============================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "05. PATCH /v2/entities/E1/attrs, to update the value of attribute"
echo "================================================================="
payload='{
  "A1": {
    "value": 17.5,
    "type": "Float",
    "metadata": {
      "M1": {
        "value": 1.55,
        "type": "Float"
      }
    }
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X PATCH
echo
echo


echo "06. Dump the accumulator, see the notification when value of attribute changes"
echo "=============================================================================="
accumulatorDump
accumulatorReset
echo
echo



--REGEXPECT--
01. POST /v2/entities, to create entity E1 with attr A1 and metadata M1
=======================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



02. POST /v2/subscriptions, to create subscription for E1 with notifyOnMetadataChange=false
===========================================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



03. PATCH /v2/entities/E1/attrs, to update the value of metadata (and implicitely the attribute, which takes value null)
========================================================================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. Dump the accumulator, see the notification with value null
==============================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 163
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Float",
                        "value": 1.55
                    }
                },
                "type": "None",
                "value": null
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


05. PATCH /v2/entities/E1/attrs, to update the value of attribute
=================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. Dump the accumulator, see the notification when value of attribute changes
==============================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 164
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "Float",
                        "value": 1.55
                    }
                },
                "type": "Float",
                "value": 17.5
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
