# Copyright 2023 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
notfiyOnMetadataChange basic CRUD

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. POST /v2/subscriptions, to without notifyOnMetadataChange (defaults to true)
# 02. GET subscription and see notifyOnMetadataChange true
# 03. PATCH /v2/subscriptions, with notifyOnMetadataChange: false
# 04. GET subscription and see notifyOnMetadataChange false
# 05. PATCH /v2/subscriptions, with notifyOnMetadataChange: true
# 06. GET subscription and see notifyOnMetadataChange true
# 07. PATCH /v2/subscriptions, with notifyOnMetadataChange: false
# 08. GET subscription and see notifyOnMetadataChange false
# 09. PATCH /v2/subscriptions, witout notifyOnMetadataChange (defaults to true)
# 10. GET subscription and see notifyOnMetadataChange true
#


echo "01. POST /v2/subscriptions, to without notifyOnMetadataChange (defaults to true)"
echo "================================================================================"
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1",
        "type": "Thing"
      }
    ],
    "condition": {
      "attrs": [
        "A1"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "02. GET subscription and see notifyOnMetadataChange true"
echo "========================================================"
orionCurl --url /v2/subscriptions/$subId
echo
echo


echo "03. PATCH /v2/subscriptions, with notifyOnMetadataChange: false"
echo "==============================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1",
        "type": "Thing"
      }
    ],
    "condition": {
      "attrs": [
        "A1"
      ],
      "notifyOnMetadataChange": false
    }
  }
}'
orionCurl --url /v2/subscriptions/$subId -X PATCH --payload "$payload"
echo
echo


echo "04. GET subscription and see notifyOnMetadataChange false"
echo "========================================================="
orionCurl --url /v2/subscriptions/$subId
echo
echo


echo "05. PATCH /v2/subscriptions, with notifyOnMetadataChange: true"
echo "=============================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1",
        "type": "Thing"
      }
    ],
    "condition": {
      "attrs": [
        "A1"
      ],
      "notifyOnMetadataChange": true
    }
  }
}'
orionCurl --url /v2/subscriptions/$subId -X PATCH --payload "$payload"
echo
echo


echo "06. GET subscription and see notifyOnMetadataChange true"
echo "========================================================"
orionCurl --url /v2/subscriptions/$subId
echo
echo


echo "07. PATCH /v2/subscriptions, with notifyOnMetadataChange: false"
echo "==============================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1",
        "type": "Thing"
      }
    ],
    "condition": {
      "attrs": [
        "A1"
      ],
      "notifyOnMetadataChange": false
    }
  }
}'
orionCurl --url /v2/subscriptions/$subId -X PATCH --payload "$payload"
echo
echo


echo "08. GET subscription and see notifyOnMetadataChange false"
echo "========================================================="
orionCurl --url /v2/subscriptions/$subId
echo
echo


echo "09. PATCH /v2/subscriptions, witout notifyOnMetadataChange (defaults to true)"
echo "============================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1",
        "type": "Thing"
      }
    ],
    "condition": {
      "attrs": [
        "A1"
      ]
    }
  }
}'
orionCurl --url /v2/subscriptions/$subId -X PATCH --payload "$payload"
echo
echo


echo "10. GET subscription and see notifyOnMetadataChange true"
echo "========================================================"
orionCurl --url /v2/subscriptions/$subId
echo
echo


--REGEXPECT--
01. POST /v2/subscriptions, to without notifyOnMetadataChange (defaults to true)
================================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. GET subscription and see notifyOnMetadataChange true
========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 304

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "A1"
            ],
            "notifyOnMetadataChange": true
        },
        "entities": [
            {
                "id": "E1",
                "type": "Thing"
            }
        ]
    }
}


03. PATCH /v2/subscriptions, with notifyOnMetadataChange: false
===============================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



04. GET subscription and see notifyOnMetadataChange false
=========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 305

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "A1"
            ],
            "notifyOnMetadataChange": false
        },
        "entities": [
            {
                "id": "E1",
                "type": "Thing"
            }
        ]
    }
}


05. PATCH /v2/subscriptions, with notifyOnMetadataChange: true
==============================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. GET subscription and see notifyOnMetadataChange true
========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 304

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "A1"
            ],
            "notifyOnMetadataChange": true
        },
        "entities": [
            {
                "id": "E1",
                "type": "Thing"
            }
        ]
    }
}


07. PATCH /v2/subscriptions, with notifyOnMetadataChange: false
===============================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



08. GET subscription and see notifyOnMetadataChange false
=========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 305

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "A1"
            ],
            "notifyOnMetadataChange": false
        },
        "entities": [
            {
                "id": "E1",
                "type": "Thing"
            }
        ]
    }
}


09. PATCH /v2/subscriptions, witout notifyOnMetadataChange (defaults to true)
=============================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



10. GET subscription and see notifyOnMetadataChange true
========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 304

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "A1"
            ],
            "notifyOnMetadataChange": true
        },
        "entities": [
            {
                "id": "E1",
                "type": "Thing"
            }
        ]
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
