# Copyright 2017 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Q filter in subscription with null value of attribute

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription for entity E*, attribute 't' with a filter q=t==null
# 02. Create entity E1 with attr 't' == null
# 03. Make sure ONE notification has been sent
# 04. Modify E1::t to 4
# 05. Make sure no notification has been sent
# 06. Modify E1::t to null
# 07. Make sure ONE notification has been sent
# 08. Modify E1::t to the string 'null'
# 09. Make sure no notification has been sent
#

echo "01. Create subscription for entity E*, attribute 't' with a filter q=t==null"
echo "============================================================================"
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": "E.*"
      }
    ],
    "condition": {
      "attrs": [ "t" ],
      "expression": { "q": "t==null" }
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E1 with attr 't' == null"
echo "=========================================="
payload='{
  "id": "E1",
  "t": {
    "value": null
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Make sure ONE notification has been sent"
echo "============================================"
accumulatorDump
accumulatorReset
echo
echo


echo "04. Modify E1::t to 4"
echo "====================="
payload='{
  "t": {
    "value": 4
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "05. Make sure no notification has been sent"
echo "==========================================="
accumulatorDump
accumulatorReset
echo
echo


echo "06. Modify E1::t to null"
echo "========================"
payload='{
  "t": {
    "value": null
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "07. Make sure ONE notification has been sent"
echo "============================================"
accumulatorDump
accumulatorReset
echo
echo


echo "08. Modify E1::t to the string 'null'"
echo "====================================="
payload='{
  "t": {
    "value": "null"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "09. Make sure no notification has been sent"
echo "==========================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create subscription for entity E*, attribute 't' with a filter q=t==null
============================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E1 with attr 't' == null
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Make sure ONE notification has been sent
============================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "id": "E1",
            "t": {
                "metadata": {},
                "type": "None",
                "value": null
            },
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


04. Modify E1::t to 4
=====================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Make sure no notification has been sent
===========================================


06. Modify E1::t to null
========================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Make sure ONE notification has been sent
============================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "id": "E1",
            "t": {
                "metadata": {},
                "type": "None",
                "value": null
            },
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


08. Modify E1::t to the string 'null'
=====================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09. Make sure no notification has been sent
===========================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
