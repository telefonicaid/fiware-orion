# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Covered custom notifictions

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. Create covered custom subscriptions for E1 covering attributes A1 and A2
# 02. Create not covered custom subscriptions for E2
# 03. Create E1 with attribute A1=1
# 04. Dump & reset, see notifications A1=1 and A2=null in custom payload
# 05. Create E2 with attribute A1=1
# 06. Dump & reset, see notifications A1=1 and A2=<empty> in custom payload (invalid JSON)
#

echo "01. Create covered custom subscriptions for E1 covering attributes A1 and A2"
echo "============================================================================"
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1",
        "type": "T"
      }
    ]
  },
  "notification": {
    "covered": true,
    "attrs": [ "A1", "A2" ],
    "httpCustom": {
      "url":     "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "payload": "{ %22A1-value%22: ${A1}, %22A2-value%22: ${A2} }",
      "headers": {
        "content-type": "application/json%3B charset%3Dutf-8"
      }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create not covered custom subscriptions for E2"
echo "=================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E2",
        "type": "T"
      }
    ]
  },
  "notification": {
    "httpCustom": {
      "url":     "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "payload": "{ %22A1-value%22: ${A1}, %22A2-value%22: ${A2} }",
      "headers": {
        "content-type": "application/json%3B charset%3Dutf-8"
      }
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "03. Create E1 with attribute A1=1"
echo "================================="
payload='{
  "id": "E1",
  "type": "T",
  "A1": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. Dump & reset, see notifications A1=1 and A2=null in custom payload"
echo "======================================================================"
accumulatorDump
accumulatorReset
echo
echo


echo "05. Create E2 with attribute A1=1"
echo "================================="
payload='{
  "id": "E2",
  "type": "T",
  "A1": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "06. Dump & reset, see notifications A1=1 and A2=<empty> in custom payload (invalid JSON)"
echo "========================================================================================"
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create covered custom subscriptions for E1 covering attributes A1 and A2
============================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create not covered custom subscriptions for E2
==================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create E1 with attribute A1=1
=================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Dump & reset, see notifications A1=1 and A2=null in custom payload
======================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 35
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: custom
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{ "A1-value": 1, "A2-value": null }=======================================


05. Create E2 with attribute A1=1
=================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Dump & reset, see notifications A1=1 and A2=<empty> in custom payload (invalid JSON)
========================================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 31
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: custom
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{ "A1-value": 1, "A2-value":  }=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
