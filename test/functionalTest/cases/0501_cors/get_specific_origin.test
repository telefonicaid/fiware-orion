# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
CORS GET specific origin

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255 IPV4 -corsOrigin rivendel

--SHELL--
echo "01. Update/APPEND E1-T1-A1 (Access-Control-Allow-Origin header not included)"
echo "============================================================================"
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo

echo "02. Query E1-T1 with rivendel origin (Access-Control-Allow-Origin header included)"
echo "=================================================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1 -X GET --origin rivendel
echo
echo

echo "03. Query E1-T1 with mordor origin (Access-Control-Allow-Origin header not included)"
echo "===================================================================================="
orionCurl --url /v1/contextEntities/type/T1/id/E1 -X GET --origin mordor
echo
echo

echo "04. Update/UPDATE E1-T1-A1 with rivendel origin (Access-Control-Allow-Origin not included for POST)"
echo "==================================================================================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "2"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload" --origin rivendel
echo
echo

--REGEXPECT--
01. Update/APPEND E1-T1-A1 (Access-Control-Allow-Origin header not included)
============================================================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


02. Query E1-T1 with rivendel origin (Access-Control-Allow-Origin header included)
==================================================================================
HTTP/1.1 200 OK
Content-Length: 167
Access-Control-Expose-Headers: REGEX(.*)
Access-Control-Allow-Origin: rivendel
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A1",
                "type": "string",
                "value": "1"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


03. Query E1-T1 with mordor origin (Access-Control-Allow-Origin header not included)
====================================================================================
HTTP/1.1 200 OK
Content-Length: 167
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "A1",
                "type": "string",
                "value": "1"
            }
        ],
        "id": "E1",
        "isPattern": "false",
        "type": "T1"
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}


04. Update/UPDATE E1-T1-A1 with rivendel origin (Access-Control-Allow-Origin not included for POST)
===================================================================================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
