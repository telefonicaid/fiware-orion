# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET Subscriptions by id V2

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create 2 subscriptions
# 02. GET /v2/subscriptions/SUB_ID
# 03. GET /v2/subscriptions/SUB_ID2
#

echo "01. Create 2 subscriptions"
echo "=========================="
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom"
    },
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom"
    }
  ],
  "attributes": [
    "temperature",
    "occupancy",
    "lightstatus"
  ],
  "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
  "duration": "P5Y",
  "notifyConditions": [
    {
      "type": "ONCHANGE",
      "condValues": [
        "temperature",
        "timestamp"
      ]
    }
  ],
  "throttling": "PT5S"
}'
orionCurl --url /v1/subscribeContext --payload "${payload}"
SUB_ID=$(echo "$_response" | grep subscriptionId |  awk -F ':' '{gsub(/[ \t",]+/, "", $2); print $2}' )
echo
echo

payload='{
  "entities": [
    {
      "type": "Car",
      "isPattern": "false",
      "id": "MyCar"
    },
    {
      "type": "Room",
      "isPattern": "false",
      "id": "Garage"
    }
  ],
  "attributes": [
    "speed",
    "location"
  ],
  "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
  "duration": "P5Y",
  "notifyConditions": [
    {
      "type": "ONCHANGE",
      "condValues": [
        "speed"
      ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "${payload}"
SUB_ID2=$(echo "$_response" | grep subscriptionId |  awk -F ':' '{gsub(/[ \t",]+/, "", $2);print $2}' )
echo
echo


echo "02. GET /v2/subscriptions/$SUB_ID"
echo "============================================="
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "03. GET /v2/subscriptions/$SUB_ID2"
echo "=================================================="
orionCurl --url /v2/subscriptions/$SUB_ID2
echo
echo


--REGEXPECT--
01. Create 2 subscriptions
==========================
HTTP/1.1 200 OK
Content-Length: 104
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P5Y",
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT5S"
    }
}


HTTP/1.1 200 OK
Content-Length: 84
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P5Y",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}


02. GET /v2/subscriptions/REGEX([0-9a-f]{24})
=============================================
HTTP/1.1 200 OK
Content-Length: 427
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "expires": "REGEX(\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d.000Z)",
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [
            "temperature",
            "occupancy",
            "lightstatus"
        ],
        "attrsFormat": "legacy",
        "covered": false,
        "http": {
            "url": "http://127.0.0.1:REGEX(\d+)/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "temperature",
                "timestamp"
            ]
        },
        "entities": [
            {
                "id": "ConferenceRoom",
                "type": "Room"
            },
            {
                "id": "OfficeRoom",
                "type": "Room"
            }
        ]
    },
    "throttling": 5
}


03. GET /v2/subscriptions/REGEX([0-9a-f]{24})
==================================================
HTTP/1.1 200 OK
Content-Length: 359
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "expires": "REGEX(\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d.000Z)",
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [
            "speed",
            "location"
        ],
        "attrsFormat": "legacy",
        "covered": false,
        "http": {
            "url": "http://127.0.0.1:REGEX(\d+)/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [
                "speed"
            ]
        },
        "entities": [
            {
                "id": "MyCar",
                "type": "Car"
            },
            {
                "id": "Garage",
                "type": "Room"
            }
        ]
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
