# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Filtering out all metadata in subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255 IPv4 -subCacheIval 2
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create entity E1, attribute temperature, metadata TimeInstant
# 02. Create subscription with metadata filter a_md
# 03. Update entity E1, attribute temperature, metadata TimeInstant
# 04. Dump accumulator and check none of the two notifications have "TimeInstant" metadata
#


echo "01. Create entity E1, attribute temperature, metadata TimeInstant"
echo "================================================================="
payload='{
  "id": "E1",
  "type": "T",
  "temperature": {
    "value": 23,
    "type": "Float",
    "metadata": {
      "TimeInstant": {
        "type": "ISO8601",
        "value": "2018-09-12T16:14:00Z"
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create subscription with metadata filter a_md"
echo "================================================="
payload='{
        "subject": {
                "entities": [{
                        "id": "E1",
                        "type": "T"
                }]
        },
        "notification": {
                "http": {
                        "url": "http://localhost:'$LISTENER_PORT'/notify"
                },
                "metadata": [
                        "a_md"
                ]
        }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

# Sleep more than subCacheIval, to ensure cache is refresed
sleep 3


echo "03. Update entity E1, attribute temperature, metadata TimeInstant"
echo "================================================================="
payload='{
  "temperature": {
    "value": 24,
    "type": "Float",
        "metadata": {
          "TimeInstant": {
                "type": "ISO8601",
                "value": "2018-09-12T16:15:00Z"
          }
        }
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "04. Dump accumulator and check none of the two notifications have "TimeInstant" metadata"
echo "========================================================================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. Create entity E1, attribute temperature, metadata TimeInstant
=================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create subscription with metadata filter a_md
=================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Update entity E1, attribute temperature, metadata TimeInstant
=================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Dump accumulator and check none of the two notifications have TimeInstant metadata
========================================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 133
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "id": "E1",
            "temperature": {
                "metadata": {},
                "type": "Float",
                "value": 23
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 133
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "id": "E1",
            "temperature": {
                "metadata": {},
                "type": "Float",
                "value": 24
            },
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
