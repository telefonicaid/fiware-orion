# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Propagate Service-Path for Update and Query Requests

--SHELL-INIT--
dbInit CB
dbInit CP1

brokerStart CB  0
brokerStart CP1 0

--SHELL--

#
# 01. Update/APPEND E1/A1=W1-CP1 in CP1 with service-path /world/1
# 02. Update/APPEND E1/A2=W2-CP1 in CP1 with service-path /world/2
# 03. Register E1/A1 in CB with service-path /world/1, CP1 as provApp
# 04. Register E1/A2 in CB with service-path /world/2, CP1 as provApp
# 05. Update/UPDATE E1/A1=W1-CB in CB with service-path /world/1
# 06. Update/UPDATE E1/A2=W2-CB in CB with service-path /world/2
# 07. Query E1/* in CP1 with service-path /world/1 (response: A1=W1-CB)
# 08. Query E1/* in CP1 with service-path /world/2 (response: A2=W2-CB)
# 09. Query E1/* in CP1 with service-path /world/# (response: A1=W1-CB,A2=W2-CB)
# 10. Query E1/* in CP1 without service-path (response: A1=W1-CB,A2=W2-CB)
#


echo "01. Update/APPEND E1/A1=W1-CP1 in CP1 with service-path /world/1"
echo "================================================================"
payload='{
  "contextElements": [
    {
      "type": "T",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "W1-CP1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "${payload}" --port $CP1_PORT --servicePath /world/1
echo
echo


echo "02. Update/APPEND E1/A2=W2-CP1 in CP1 with service-path /world/2"
echo "================================================================"
payload='{
  "contextElements": [
    {
      "type": "T",
      "id":   "E1",
      "attributes": [
        {
          "name": "A2",
          "type": "string",
          "value": "W2-CP1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "${payload}" --port $CP1_PORT --servicePath /world/2
echo
echo


echo "03. Register E1/A1 in CB with service-path /world/1, CP1 as provApp"
echo "==================================================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "${payload}" --servicePath /world/1
echo
echo


echo "04. Register E1/A2 in CB with service-path /world/2, CP1 as provApp"
echo "==================================================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A2",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "${payload}" --servicePath /world/2
echo
echo


echo "05. Update/UPDATE E1/A1=W1-CB in CB with service-path /world/1"
echo "=============================================================="
payload='{
  "contextElements": [
    {
      "type": "T",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "W1-CB"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "${payload}" --servicePath /world/1
echo
echo


echo "06. Update/UPDATE E1/A2=W2-CB in CB with service-path /world/2"
echo "=============================================================="
payload='{
  "contextElements": [
    {
      "type": "T",
      "id":   "E1",
      "attributes": [
        {
          "name": "A2",
          "type": "string",
          "value": "W2-CB"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "${payload}" --servicePath /world/2
echo
echo


echo "07. Query E1/* in CP1 with service-path /world/1 (response: A1=W1-CB)"
echo "====================================================================="
payload='{
  "entities": [
    {
      "type": "T",
      "isPattern": "false",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}" --port $CP1_PORT --servicePath /world/1
echo
echo


echo "08. Query E1/* in CP1 with service-path /world/2 (response: A2=W2-CB)"
echo "====================================================================="
payload='{
  "entities": [
    {
      "type": "T",
      "isPattern": "false",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}" --port $CP1_PORT --servicePath /world/2
echo
echo


echo "09. Query E1/* in CP1 with service-path /world/# (response: A1=W1-CB,A2=W2-CB)"
echo "=============================================================================="
payload='{
  "entities": [
    {
      "type": "T",
      "isPattern": "false",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}" --port $CP1_PORT --servicePath /world/#
echo
echo


echo "10. Query E1/* in CP1 without service-path (response: A1=W1-CB,A2=W2-CB)"
echo "========================================================================"
payload='{
  "entities": [
    {
      "type": "T",
      "isPattern": "false",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}" --port $CP1_PORT
echo
echo


--REGEXPECT--
01. Update/APPEND E1/A1=W1-CP1 in CP1 with service-path /world/1
================================================================
HTTP/1.1 200 OK
Content-Length: 188
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


02. Update/APPEND E1/A2=W2-CP1 in CP1 with service-path /world/2
================================================================
HTTP/1.1 200 OK
Content-Length: 188
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Register E1/A1 in CB with service-path /world/1, CP1 as provApp
===================================================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


04. Register E1/A2 in CB with service-path /world/2, CP1 as provApp
===================================================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


05. Update/UPDATE E1/A1=W1-CB in CB with service-path /world/1
==============================================================
HTTP/1.1 200 OK
Content-Length: 188
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. Update/UPDATE E1/A2=W2-CB in CB with service-path /world/2
==============================================================
HTTP/1.1 200 OK
Content-Length: 188
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


07. Query E1/* in CP1 with service-path /world/1 (response: A1=W1-CB)
=====================================================================
HTTP/1.1 200 OK
Content-Length: 193
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "W1-CB"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


08. Query E1/* in CP1 with service-path /world/2 (response: A2=W2-CB)
=====================================================================
HTTP/1.1 200 OK
Content-Length: 193
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "string",
                        "value": "W2-CB"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


09. Query E1/* in CP1 with service-path /world/# (response: A1=W1-CB,A2=W2-CB)
==============================================================================
HTTP/1.1 200 OK
Content-Length: 364
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "W1-CB"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "string",
                        "value": "W2-CB"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


10. Query E1/* in CP1 without service-path (response: A1=W1-CB,A2=W2-CB)
========================================================================
HTTP/1.1 200 OK
Content-Length: 364
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": "W1-CB"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        },
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "string",
                        "value": "W2-CB"
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
