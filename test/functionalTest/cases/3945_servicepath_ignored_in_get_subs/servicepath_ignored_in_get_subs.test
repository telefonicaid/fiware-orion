# Copyright 2021 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Service path is not ignored in GET subscriptions operations

--SHELL-INIT--
dbInit CB
brokerStart CB 0 IPV4

--SHELL--

#
# 01. Create sub1 in service path /foo
# 02. Create sub2 in service path /bar
# 03. GET /v2/subscriptions in service path /foo, get sub1
# 04. GET /v2/subscriptions/reg1 in service path /foo, get sub2
# 05. GET /v2/subscriptions/reg2 in service path /foo, get nothing
#

echo "01. Create sub1 in service path /foo"
echo "===================================="
payload='{
  "description": "Sub1",
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ]
   },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload" --servicePath /foo
SUB1_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "02. Create sub2 in service path /foo"
echo "===================================="
payload='{
  "description": "Sub2",
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ]
   },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload" --servicePath /bar
SUB2_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "03. GET /v2/subscriptions in service path /foo, get sub1"
echo "========================================================"
orionCurl --url /v2/subscriptions --servicePath /foo
echo
echo


echo "04. GET /v2/subscriptions/sub1 in service path /foo, get sub1"
echo "============================================================="
orionCurl --url /v2/subscriptions/$SUB1_ID --servicePath /foo
echo
echo


echo "05. GET /v2/subscriptions/sub2 in service path /foo, get nothing"
echo "================================================================"
orionCurl --url /v2/subscriptions/$SUB2_ID --servicePath /foo
echo
echo


--REGEXPECT--
01. Create sub1 in service path /foo
====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create sub2 in service path /foo
====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. GET /v2/subscriptions in service path /foo, get sub1
========================================================
HTTP/1.1 200 OK
Content-Length: 285
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "description": "Sub1",
        "id": "REGEX([0-9a-f\-]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "covered": false,
            "http": {
                "url": "http://localhost:9997/notify"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": []
            },
            "entities": [
                {
                    "idPattern": ".*"
                }
            ]
        }
    }
]


04. GET /v2/subscriptions/sub1 in service path /foo, get sub1
=============================================================
HTTP/1.1 200 OK
Content-Length: 283
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Sub1",
    "id": "REGEX([0-9a-f\-]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "http": {
            "url": "http://localhost:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "idPattern": ".*"
            }
        ]
    }
}


05. GET /v2/subscriptions/sub2 in service path /foo, get nothing
================================================================
HTTP/1.1 404 Not Found
Content-Length: 92
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "The requested subscription has not been found. Check id",
    "error": "NotFound"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
