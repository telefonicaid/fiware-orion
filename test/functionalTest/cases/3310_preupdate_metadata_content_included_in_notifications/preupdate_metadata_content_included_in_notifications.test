# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Pre-update metadata content included in notifications

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 02. Create subscription
# 01. Create entity E with atribute A with metadata MDA=1 (triggers notif)
# 03. Update attribute A with MDB=2 with overrideMetadata (triggers notif)
# 04. Update attribute A without metadata with overrideMetadata (triggers notif)
# 05. Create new entity E2 with attribute A with metadata MDC=3 (triggers notif)
# 06. Dump accumulator and see four notification: E-A-MDA=1, E-A-MDB=2, E-A-<no-metadata>, E2-A-MDC=3
#


echo "01. Create subscription"
echo "======================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": "E.*"
      }
    ],
    "condition": {
      "attrs": [ "A" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E with atribute A with metadata MDA=1 (triggers notif)"
echo "========================================================================"
payload='{
  "id": "E",
  "type": "T",
  "A":{
    "type": "Text",
    "value": "foo",
    "metadata": {
      "MDA": {
        "type": "Number",
        "value": 1
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. Update attribute A with MDB=2 with overrideMetadata (triggers notif)"
echo "========================================================================"
payload='{
  "A":{
    "type": "Text",
    "value": "bar",
    "metadata": {
      "MDB": {
        "type": "Number",
        "value": 2
      }
    }
  }
}'
orionCurl --url '/v2/entities/E/attrs?options=overrideMetadata' -X PATCH --payload "$payload"
echo
echo


echo "04. Update attribute A without metadata with overrideMetadata (triggers notif)"
echo "=============================================================================="
payload='{
  "A":{
    "type": "Text",
    "value": "bar"
  }
}'
orionCurl --url '/v2/entities/E/attrs?options=overrideMetadata' -X PATCH --payload "$payload"
echo
echo


echo "05. Create new entity E2 with attribute A with metadata MDC=3 (triggers notif)"
echo "=============================================================================="
payload='{
  "id": "E2",
  "type": "T",
  "A":{
    "type": "Text",
    "value": "zzz",
    "metadata": {
      "MDC": {
        "type": "Number",
        "value": 3
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "06. Dump accumulator and see four notification: E-A-MDA=1, E-A-MDB=2, E-A-<no-metadata>, E2-A-MDC=3"
echo "==================================================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription
=======================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E with atribute A with metadata MDA=1 (triggers notif)
========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Update attribute A with MDB=2 with overrideMetadata (triggers notif)
========================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Update attribute A without metadata with overrideMetadata (triggers notif)
==============================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create new entity E2 with attribute A with metadata MDC=3 (triggers notif)
==============================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Dump accumulator and see four notification: E-A-MDA=1, E-A-MDB=2, E-A-<no-metadata>, E2-A-MDC=3
===================================================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 157
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {
                    "MDA": {
                        "type": "Number",
                        "value": 1
                    }
                },
                "type": "Text",
                "value": "foo"
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 157
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {
                    "MDB": {
                        "type": "Number",
                        "value": 2
                    }
                },
                "type": "Text",
                "value": "bar"
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 124
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {},
                "type": "Text",
                "value": "bar"
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 158
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A": {
                "metadata": {
                    "MDC": {
                        "type": "Number",
                        "value": 3
                    }
                },
                "type": "Text",
                "value": "zzz"
            },
            "id": "E2",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
