# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
PUT Attribute Value do not change type to 'none'

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. POST /v2/entities creating room_1
# 02. PUT /v2/entities/room_1/attrs/temperature_0/value
# 03. GET /v2/entities/room_1 (type is not "none")

echo '01. POST /v2/entities creating room'
echo '==================================='
payload=' {
"temperature_2": { "type": "celsius",  "value": "34",  "metadata": { "very_hot_1": {"type": "alarm", "value": "hot"},  "very_hot_0": {"type": "alarm", "value": "hot"}}},
"temperature_0": {
       "type": "celsius",
       "value": "34",
       "metadata": {
              "very_hot_1": {"type": "alarm", "value": "hot"},
              "very_hot_0": {"type": "alarm", "value": "hot"}}},
 "temperature_1": { "type": "celsius", "value": "34", "metadata": { "very_hot_1": {"type": "alarm", "value": "hot"}, "very_hot_0": {"type": "alarm", "value": "hot"}}},
 "type": "house",
 "id": "room_1"
}
'
orionCurl --url '/v2/entities' --payload "$payload"
echo
echo


echo '02. PUT /v2/entities/room_1/attrs/temperature_0/value'
echo '====================================================='
payload='true'
orionCurl --url /v2/entities/room_1/attrs/temperature_0/value --payload "$payload" --in text -X PUT
echo
echo


echo '03. GET /v2/entities/room_1 (type is not "none")'
echo '================================================'
orionCurl --url /v2/entities/room_1
echo
echo


--REGEXPECT--
01. POST /v2/entities creating room
===================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/room_1?type=house
Content-Length: 0



02. PUT /v2/entities/room_1/attrs/temperature_0/value
=====================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



03. GET /v2/entities/room_1 (type is not "none")
================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 477

{
    "id": "room_1",
    "temperature_0": {
        "metadata": {
            "very_hot_0": {
                "type": "alarm",
                "value": "hot"
            },
            "very_hot_1": {
                "type": "alarm",
                "value": "hot"
            }
        },
        "type": "celsius",
        "value": true
    },
    "temperature_1": {
        "metadata": {
            "very_hot_0": {
                "type": "alarm",
                "value": "hot"
            },
            "very_hot_1": {
                "type": "alarm",
                "value": "hot"
            }
        },
        "type": "celsius",
        "value": "34"
    },
    "temperature_2": {
        "metadata": {
            "very_hot_0": {
                "type": "alarm",
                "value": "hot"
            },
            "very_hot_1": {
                "type": "alarm",
                "value": "hot"
            }
        },
        "type": "celsius",
        "value": "34"
    },
    "type": "house"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
