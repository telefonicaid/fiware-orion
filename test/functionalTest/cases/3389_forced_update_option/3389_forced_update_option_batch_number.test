# Copyright 2019 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Force update for NGSIv2 POST /v2/op/update, POST /v2/subscriptions, Dump and reset accumulator, POST /v2/subscriptions, Dump and reset accumulator, POST /v2/op/update?options=forcedUpdate, Dump and reset accumulator.

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print localhost $LISTENER_PORT

--SHELL--

#
# 01. POST /v2/subscriptions, to create subscription for Room1.
# 02. POST /v2/subscriptions, to create subscription for Room2.
# 03. POST /v2/op/update, to create Room1 and Room2 with temperature and pressure.
# 04. Dump and reset accumulator, see Room1 and Room2 notifications.
# 05. POST /v2/op/update without forcedUpdate, to update Room1 and Room2 with the same values.
# 06. Dump and reset accumulator, see no notification (as there was no actual update).
# 07. POST /v2/op/update?options=forcedUpdate (actionType = update), to update Room1 and Room1 with same values.
# 08. Dump and reset accumulator, see notification.
# 09. POST /v2/op/update?options=forcedUpdate (actionType = append), to update Room1 and Room2 with same values.
# 10. Dump and reset accumulator, see notification.
#


echo '01. POST /v2/subscriptions, to create subscription for Room1.'
echo '============================================================='
payload='{
  "description": "A subscription to get info about Room1",
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "temperature"
    ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo '02. POST /v2/subscriptions, to create subscription for Room2.'
echo '============================================================='
payload='{
  "description": "A subscription to get info about Room2",
  "subject": {
    "entities": [
      {
        "id": "Room2",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "temperature"
    ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo '03. POST /v2/op/update, to create Room1 and Room2 with temperature and pressure.'
echo '================================================================================'
payload='{
  "actionType": "append",
  "entities": [
    {
      "type": "Room",
      "id": "Room1",
      "temperature": {
        "value": 21.2,
        "type": "Float"
      },
      "pressure": {
        "value": 722,
        "type": "Integer"
      }
    },
    {
      "type": "Room",
      "id": "Room2",
      "temperature": {
        "value": 31.8,
        "type": "Float"
      },
      "pressure": {
        "value": 712,
        "type": "Integer"
      }
    }
  ]
}'
orionCurl --url /v2/op/update --payload "$payload"
echo
echo


echo '04. Dump and reset accumulator, see Room1 and Room2 notifications.'
echo '=================================================================='
accumulatorDump
accumulatorReset
echo
echo


echo '05. POST /v2/op/update without forcedUpdate, to update Room1 and Room2 with the same values.'
echo '============================================================================================'
payload='{
  "actionType": "update",
  "entities": [
    {
      "type": "Room",
      "id": "Room1",
      "temperature": {
        "value": 21.2,
        "type": "Float"
      },
      "pressure": {
        "value": 722,
        "type": "Integer"
      }
    },
    {
      "type": "Room",
      "id": "Room2",
      "temperature": {
        "value": 31.8,
        "type": "Float"
      },
      "pressure": {
        "value": 712,
        "type": "Integer"
      }
    }
  ]
}'
orionCurl --url /v2/op/update --payload "$payload"
echo
echo


echo '06. Dump and reset accumulator, see no notification (as there was no actual update).'
echo '===================================================================================='
accumulatorDump
accumulatorReset
echo
echo


echo '07. POST /v2/op/update?options=forcedUpdate (actionType = update), to update Room1 and Room2 with same values.'
echo '=============================================================================================================='
payload='{
  "actionType": "update",
  "entities": [
    {
      "type": "Room",
      "id": "Room1",
      "temperature": {
        "value": 21.2,
        "type": "Float"
      },
      "pressure": {
        "value": 722,
        "type": "Integer"
      }
    },
    {
      "type": "Room",
      "id": "Room2",
      "temperature": {
        "value": 31.8,
        "type": "Float"
      },
      "pressure": {
        "value": 712,
        "type": "Integer"
      }
    }
  ]
}'
orionCurl --url /v2/op/update?options=forcedUpdate --payload "$payload"
echo
echo


echo '08. Dump and reset accumulator, see notification.'
echo '================================================='
accumulatorDump
accumulatorReset
echo
echo


echo '09. POST /v2/op/update?options=forcedUpdate (actionType = append), to update Room1 and Room2 with same values.'
echo '=============================================================================================================='
payload='{
  "actionType": "append",
  "entities": [
    {
      "type": "Room",
      "id": "Room1",
      "temperature": {
        "value": 21.2,
        "type": "Float"
      },
      "pressure": {
        "value": 722,
        "type": "Integer"
      }
    },
    {
      "type": "Room",
      "id": "Room2",
      "temperature": {
        "value": 31.8,
        "type": "Float"
      },
      "pressure": {
        "value": 712,
        "type": "Integer"
      }
    }
  ]
}'
orionCurl --url /v2/op/update?options=forcedUpdate --payload "$payload"
echo
echo


echo '10. Dump and reset accumulator, see notification.'
echo '================================================='
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. POST /v2/subscriptions, to create subscription for Room1.
=============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. POST /v2/subscriptions, to create subscription for Room2.
=============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. POST /v2/op/update, to create Room1 and Room2 with temperature and pressure.
================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Dump and reset accumulator, see Room1 and Room2 notifications.
==================================================================
#SORT_START
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 141
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "Room1",
            "temperature": {
                "metadata": {},
                "type": "Float",
                "value": 21.2
            },
            "type": "Room"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 141
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "Room2",
            "temperature": {
                "metadata": {},
                "type": "Float",
                "value": 31.8
            },
            "type": "Room"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
#SORT_END


05. POST /v2/op/update without forcedUpdate, to update Room1 and Room2 with the same values.
============================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Dump and reset accumulator, see no notification (as there was no actual update).
====================================================================================


07. POST /v2/op/update?options=forcedUpdate (actionType = update), to update Room1 and Room2 with same values.
==============================================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Dump and reset accumulator, see notification.
#SORT_START
=================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 141
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "Room1",
            "temperature": {
                "metadata": {},
                "type": "Float",
                "value": 21.2
            },
            "type": "Room"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 141
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "Room2",
            "temperature": {
                "metadata": {},
                "type": "Float",
                "value": 31.8
            },
            "type": "Room"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
#SORT_END


09. POST /v2/op/update?options=forcedUpdate (actionType = append), to update Room1 and Room2 with same values.
==============================================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



10. Dump and reset accumulator, see notification.
#SORT_START
=================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 141
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "Room1",
            "temperature": {
                "metadata": {},
                "type": "Float",
                "value": 21.2
            },
            "type": "Room"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 141
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[12])

{
    "data": [
        {
            "id": "Room2",
            "temperature": {
                "metadata": {},
                "type": "Float",
                "value": 31.8
            },
            "type": "Room"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
#SORT_END


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
