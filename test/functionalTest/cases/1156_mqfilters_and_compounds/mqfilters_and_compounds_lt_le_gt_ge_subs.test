# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
String filters for compound values of metadata: LT/LE/GT/GE in subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# FIXME P5: Only tests for positive outcome (notification) have been implemented.
#           Also, each operator is tested, but only for *one* data type
#
# 01. Integer/GT: Create subscription 1 for mq=A1.M1.i>9
# 02. Float/LT: Create subscription 2 for mq=A1.M1.f<4.0
# 03. String/LE: Create subscription 3 for mq=A1.M1.s<=test_string
# 04. String/GE: Create subscription 4 for mq=A1.M1.s>=fest_string
# 05. Create E1 with A1 with metadata M1 with compound value containing String, Integer and Float
# 06. Dump and reset accumulator, see 4 notifications
#

echo "01. Integer/GT: Create subscription 1 for mq=A1.M1.i>9"
echo "======================================================"
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "mq": "A1.M1.i==10"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "02. Float/LT: Create subscription 2 for mq=A1.M1.f<4.0"
echo "======================================================"
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "mq": "A1.M1.f<4.0"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "03. String/LE: Create subscription 3 for mq=A1.M1.s<=test_string"
echo "================================================================"
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "mq": "A1.M1.s<=test_string"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "04. String/GE: Create subscription 4 for mq=A1.M1.s>=fest_string"
echo "================================================================"
payload='{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*"
            }
        ],
        "condition": {
            "attrs": [ ],
            "expression": {
               "mq": "A1.M1.s>=fest_string"
            }
         }
    },
    "notification": {
        "http": { "url": "http://localhost:'$LISTENER_PORT'/notify" },
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "${payload}"
echo
echo


echo "05. Create E1 with A1 with metadata M1 with compound value containing String, Integer and Float"
echo "==============================================================================================="
payload='{
  "id": "E1",
  "A1": {
    "value": "modified",
    "metadata": {
      "M1": {
        "value": {
          "i": 10,
          "f": 3.14,
          "s": "test_string",
          "modified": true
        }
       }
    }
  }
}'
orionCurl --url /v2/entities --payload "${payload}"
echo
echo



echo "06. Dump and reset accumulator, see 4 notifications"
echo "==================================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Integer/GT: Create subscription 1 for mq=A1.M1.i>9
======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Float/LT: Create subscription 2 for mq=A1.M1.f<4.0
======================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. String/LE: Create subscription 3 for mq=A1.M1.s<=test_string
================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. String/GE: Create subscription 4 for mq=A1.M1.s>=fest_string
================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Create E1 with A1 with metadata M1 with compound value containing String, Integer and Float
===============================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Dump and reset accumulator, see 4 notifications
===================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 226
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234])

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "StructuredValue",
                        "value": {
                            "f": 3.14,
                            "i": 10,
                            "modified": true,
                            "s": "test_string"
                        }
                    }
                },
                "type": "Text",
                "value": "modified"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 226
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234])

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "StructuredValue",
                        "value": {
                            "f": 3.14,
                            "i": 10,
                            "modified": true,
                            "s": "test_string"
                        }
                    }
                },
                "type": "Text",
                "value": "modified"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 226
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234])

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "StructuredValue",
                        "value": {
                            "f": 3.14,
                            "i": 10,
                            "modified": true,
                            "s": "test_string"
                        }
                    }
                },
                "type": "Text",
                "value": "modified"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 226
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}; cbnotif=[1234])

{
    "data": [
        {
            "A1": {
                "metadata": {
                    "M1": {
                        "type": "StructuredValue",
                        "value": {
                            "f": 3.14,
                            "i": 10,
                            "modified": true,
                            "s": "test_string"
                        }
                    }
                },
                "type": "Text",
                "value": "modified"
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN---
brokerStop CB
accumulatorStop
dbDrop CB
