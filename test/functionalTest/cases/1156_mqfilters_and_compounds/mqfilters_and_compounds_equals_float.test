# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
String filters for compound values of metadata: equality of float

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1 with A1 with metadata M1 with compound value containing all JSON types
#
# 02. Equal to Same Float: GET /v2/entities?mq=A1.M1.f:3.14, see E1
# 03. Equal to Same Float: GET /v2/entities?mq=A1.M1.f==3.14, see E1
# 04. Equal to Different Float: GET /v2/entities?mq=A1.M1.f:3.15, see nothing
# 05. Equal to Different Float: GET /v2/entities?mq=A1.M1.f==3.15, see nothing
# 06. Not Equal to Same Float: GET /v2/entities?mq=A1.M1.f!=3.14, see nothing
# 07. Not Equal to Different Float: GET /v2/entities?mq=A1.M1.f!=3.15, see E1
# 08. Equal to Incorrect Float-Range: GET /v2/entities?mq=A1.M1.f:3.16..4.16, see nothing
# 09. Equal to Correct Float-Range: GET /v2/entities?mq=A1.M1.f:2.16..4.16, see E1
# 10. Not Equal to Incorrect Float-Range: GET /v2/entities?mq=A1.M1.f!=3.16..4.16, see E1
# 11. Not Equal to Correct Float-Range: GET /v2/entities?mq=A1.M1.f!=2.16..4.16, see nothing
# 12. Equal to Incorrect Float-List: GET /v2/entities?mq=A1.M1.f:3.11,3.12,3.13, see nothing
# 13. Equal to Correct Float-List: GET /v2/entities?mq=A1.M1.f:3.12,3.13,3.14, see E1
# 14. Not Equal to Incorrect Float-List: GET /v2/entities?mq=A1.M1.f!=3.11,3.12,3.13, see E1
# 15. Not Equal to Correct Float-List: GET /v2/entities?mq=A1.M1.f!=3.12,3.13,3.14, see nothing
#


echo "01. Create E1 with A1 with metadata M1 with compound value containing all JSON types"
echo "===================================================================================="
payload='{
  "id": "E1",
  "A1": {
    "value": "not interesting",
    "metadata": {
      "M1": {
        "value": {
          "i": 10,
          "f": 3.14,
          "s": "test_string",
          "T": true,
          "F": false,
          "N": null,
          "D": "2016-07-22T10:42:42.000Z"
        }
      }
    }
  },
  "A2": { "value": 22 }
}'
orionCurl --url /v2/entities --payload "${payload}"
echo
echo


echo "02. Equal to Same Float: GET /v2/entities?mq=A1.M1.f:3.14, see E1"
echo "================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f:3.14'
echo
echo


echo "03. Equal to Same Float: GET /v2/entities?mq=A1.M1.f==3.14, see E1"
echo "=================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f==3.14'
echo
echo


echo "04. Equal to Different Float: GET /v2/entities?mq=A1.M1.f:3.15, see nothing"
echo "==========================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f:3.15'
echo
echo


echo "05. Equal to Different Float: GET /v2/entities?mq=A1.M1.f==3.15, see nothing"
echo "============================================================================"
orionCurl --url '/v2/entities?mq=A1.M1.f==3.15'
echo
echo


echo "06. Not Equal to Same Float: GET /v2/entities?mq=A1.M1.f!=3.14, see nothing"
echo "==========================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f!=3.14'
echo
echo


echo "07. Not Equal to Different Float: GET /v2/entities?mq=A1.M1.f!=3.15, see E1"
echo "==========================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f!=3.15'
echo
echo


echo "08. Equal to Incorrect Float-Range: GET /v2/entities?mq=A1.M1.f:3.16..4.16, see nothing"
echo "======================================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f:3.16..4.16'
echo
echo


echo "09. Equal to Correct Float-Range: GET /v2/entities?mq=A1.M1.f:2.16..4.16, see E1"
echo "================================================================================"
orionCurl --url '/v2/entities?mq=A1.M1.f:2.16..4.16'
echo
echo


echo "10. Not Equal to Incorrect Float-Range: GET /v2/entities?mq=A1.M1.f!=3.16..4.16, see E1"
echo "======================================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f!=3.16..4.16'
echo
echo


echo "11. Not Equal to Correct Float-Range: GET /v2/entities?mq=A1.M1.f!=2.16..4.16, see nothing"
echo "=========================================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f!=2.16..4.16'
echo
echo


echo "12. Equal to Incorrect Float-List: GET /v2/entities?mq=A1.M1.f:3.11,3.12,3.13, see nothing"
echo "=========================================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f:3.11,3.12,3.13'
echo
echo


echo "13. Equal to Correct Float-List: GET /v2/entities?mq=A1.M1.f:3.12,3.13,3.14, see E1"
echo "==================================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f:3.12,3.13,3.14'
echo
echo


echo "14. Not Equal to Incorrect Float-List: GET /v2/entities?mq=A1.M1.f!=3.11,3.12,3.13, see E1"
echo "=========================================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f!=3.11,3.12,3.13'
echo
echo


echo "15. Not Equal to Correct Float-List: GET /v2/entities?mq=A1.M1.f!=3.12,3.13,3.14, see nothing"
echo "============================================================================================="
orionCurl --url '/v2/entities?mq=A1.M1.f!=3.12,3.13,3.14'
echo
echo


--REGEXPECT--
01. Create E1 with A1 with metadata M1 with compound value containing all JSON types
====================================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



02. Equal to Same Float: GET /v2/entities?mq=A1.M1.f:3.14, see E1
=================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 271

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": {
                        "D": "2016-07-22T10:42:42.000Z",
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            },
            "type": "Text",
            "value": "not interesting"
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


03. Equal to Same Float: GET /v2/entities?mq=A1.M1.f==3.14, see E1
==================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 271

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": {
                        "D": "2016-07-22T10:42:42.000Z",
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            },
            "type": "Text",
            "value": "not interesting"
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


04. Equal to Different Float: GET /v2/entities?mq=A1.M1.f:3.15, see nothing
===========================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


05. Equal to Different Float: GET /v2/entities?mq=A1.M1.f==3.15, see nothing
============================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


06. Not Equal to Same Float: GET /v2/entities?mq=A1.M1.f!=3.14, see nothing
===========================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


07. Not Equal to Different Float: GET /v2/entities?mq=A1.M1.f!=3.15, see E1
===========================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 271

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": {
                        "D": "2016-07-22T10:42:42.000Z",
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            },
            "type": "Text",
            "value": "not interesting"
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


08. Equal to Incorrect Float-Range: GET /v2/entities?mq=A1.M1.f:3.16..4.16, see nothing
=======================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


09. Equal to Correct Float-Range: GET /v2/entities?mq=A1.M1.f:2.16..4.16, see E1
================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 271

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": {
                        "D": "2016-07-22T10:42:42.000Z",
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            },
            "type": "Text",
            "value": "not interesting"
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


10. Not Equal to Incorrect Float-Range: GET /v2/entities?mq=A1.M1.f!=3.16..4.16, see E1
=======================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 271

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": {
                        "D": "2016-07-22T10:42:42.000Z",
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            },
            "type": "Text",
            "value": "not interesting"
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


11. Not Equal to Correct Float-Range: GET /v2/entities?mq=A1.M1.f!=2.16..4.16, see nothing
==========================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


12. Equal to Incorrect Float-List: GET /v2/entities?mq=A1.M1.f:3.11,3.12,3.13, see nothing
==========================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


13. Equal to Correct Float-List: GET /v2/entities?mq=A1.M1.f:3.12,3.13,3.14, see E1
===================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 271

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": {
                        "D": "2016-07-22T10:42:42.000Z",
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            },
            "type": "Text",
            "value": "not interesting"
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


14. Not Equal to Incorrect Float-List: GET /v2/entities?mq=A1.M1.f!=3.11,3.12,3.13, see E1
==========================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 271

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": {
                        "D": "2016-07-22T10:42:42.000Z",
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            },
            "type": "Text",
            "value": "not interesting"
        },
        "A2": {
            "metadata": {},
            "type": "Number",
            "value": 22
        },
        "id": "E1",
        "type": "Thing"
    }
]


15. Not Equal to Correct Float-List: GET /v2/entities?mq=A1.M1.f!=3.12,3.13,3.14, see nothing
=============================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
