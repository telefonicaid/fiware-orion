# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
NGSI9 Convenience Subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
# 1. Create a subscription
echo "1: ++++++++++++++++++++"
url="/v1/registry/contextAvailabilitySubscriptions"
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom"
    },
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom"
    }
  ],
  "attributes": [
    "temperature",
    "occupancy",
    "lightstatus"
  ],
  "reference": "http://10.1.1.1:80/test/interfaceNotification",
  "duration": "PT1M"
}'
orionCurl --url "$url" --payload "$payload"

SUB_ID=$(echo "$_response" | grep subscriptionId | awk -F\" '{ print $4}')

# 2. Update the subscription
echo "2: ++++++++++++++++++++"
url="/v1/registry/contextAvailabilitySubscriptions/$SUB_ID"
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom"
    }
  ],
  "attributes": [
    "temperature"
  ],
  "duration": "P1Y",
  "subscriptionId": "'$SUB_ID'"
}'
orionCurl --url "$url" --payload "$payload" -X "PUT"

# 3. Delete the subscription
echo "3: ++++++++++++++++++++"
orionCurl --url "/v1/registry/contextAvailabilitySubscriptions/$SUB_ID" -X "DELETE"

# 4. Bad verb
echo "4: ++++++++++++++++++++"
orionCurl --url "/v1/registry/contextAvailabilitySubscriptions/$SUB_ID" -X "DELETE2"

echo "5: ++++++++++++++++++++"
--REGEXPECT--
1: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 63
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "PT1M",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
2: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1Y",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
3: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 93
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
4: ++++++++++++++++++++
HTTP/1.1 405 Method Not Allowed
Content-Length: 0
Allow: PUT, DELETE
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

5: ++++++++++++++++++++
--TEARDOWN--
brokerStop CB
dbDrop CB
