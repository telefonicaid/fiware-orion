# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Simple test of Fiware Correlator inheritance and invention

--SHELL-INIT--
dbInit CB
brokerStart CB 0

--SHELL--

#
# 01. version request without correlator, see new correlator in response
# 02. version request with correlator, see same correlator in response
#

echo "01. version request without correlator, see new correlator in response"
echo "======================================================================"
orionCurl --url /version --noPayloadCheck
echo
echo


echo "02. version request with correlator, see same correlator in response"
echo "===================================================================="
orionCurl --url /version --noPayloadCheck --header "Fiware-Correlator: OLD_CORRELATOR"
echo
echo


--REGEXPECT--
01. version request without correlator, see new correlator in response
======================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(\d+)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
"orion" : {
  "version" : "REGEX(.*)",
  "uptime" : "REGEX(.*)",
  "git_hash" : "REGEX(([0-9a-f]{40}|nogitversion))",
  "compile_time" : "REGEX(.*)",
  "compiled_by" : "REGEX(.*)",
  "compiled_in" : "REGEX(.*)",
  "release_date" : "REGEX(.*)",
  "machine" : "REGEX(.*)",
  "doc" : "REGEX(.*)",
  "libversions": {
     "boost": "REGEX(.*)",
     "libcurl": "REGEX(.*)",
     "libmosquitto": "REGEX(.*)",
     "libmicrohttpd": "REGEX(.*)",
     "openssl": "REGEX(.*)",
     "rapidjson": "REGEX(.*)",
     "mongoc": "REGEX(.*)",
     "bson": "REGEX(.*)"
  }
}
}



02. version request with correlator, see same correlator in response
====================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(\d+)
Content-Type: application/json
Fiware-Correlator: OLD_CORRELATOR
Date: REGEX(.*)

{
"orion" : {
  "version" : "REGEX(.*)",
  "uptime" : "REGEX(.*)",
  "git_hash" : "REGEX(([0-9a-f]{40}|nogitversion))",
  "compile_time" : "REGEX(.*)",
  "compiled_by" : "REGEX(.*)",
  "compiled_in" : "REGEX(.*)",
  "release_date" : "REGEX(.*)",
  "machine" : "REGEX(.*)",
  "doc" : "REGEX(.*)",
  "libversions": {
     "boost": "REGEX(.*)",
     "libcurl": "REGEX(.*)",
     "libmosquitto": "REGEX(.*)",
     "libmicrohttpd": "REGEX(.*)",
     "openssl": "REGEX(.*)",
     "rapidjson": "REGEX(.*)",
     "mongoc": "REGEX(.*)",
     "bson": "REGEX(.*)"
  }
}
}



--TEARDOWN--
brokerStop CB
dbDrop CB
