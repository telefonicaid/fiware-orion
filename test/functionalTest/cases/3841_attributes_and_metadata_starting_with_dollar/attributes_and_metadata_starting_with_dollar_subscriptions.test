# Copyright 2021 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Attributes and metadata starting with dollar sign in the name in subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print localhost $LISTENER_PORT

--SHELL--

#
# 01. Create subscription covering the entity
# 02. Create entity E with attribute $temperature=22 with metadata $avg=23
# 03. Update $temperature=32 $avg=33 (triggers new notif)
# 04. Dump accumulator, see 2 notifications
# 05. Get subscription
#


echo '01. Create subscription covering the entity'
echo '==========================================='
payload='{
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ],
    "condition": {
      "attrs": [
        "$temperature"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "$temperature"
    ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo '02. Create entity E with attribute $temperature=22 with metadata $avg=23'
echo '========================================================================'
payload='{
  "id": "E",
  "type": "T",
  "$temperature": {
    "value": 22,
    "type": "Number",
    "metadata": {
      "$avg": {
        "value": 23,
        "type": "Number"
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo '03. Update $temperature=32 $avg=33 (triggers new notif)'
echo '======================================================='
payload='{
  "$temperature": {
    "value": 32,
    "type": "Number",
    "metadata": {
      "$avg": {
        "value": 33,
        "type": "Number"
      }
    }
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "$payload"
echo
echo


echo '04. Dump accumulator, see 2 notifications'
echo '========================================='
accumulatorDump
accumulatorReset
echo
echo


echo '05. Get subscription'
echo '===================='
orionCurl --url /v2/subscriptions
echo
echo


--REGEXPECT--
01. Create subscription covering the entity
===========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E with attribute $temperature=22 with metadata $avg=23
========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Update $temperature=32 $avg=33 (triggers new notif)
=======================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Dump accumulator, see 2 notifications
=========================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 169
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "$temperature": {
                "metadata": {
                    "$avg": {
                        "type": "Number",
                        "value": 23
                    }
                },
                "type": "Number",
                "value": 22
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 169
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "$temperature": {
                "metadata": {
                    "$avg": {
                        "type": "Number",
                        "value": 33
                    }
                },
                "type": "Number",
                "value": 32
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


05. Get subscription
====================
HTTP/1.1 200 OK
Content-Length: 418
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [
                "$temperature"
            ],
            "attrsFormat": "normalized",
            "covered": false,
            "http": {
                "url": "http://localhost:9997/notify"
            },
            "lastNotification": "REGEX(.*)",
            "lastSuccess": "REGEX(.*)",
            "lastSuccessCode": 200,
            "onlyChangedAttrs": false,
            "timesSent": 2
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [
                    "$temperature"
                ]
            },
            "entities": [
                {
                    "id": "E",
                    "type": "T"
                }
            ]
        }
    }
]


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
