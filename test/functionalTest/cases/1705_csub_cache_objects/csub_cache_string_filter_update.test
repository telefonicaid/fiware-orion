# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Sub cache string filter update

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a subscription with q-string-filter q1
# 02. Create entity E1 that matches q1
# 03. Create entity E2 that doesn't match q1
# 04. See notification of E1 in accumulator
# 05. Update subscription with q-string-filter q2
# 06. Create entity E3 that matches the old q1
# 07. See no new notification in accumulator (only E1)
# 08. Create entity E4 that matches q2
# 09. See two notifications in accumulator (E1 and E4)
#

echo "01. Create a subscription with q-string-filter q1"
echo "================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": "E.*"
      }
    ],
    "condition": {
      "attrs": [ "A1" ],
      "expression": {
        "q": "A1<10"
      }
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [ "A1" ]
  },
  "expires": "2026-04-05T14:00:00.00Z"
}'
orionCurl --url "/v2/subscriptions" --payload "$payload"
subId=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "02. Create entity E1 that matches q1"
echo "===================================="
payload='{
  "id": "E1",
  "A1": 9
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "03. Create entity E2 that doesn't match q1"
echo "=========================================="
payload='{
  "id": "E2",
  "A1": 10
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "04. See notification of E1 in accumulator"
echo "========================================="
accumulatorDump
echo
echo


echo "05. Update subscription with q-string-filter q2"
echo "==============================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern": "E.*"
      }
    ],
    "condition": {
      "attrs": [ "A1" ],
      "expression": {
        "q": "A1>10"
      }
    }
  }
}'
orionCurl --url "/v2/subscriptions/$subId" --payload "$payload" -X PATCH
echo
echo


echo "06. Create entity E3 that matches the old q1"
echo "============================================"
payload='{
  "id": "E3",
  "A1": 8
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "07. See no new notification in accumulator (only E1)"
echo "===================================================="
accumulatorDump
echo
echo


echo "08. Create entity E4 that matches q2"
echo "===================================="
payload='{
  "id": "E4",
  "A1": 11
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload"
echo
echo


echo "09. See two notifications in accumulator (E1 and E4)"
echo "===================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create a subscription with q-string-filter q1
=================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



02. Create entity E1 that matches q1
====================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



03. Create entity E2 that doesn't match q1
==========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=Thing
Content-Length: 0



04. See notification of E1 in accumulator
=========================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Number",
                "value": 9
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


05. Update subscription with q-string-filter q2
===============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



06. Create entity E3 that matches the old q1
============================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E3?type=Thing
Content-Length: 0



07. See no new notification in accumulator (only E1)
====================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Number",
                "value": 9
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


08. Create entity E4 that matches q2
====================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E4?type=Thing
Content-Length: 0



09. See two notifications in accumulator (E1 and E4)
====================================================
POST http://localhost:9997/notify
Fiware-Servicepath: /
Content-Length: 128
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:9997
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Number",
                "value": 9
            },
            "id": "E1",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://localhost:9997/notify
Fiware-Servicepath: /
Content-Length: 129
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:9997
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "A1": {
                "metadata": {},
                "type": "Number",
                "value": 11
            },
            "id": "E4",
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
