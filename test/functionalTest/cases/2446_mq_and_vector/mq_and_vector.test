# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
MQ and vector as value of metadata

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create an entity E1 with attr A1 with metadata M1 = [ 1, 2 ]
# 02. GET /v2/entities
# 03. GET /v2/entities?mq=A1.M1==1
# 04. Create an entity E2 with attr A1 with metadata M1 = [ "one", "two", "three" ]
# 05. GET /v2/entities
# 06. GET /v2/entities?mq=A1.M1==two&options=count
# 07. Create an entity room1 with attr temperature with metadata very_cold = [ "one", "two", "three" ]
# 08. GET /v2/entities?mq=temperature.very_cold==one&options=count
#

echo '01. Create an entity E1 with attr A1 with metadata M1 = [ 1, 2 ]'
echo '================================================================'
payload='{
  "id": "E1",
  "A1": {
    "value": "01",
    "metadata": {
      "M1": {
        "value": [ 1, 2 ]
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo



echo "02. GET /v2/entities"
echo "===================="
orionCurl --url /v2/entities
echo
echo


echo "03. GET /v2/entities?mq=A1.M1==1"
echo "================================"
orionCurl --url '/v2/entities?mq=A1.M1==1'
echo
echo


echo '04. Create an entity E2 with attr A1 with metadata M1 = [ "one", "two", "three" ]'
echo '================================================================================='
payload='{
  "id": "E2",
  "A1": {
    "value": "01",
    "metadata": {
      "M1": {
        "value": [ "one", "two", "three" ]
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "05. GET /v2/entities"
echo "===================="
orionCurl --url /v2/entities
echo
echo


echo "06. GET /v2/entities?mq=A1.M1==two&options=count"
echo "================================================"
orionCurl --url '/v2/entities?mq=A1.M1==two&options=count'
echo
echo


echo '07. Create an entity room1 with attr temperature with metadata very_cold = [ "one", "two", "three" ]'
echo "===================================================================================================="
payload='{
  "type": "t96C",
  "id": "room1",
  "temperature": {
    "type": "celsius",
    "metadata": {
      "very_cold": {
        "value": [ "one", "two", "three"],
        "type": "alarm"
      }
    },
    "value": 45
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "08. GET /v2/entities?mq=temperature.very_cold==one&options=count"
echo "================================================================"
orionCurl --url '/v2/entities?mq=temperature.very_cold==one&options=count'
echo
echo


--REGEXPECT--
01. Create an entity E1 with attr A1 with metadata M1 = [ 1, 2 ]
================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



02. GET /v2/entities
====================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 121

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": [
                        1,
                        2
                    ]
                }
            },
            "type": "Text",
            "value": "01"
        },
        "id": "E1",
        "type": "Thing"
    }
]


03. GET /v2/entities?mq=A1.M1==1
================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 121

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": [
                        1,
                        2
                    ]
                }
            },
            "type": "Text",
            "value": "01"
        },
        "id": "E1",
        "type": "Thing"
    }
]


04. Create an entity E2 with attr A1 with metadata M1 = [ "one", "two", "three" ]
=================================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=Thing
Content-Length: 0



05. GET /v2/entities
====================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 257

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": [
                        1,
                        2
                    ]
                }
            },
            "type": "Text",
            "value": "01"
        },
        "id": "E1",
        "type": "Thing"
    },
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": [
                        "one",
                        "two",
                        "three"
                    ]
                }
            },
            "type": "Text",
            "value": "01"
        },
        "id": "E2",
        "type": "Thing"
    }
]


06. GET /v2/entities?mq=A1.M1==two&options=count
================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Fiware-Total-Count: 1
Content-Type: application/json
Content-Length: 137

[
    {
        "A1": {
            "metadata": {
                "M1": {
                    "type": "StructuredValue",
                    "value": [
                        "one",
                        "two",
                        "three"
                    ]
                }
            },
            "type": "Text",
            "value": "01"
        },
        "id": "E2",
        "type": "Thing"
    }
]


07. Create an entity room1 with attr temperature with metadata very_cold = [ "one", "two", "three" ]
====================================================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/room1?type=t96C
Content-Length: 0



08. GET /v2/entities?mq=temperature.very_cold==one&options=count
================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Fiware-Total-Count: 1
Content-Type: application/json
Content-Length: 146

[
    {
        "id": "room1",
        "temperature": {
            "metadata": {
                "very_cold": {
                    "type": "alarm",
                    "value": [
                        "one",
                        "two",
                        "three"
                    ]
                }
            },
            "type": "celsius",
            "value": 45
        },
        "type": "t96C"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
