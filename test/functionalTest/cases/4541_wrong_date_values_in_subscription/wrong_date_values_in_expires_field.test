# Copyright 2024 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Wrong date values are not supported in 'expires' field of subscription

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create a subscription with an wrong date value in the 'seconds' component of the 'expires' field, see error
# 02. Create a subscription with an wrong date value in the 'minutes' component of the 'expires' field, see error
# 03. Create a subscription with an wrong date value in the 'hours' component of the 'expires' field, see error
# 04. Create a subscription with an wrong date value in the 'days' component of the 'expires' field, see error
# 05. Create a subscription with an wrong date value in the 'months' component of the 'expires' field, see error
# 06. Create a subscription with an wrong date value in the 'years' component of the 'expires' field, see error
# 07. Create a subscription with an valid date value in 'expires' field, (success case)
#


echo "01. Create a subscription with an wrong date value in the 'seconds' component of the 'expires' field, see error"
echo "==============================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "pressure"
    ]
  },
  "expires": "2022-12-21T17:16:63.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create a subscription with an wrong date value in the 'minutes' component of the 'expires' field, see error"
echo "==============================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "pressure"
    ]
  },
  "expires": "2022-12-21T17:65:03.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "03. Create a subscription with an wrong date value in the 'hours' component of the 'expires' field, see error"
echo "============================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "pressure"
    ]
  },
  "expires": "2022-12-21T25:16:11.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "04. Create a subscription with an wrong date value in the 'days' component of the 'expires' field, see error"
echo "============================================================================================================"
payload='{
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "pressure"
    ]
  },
  "expires": "2022-12-34T17:16:23.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "05. Create a subscription with an wrong date value in the 'months' component of the 'expires' field, see error"
echo "=============================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "pressure"
    ]
  },
  "expires": "2022-13-21T17:16:43.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "06. Create a subscription with an wrong date value in the 'years' component of the 'expires' field, see error"
echo "============================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "pressure"
    ]
  },
  "expires": "1899-12-21T17:16:23.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "07. Create a subscription with an valid date value in 'expires' field, (success case)"
echo "====================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "Room1",
        "type": "Room"
      }
    ],
    "condition": {
      "attrs": [
        "pressure"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    },
    "attrs": [
      "pressure"
    ]
  },
  "expires": "2025-12-31T23:59:59.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


--REGEXPECT--
01. Create a subscription with an wrong date value in the 'seconds' component of the 'expires' field, see error
===============================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 68

{
    "description": "expires has an invalid format",
    "error": "BadRequest"
}


02. Create a subscription with an wrong date value in the 'minutes' component of the 'expires' field, see error
===============================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 68

{
    "description": "expires has an invalid format",
    "error": "BadRequest"
}


03. Create a subscription with an wrong date value in the 'hours' component of the 'expires' field, see error
=============================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 68

{
    "description": "expires has an invalid format",
    "error": "BadRequest"
}


04. Create a subscription with an wrong date value in the 'days' component of the 'expires' field, see error
============================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 68

{
    "description": "expires has an invalid format",
    "error": "BadRequest"
}


05. Create a subscription with an wrong date value in the 'months' component of the 'expires' field, see error
==============================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 68

{
    "description": "expires has an invalid format",
    "error": "BadRequest"
}


06. Create a subscription with an wrong date value in the 'years' component of the 'expires' field, see error
=============================================================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 68

{
    "description": "expires has an invalid format",
    "error": "BadRequest"
}


07. Create a subscription with an valid date value in 'expires' field, (success case)
=====================================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



--TEARDOWN--
brokerStop CB
dbDrop CB

