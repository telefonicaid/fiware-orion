# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Default Metadata Types as schema.org

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1/A1/M1, no type, value of A1/M1 is a string
# 02. GET E1, see that the type of A1/M1 is 'Text' and the type of E1 is 'Thing'
# 03. Create E2/A1/M1, no type, value of A1/M1 is a number
# 04. GET E2, see that the type of A1/M1 is 'Number' and the type of E2 is 'Thing'
# 05. Create E3/A1/M1, no type, value of A1/M1 is a boolean
# 06. GET E3, see that the type of A1/M1 is 'Boolean' and the type of E3 is 'Thing'
# 07. Create E4/A1/M1, no type, value of A1/M1 is null
# 08. GET E4, see that the type of A1/M1 is 'None' and the type of E4 is 'Thing'
# 09. Create E5/A1/M1, no type, value of A1/M1 is a compound vector
# 10. GET E5, see that the type of A1/M1 is 'Array' and the type of E5 is 'Thing'
# 11. Create E6/A1/M1, no type, value of A1/M1 is a compound object
# 12. GET E6, see that the type of A1/M1 is 'Object' and the type of E6 is 'Thing'
#

echo "01. Create E1/A1/M1, no type, value of A1/M1 is a string"
echo "========================================================"
payload='{
  "id": "E1",
  "A1": {
    "value": "Not Important",
    "type":  "NotImportant",
    "metadata": {
      "M1": {
        "value": "STR"
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. GET E1, see that the type of A1/M1 is 'Text' and the type of E1 is 'Thing'"
echo "=============================================================================="
orionCurl --url /v2/entities/E1
echo
echo


echo "03. Create E2/A1/M1, no type, value of A1/M1 is a number"
echo "========================================================"
payload='{
  "id": "E2",
  "A1": {
    "value": "Not Important",
    "type":  "NotImportant",
    "metadata": {
      "M1": {
        "value": 25
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04. GET E2, see that the type of A1/M1 is 'Number' and the type of E2 is 'Thing'"
echo "================================================================================"
orionCurl --url /v2/entities/E2
echo
echo


echo "05. Create E3/A1/M1, no type, value of A1/M1 is a boolean"
echo "========================================================="
payload='{
  "id": "E3",
  "A1": {
    "value": "Not Important",
    "type":  "NotImportant",
    "metadata": {
      "M1": {
        "value": true
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "06. GET E3, see that the type of A1/M1 is 'Boolean' and the type of E3 is 'Thing'"
echo "================================================================================="
orionCurl --url /v2/entities/E3
echo
echo


echo "07. Create E4/A1/M1, no type, value of A1/M1 is null"
echo "===================================================="
payload='{
  "id": "E4",
  "A1": {
    "value": "Not Important",
    "type":  "NotImportant",
    "metadata": {
      "M1": {
        "value": null
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "08. GET E4, see that the type of A1/M1 is 'None' and the type of E4 is 'Thing'"
echo "=============================================================================="
orionCurl --url /v2/entities/E4
echo
echo


echo "09. Create E5/A1/M1, no type, value of A1/M1 is a compound vector"
echo "================================================================="
payload='{
  "id": "E5",
  "A1": {
    "value": "Not Important",
    "type":  "NotImportant",
    "metadata": {
      "M1": {
        "value": [ 1,2,3 ]
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "10. GET E5, see that the type of A1/M1 is 'Array' and the type of E5 is 'Thing'"
echo "==============================================================================="
orionCurl --url /v2/entities/E5
echo
echo


echo "11. Create E6/A1/M1, no type, value of A1/M1 is a compound object"
echo "================================================================="
payload='{
  "id": "E6",
  "A1": {
    "value": "Not Important",
    "type":  "NotImportant",
    "metadata": {
      "M1": {
        "value": { "a": 1, "b": 2 }
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "12. GET E6, see that the type of A1/M1 is 'Object' and the type of E6 is 'Thing'"
echo "================================================================================"
orionCurl --url /v2/entities/E6
echo
echo


--REGEXPECT--
01. Create E1/A1/M1, no type, value of A1/M1 is a string
========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



02. GET E1, see that the type of A1/M1 is 'Text' and the type of E1 is 'Thing'
==============================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 127

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "Text",
                "value": "STR"
            }
        },
        "type": "NotImportant",
        "value": "Not Important"
    },
    "id": "E1",
    "type": "Thing"
}


03. Create E2/A1/M1, no type, value of A1/M1 is a number
========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=Thing
Content-Length: 0



04. GET E2, see that the type of A1/M1 is 'Number' and the type of E2 is 'Thing'
================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 126

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "Number",
                "value": 25
            }
        },
        "type": "NotImportant",
        "value": "Not Important"
    },
    "id": "E2",
    "type": "Thing"
}


05. Create E3/A1/M1, no type, value of A1/M1 is a boolean
=========================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E3?type=Thing
Content-Length: 0



06. GET E3, see that the type of A1/M1 is 'Boolean' and the type of E3 is 'Thing'
=================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 129

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "Boolean",
                "value": true
            }
        },
        "type": "NotImportant",
        "value": "Not Important"
    },
    "id": "E3",
    "type": "Thing"
}


07. Create E4/A1/M1, no type, value of A1/M1 is null
====================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E4?type=Thing
Content-Length: 0



08. GET E4, see that the type of A1/M1 is 'None' and the type of E4 is 'Thing'
==============================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 126

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "None",
                "value": null
            }
        },
        "type": "NotImportant",
        "value": "Not Important"
    },
    "id": "E4",
    "type": "Thing"
}


09. Create E5/A1/M1, no type, value of A1/M1 is a compound vector
=================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E5?type=Thing
Content-Length: 0



10. GET E5, see that the type of A1/M1 is 'Array' and the type of E5 is 'Thing'
===============================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 140

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "StructuredValue",
                "value": [
                    1,
                    2,
                    3
                ]
            }
        },
        "type": "NotImportant",
        "value": "Not Important"
    },
    "id": "E5",
    "type": "Thing"
}


11. Create E6/A1/M1, no type, value of A1/M1 is a compound object
=================================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E6?type=Thing
Content-Length: 0



12. GET E6, see that the type of A1/M1 is 'Object' and the type of E6 is 'Thing'
================================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 146

{
    "A1": {
        "metadata": {
            "M1": {
                "type": "StructuredValue",
                "value": {
                    "a": 1,
                    "b": 2
                }
            }
        },
        "type": "NotImportant",
        "value": "Not Important"
    },
    "id": "E6",
    "type": "Thing"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
