# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Custom notification HTTP with JSON errors

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create custom subscription with payload and json field, see error
# 02. Create custom subscription with json field as string, see error
#

echo "01. Create custom subscription with payload and json field, see error"
echo "====================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1",
        "type": "T"
      }
    ]
  },
  "notification": {
    "httpCustom": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "json": {
        "text": "foo"
      },
      "payload": "foo"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create custom subscription with json field as string, see error"
echo "==================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E1",
        "type": "T"
      }
    ]
  },
  "notification": {
    "httpCustom": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "json": "only objects and arrays are accepted"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


--REGEXPECT--
01. Create custom subscription with payload and json field, see error
=====================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 133

{
    "description": "only one of payload, json or ngsi fields accepted at the same time in httpCustom or mqttCustom",
    "error": "BadRequest"
}


02. Create custom subscription with json field as string, see error
===================================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 102

{
    "description": "json fields in httpCustom or mqttCustom must be object or array",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
