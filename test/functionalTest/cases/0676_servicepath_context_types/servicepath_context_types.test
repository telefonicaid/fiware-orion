# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Service path context types test

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

# 01. Set up entities
#
# /Madrid/Gardens: entity EG
# /Madrid/Gardens/North: entity EGN
# /Madrid/Gardens/South: entity EGS
# /Madrid/Transport: entity ET
# /Madrid/Transport/Police: entity ETP
# /Madrid/Transport/Hospital: entity ETH
# /Madrid/Health: entity EH
#
# 02. Query types on /Madrid/Gardens/# (returns: tEG, tEGN, tEGS)
# 03. Query types on /Madrid/Gardens (returns: tEG)
# 04. Query types on /Madrid/Gardens/North (returns: tEGN)
# 05. Query types on /Madrid/Gardens/North/# (returns: tEGN)
# 06. Query types on /Madrid/Gardens, /Madrid/Transport (returns: tEG, tET)
# 07. Query types on /Madrid/Gardens/#, /Madrid/Transport/# (returns: tEG, tEGN, tEGS, tET, tETP, tETH)
# 08. Query types on /Madrid/Gardens, /Madrid/Transport/# (return: tEG, tET, tETP, tETH)
# 09. Query types on /Madrid/Gardens, /Madrid/Transport (return: tEG, tET)


echo "01. Set up entities"
echo "==================="
payload='{
  "attributes" : [
    {
      "name" : "A",
      "type" : "string",
      "value" : "V"
    }
  ]
}'
orionCurl --servicePath /Madrid/Gardens --url /v1/contextEntities/type/tEG/id/EG --payload "${payload}"
echo
echo
orionCurl --servicePath /Madrid/Gardens/North --url /v1/contextEntities/type/tEGN/id/EGN --payload "${payload}"
echo
echo
orionCurl --servicePath /Madrid/Gardens/South --url /v1/contextEntities/type/tEGS/id/EGS --payload "${payload}"
echo
echo
orionCurl --servicePath /Madrid/Transport --url /v1/contextEntities/type/tET/id/ET --payload "${payload}"
echo
echo
orionCurl --servicePath /Madrid/Transport/Police --url /v1/contextEntities/type/tETP/id/ETP --payload "${payload}"
echo
echo
orionCurl --servicePath /Madrid/Transport/Hospital --url /v1/contextEntities/type/tETH/id/ETH --payload "${payload}"
echo
echo
orionCurl --servicePath /Madrid/Health --url /v1/contextEntities/type/tEH/id/EH --payload "${payload}"
echo
echo

echo "02. Query on /Madrid/Gardens/# (returns: tEG, tEGN, tEGS)"
echo "========================================================="
orionCurl --servicePath '/Madrid/Gardens/#' --url /v1/contextTypes
echo
echo

echo "03. Query on /Madrid/Gardens (returns: tEG)"
echo "==========================================="
orionCurl --servicePath /Madrid/Gardens --url /v1/contextTypes
echo
echo

echo "04. Query on /Madrid/Gardens/North (returns: tEGN)"
echo "=================================================="
orionCurl --servicePath /Madrid/Gardens/North --url /v1/contextTypes
echo
echo

echo "05. Query on /Madrid/Gardens/North/# (returns: tEGN)"
echo "===================================================="
orionCurl --servicePath '/Madrid/Gardens/North/#' --url /v1/contextTypes
echo
echo

echo "06. Query on /Madrid/Gardens, /Madrid/Transport (returns: tEG, tET)"
echo "==================================================================="
orionCurl --servicePath '/Madrid/Gardens, /Madrid/Transport' --url /v1/contextTypes
echo
echo

echo "07. Query on /Madrid/Gardens/#, /Madrid/Transport/# (returns: tEG, tEGN, tEGS, tET, tETP, tETH)"
echo "==============================================================================================="
orionCurl --servicePath '/Madrid/Gardens/#, /Madrid/Transport/#' --url /v1/contextTypes
echo
echo

echo "08. Query on /Madrid/Gardens, /Madrid/Transport/# (return: tEG, tET, tETP, tETH)"
echo "================================================================================"
orionCurl --servicePath '/Madrid/Gardens, /Madrid/Transport/#' --url /v1/contextTypes
echo
echo

echo "09. Query on /Madrid/Gardens, /Madrid/Transport (return: tEG, tET)"
echo "=================================================================="
orionCurl --servicePath '/Madrid/Gardens, /Madrid/Transport' --url /v1/contextTypes
echo
echo

--REGEXPECT--
01. Set up entities
===================
HTTP/1.1 200 OK
Content-Length: 170
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "EG",
    "isPattern": "false",
    "type": "tEG"
}


HTTP/1.1 200 OK
Content-Length: 172
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "EGN",
    "isPattern": "false",
    "type": "tEGN"
}


HTTP/1.1 200 OK
Content-Length: 172
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "EGS",
    "isPattern": "false",
    "type": "tEGS"
}


HTTP/1.1 200 OK
Content-Length: 170
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "ET",
    "isPattern": "false",
    "type": "tET"
}


HTTP/1.1 200 OK
Content-Length: 172
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "ETP",
    "isPattern": "false",
    "type": "tETP"
}


HTTP/1.1 200 OK
Content-Length: 172
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "ETH",
    "isPattern": "false",
    "type": "tETH"
}


HTTP/1.1 200 OK
Content-Length: 170
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "EH",
    "isPattern": "false",
    "type": "tEH"
}


02. Query on /Madrid/Gardens/# (returns: tEG, tEGN, tEGS)
=========================================================
HTTP/1.1 200 OK
Content-Length: 163
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "tEG"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tEGN"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tEGS"
        }
    ]
}


03. Query on /Madrid/Gardens (returns: tEG)
===========================================
HTTP/1.1 200 OK
Content-Length: 93
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "tEG"
        }
    ]
}


04. Query on /Madrid/Gardens/North (returns: tEGN)
==================================================
HTTP/1.1 200 OK
Content-Length: 94
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "tEGN"
        }
    ]
}


05. Query on /Madrid/Gardens/North/# (returns: tEGN)
====================================================
HTTP/1.1 200 OK
Content-Length: 94
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "tEGN"
        }
    ]
}


06. Query on /Madrid/Gardens, /Madrid/Transport (returns: tEG, tET)
===================================================================
HTTP/1.1 200 OK
Content-Length: 127
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "tEG"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tET"
        }
    ]
}


07. Query on /Madrid/Gardens/#, /Madrid/Transport/# (returns: tEG, tEGN, tEGS, tET, tETP, tETH)
===============================================================================================
HTTP/1.1 200 OK
Content-Length: 267
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "tEG"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tEGN"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tEGS"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tET"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tETH"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tETP"
        }
    ]
}


08. Query on /Madrid/Gardens, /Madrid/Transport/# (return: tEG, tET, tETP, tETH)
================================================================================
HTTP/1.1 200 OK
Content-Length: 197
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "tEG"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tET"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tETH"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tETP"
        }
    ]
}


09. Query on /Madrid/Gardens, /Madrid/Transport (return: tEG, tET)
==================================================================
HTTP/1.1 200 OK
Content-Length: 127
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "tEG"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "tET"
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
