# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Service path default context types test

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

# 01. Set up entities
#
# E1 without servicePath
# E2 servicePath = /
# E3 servicePath = /path

# 02. Query on / (returns: T1, T2)
# 03. Query on /# (returns: T1, T2, T3)
# 04. Query without servicePath (returns: T1, T2, T3)

echo "01. Set up entities"
echo "==================="
payload='{
  "attributes" : [
    {
      "name" : "A",
      "type" : "string",
      "value" : "V"
    }
  ]
}'
orionCurl --url /v1/contextEntities/type/T1/id/E --payload "${payload}"
echo
echo
orionCurl --servicePath '/' --url /v1/contextEntities/type/T2/id/E --payload "${payload}"
echo
echo
orionCurl --servicePath '/path' --url /v1/contextEntities/type/T3/id/E --payload "${payload}"
echo
echo

echo "02. Query on / (returns: T1, T2)"
echo "================================"
orionCurl --servicePath '/' --url /v1/contextTypes
echo
echo

echo "03. Query on /# (returns: T1, T2, T3)"
echo "====================================="
orionCurl --servicePath '/#' --url /v1/contextTypes
echo
echo

echo "04. Query without servicePath (returns: T1, T2, T3)"
echo "==================================================="
orionCurl --url /v1/contextTypes
echo
echo

--REGEXPECT--
01. Set up entities
===================
HTTP/1.1 200 OK
Content-Length: 168
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E",
    "isPattern": "false",
    "type": "T1"
}


HTTP/1.1 200 OK
Content-Length: 168
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E",
    "isPattern": "false",
    "type": "T2"
}


HTTP/1.1 200 OK
Content-Length: 168
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "attributes": [
                {
                    "name": "A",
                    "type": "string",
                    "value": ""
                }
            ],
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "id": "E",
    "isPattern": "false",
    "type": "T3"
}


02. Query on / (returns: T1, T2)
================================
HTTP/1.1 200 OK
Content-Length: 125
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "T1"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "T2"
        }
    ]
}


03. Query on /# (returns: T1, T2, T3)
=====================================
HTTP/1.1 200 OK
Content-Length: 158
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "T1"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "T2"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "T3"
        }
    ]
}


04. Query without servicePath (returns: T1, T2, T3)
===================================================
HTTP/1.1 200 OK
Content-Length: 158
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "types": [
        {
            "attributes": [
                "A"
            ],
            "name": "T1"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "T2"
        },
        {
            "attributes": [
                "A"
            ],
            "name": "T3"
        }
    ]
}


--TEARDOWN--
brokerStop CB
dbDrop CB
