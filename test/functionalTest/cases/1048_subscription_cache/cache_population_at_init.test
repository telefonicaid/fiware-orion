# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
notifyFormat_ngsi10

--SHELL-INIT--
dbInit CB
brokerStart CB 0 IPv4 --cache

--SHELL--

#
# 01. Subscribe to E1.*/A1
# 02. Subscribe to E2.*,E3/A1+A2
# 03. Subscribe to E3.*,E4,E5.*/A1+A2+A3
# 04. Restart broker and wait a second
# 05. Statistics (see 3 subscriptions in cache)
#

echo "01. Subscribe to E1.*/A1"
echo "========================"
payload='{
  "entities": [
    {
        "id":   "E1.*",
        "isPattern": "true",
        "type": "T1"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload"
echo
echo


echo "02. Subscribe to E2.*,E3/A1+A2"
echo "=============================="
payload='{
  "entities": [
    {
        "id":   "E2.*",
        "isPattern": "true",
        "type": "T1"
    },
    {
        "id":   "E3",
        "type": "T1"
    }
  ],
  "attributes": [
    "A1",
    "A2"
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1",
            "A2"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload"
echo
echo


echo "03. Subscribe to E3.*,E4,E5.*/A1+A2+A3"
echo "======================================"
payload='{
  "entities": [
    {
        "id":   "E3.*",
        "isPattern": "true",
        "type": "T1"
    },
    {
        "id":   "E4",
        "type": "T1"
    },
    {
        "id":   "E5.*",
        "isPattern": "true",
        "type": "T1"
    }
  ],
  "attributes": [
    "A1",
    "A2",
    "A3"
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1",
            "A2",
            "A3"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload"
echo
echo


echo "04. Restart broker and wait a second"
echo "===================================="
brokerStop -v CB
echo "Broker Stopped"
sleep 1
brokerStart CB 0 IPv4 --cache > /dev/null
echo "Broker Restarted"
sleep 1
echo
echo


echo "05. Statistics in JSON"
echo "======================"
orionCurl --url /cache/statistics
echo
echo


#
# About
#   "subCacheRefreshs": "REGEX((0|1))"
# When the broker is started with -noCache, there are no refreshes performed
#
#
# About:
#  "REGEX((3|0))" and similar.  (sudden jump from 3 to 0)
# This is to make the functest work when the broker is started with -noCache - no cache inserts etc are made ... 0
#


--REGEXPECT--
01. Subscribe to E1.*/A1
========================
HTTP/1.1 200 OK
Content-Length: 104
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M",
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT1S"
    }
}


02. Subscribe to E2.*,E3/A1+A2
==============================
HTTP/1.1 200 OK
Content-Length: 104
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M",
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT1S"
    }
}


03. Subscribe to E3.*,E4,E5.*/A1+A2+A3
======================================
HTTP/1.1 200 OK
Content-Length: 104
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M",
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT1S"
    }
}


04. Restart broker and wait a second
====================================
Broker Stopped
Broker Restarted


05. Statistics in JSON
======================
HTTP/1.1 200 OK
Content-Length: 144
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "ids": "REGEX([0-9a-f, ]{76})",
    "inserts": REGEX((3|0)),
    "items": REGEX((3|0)),
    "refresh": REGEX((0|1)),
    "removes": 0,
    "updates": 0
}


--TEARDOWN--
brokerStop CB
dbDrop CB
