# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Empty payloads errors in JSON
--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
orionCurl --url "/v1/registry/registerContext" --payload "{}" --json
echo "1: ++++++++++++++++++++"

orionCurl --url "/v1/registry/discoverContextAvailability" --payload "{}" --json
echo "2: ++++++++++++++++++++"

orionCurl --url "/v1/registry/subscribeContextAvailability" --payload "{}" --json
echo "3: ++++++++++++++++++++"

orionCurl --url "/v1/registry/updateContextAvailabilitySubscription" --payload "{}" --json
echo "4: ++++++++++++++++++++"

orionCurl --url "/v1/registry/unsubscribeContextAvailability" --payload "{}" --json
echo "5: ++++++++++++++++++++"

orionCurl --url "/v1/queryContext" --payload "{}" --json
echo "6: ++++++++++++++++++++"

orionCurl --url "/v1/updateContext" --payload "{}" --json
echo "7: ++++++++++++++++++++"

orionCurl --url "/v1/subscribeContext" --payload "{}" --json
echo "8: ++++++++++++++++++++"

orionCurl --url "/v1/updateContextSubscription" --payload "{}" --json
echo "9: ++++++++++++++++++++"

orionCurl --url "/v1/unsubscribeContext" --payload "{}" --json
echo "10: ++++++++++++++++++++"

orionCurl --url "/v1/registry/notSupportedRequest" --payload "{}" --json
echo "11: ++++++++++++++++++++"

orionCurl --url "/v1/notSupportedRequest" --payload "{}" --json
echo "12: ++++++++++++++++++++"

orionCurl --url "/notSupportedRequest" --payload "{}" --json
echo "13: ++++++++++++++++++++"

--REGEXPECT--
HTTP/1.1 200 OK
Content-Length: 181
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "Empty Context Registration List",
        "reasonPhrase": "Bad Request"
    },
    "registrationId": "000000000000000000000000"
}
1: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 94
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}
2: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 161
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "No entities",
        "reasonPhrase": "Bad Request"
    },
    "subscriptionId": "000000000000000000000000"
}
3: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 161
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "No entities",
        "reasonPhrase": "Bad Request"
    },
    "subscriptionId": "000000000000000000000000"
}
4: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 144
Content-Type: application/json
Date: REGEX(.*)

{
    "statusCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    },
    "subscriptionId": "000000000000000000000000"
}
5: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 112
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "No entities",
        "reasonPhrase": "Bad Request"
    }
}
6: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 120
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "400",
        "details": "No context elements",
        "reasonPhrase": "Bad Request"
    }
}
7: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 166
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeError": {
        "errorCode": {
            "code": "400",
            "details": "invalid payload: No entities",
            "reasonPhrase": "Bad Request"
        }
    }
}
8: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 180
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeError": {
        "errorCode": {
            "code": "404",
            "reasonPhrase": "No context element found"
        },
        "subscriptionId": "000000000000000000000000"
    }
}
9: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 144
Content-Type: application/json
Date: REGEX(.*)

{
    "statusCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    },
    "subscriptionId": "000000000000000000000000"
}
10: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 119
Content-Type: application/json
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "service not found",
        "reasonPhrase": "Bad Request"
    }
}
11: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 119
Content-Type: application/json
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "service not found",
        "reasonPhrase": "Bad Request"
    }
}
12: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 119
Content-Type: application/json
Date: REGEX(.*)

{
    "orionError": {
        "code": "400",
        "details": "service not found",
        "reasonPhrase": "Bad Request"
    }
}
13: ++++++++++++++++++++
--TEARDOWN--
brokerStop CB
