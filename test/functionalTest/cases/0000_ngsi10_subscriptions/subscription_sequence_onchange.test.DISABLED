# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription sequence

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription for Room conditions: lightstatus, temperature
# 02. Create Room entity with lightstatus=L23: triggers notif (1)
# 03. Append Room temperature=t100: triggers notif (2)
# 04. Update subscription trottling to 6 seconds
# 05. Wait >6 seconds
# 06. Update Room lightstatus=L53: triggers notif (3)
# 07. Update Room lightstatus=L63: notif avoided by throttling
# 08. Wait >6 seconds to reset thottling
# 09. Update Room temperature=t39: triggers notif (4)
# 10. Update Room pressure=p230: doesn't trigger notif
# 11. Remove subscription
# 12. Update Room temperature=t40: no subscription to trigger
# 13. Dump accumulator: see 4 notifications
#

echo "01. Create subscription for Room conditions: lightstatus, temperature"
echo "====================================================================="
payload='{
    "entities": [
        {
            "type": "Room",
            "isPattern": "false",
            "id": "OfficeRoom"
        }
    ],
    "attributes": [
        "lightstatus",
        "temperature"
    ],
    "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
    "duration": "PT1H",
    "notifyConditions": [
        {
            "type": "ONCHANGE",
            "condValues": [
                "temperature",
                "lightstatus"
            ]
        }
    ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload"
SUB_ID=$(echo "$_response" | grep subscriptionId | awk -F\" '{ print $4}')
echo
echo


echo "02. Create Room entity with lightstatus=L23: triggers notif (1)"
echo "==============================================================="
payload='{
  "contextElements": [
  {
    "type": "Room",
    "isPattern": "false",
    "id": "OfficeRoom",
    "attributes": [
    {
      "name": "pressure",
      "type": "clima",
      "value": "p2300"
    },
    {
      "name": "lightstatus",
      "type": "light",
      "value": "L23"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. Append Room temperature=t100: triggers notif (2)"
echo "===================================================="
payload='{
  "contextElements": [
  {
    "type": "Room",
    "isPattern": "false",
    "id": "OfficeRoom",
    "attributes": [
    {
      "name": "temperature",
      "type": "degree",
      "value": "t100"
    },
    {
      "name": "lightstatus",
      "type": "light",
      "value": "L23"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "04. Update subscription trottling to 6 seconds"
echo "=============================================="
payload='{
  "subscriptionId": "'$SUB_ID'",
  "throttling": "PT6S"
}'
orionCurl --url /v1/updateContextSubscription --payload "$payload"
echo
echo


echo "05. Wait >6 seconds"
echo "==================="
sleep 10
echo
echo


echo "06. Update Room lightstatus=L53: triggers notif (3)"
echo "==================================================="
payload='{
  "contextElements": [
  {
    "type": "Room",
    "isPattern": "false",
    "id": "OfficeRoom",
    "attributes": [
    {
      "name": "pressure",
      "type": "clima",
      "value": "p5300"
    },
    {
      "name": "lightstatus",
      "type": "light",
      "value": "L53"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "07. Update Room lightstatus=L63: notif avoided by throttling"
echo "============================================================"
payload='{
  "contextElements": [
  {
    "type": "Room",
    "isPattern": "false",
    "id": "OfficeRoom",
    "attributes": [
    {
      "name": "pressure",
      "type": "clima",
      "value": "p6300"
    },
    {
      "name": "lightstatus",
      "type": "light",
      "value": "L63"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "08. Wait >6 seconds to reset thottling"
echo "======================================"
sleep 10
echo
echo


echo "09. Update Room temperature=t39: triggers notif (4)"
echo "==================================================="
payload='{
  "contextElements": [
  {
    "type": "Room",
    "isPattern": "false",
    "id": "OfficeRoom",
    "attributes": [
    {
      "name": "temperature",
      "type": "degree",
      "value": "t39"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "10. Update Room pressure=p230: doesn't trigger notif"
echo "===================================================="
payload='{
  "contextElements": [
  {
    "type": "Room",
    "isPattern": "false",
    "id": "OfficeRoom",
    "attributes": [
    {
      "name": "pressure",
      "type": "clima",
      "value": "p230"
    }
    ]
  }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "11. Remove subscription"
echo "======================="
payload='{
  "subscriptionId": "'$SUB_ID'"
}'
orionCurl --url /v1/unsubscribeContext --payload "$payload"
echo
echo


echo "12. Update Room temperature=t40: no subscription to trigger"
echo "==========================================================="
payload='{
  "contextElements": [
  {
    "type": "Room",
    "isPattern": "false",
    "id": "OfficeRoom",
    "attributes": [
    {
      "name": "temperature",
      "type": "degree",
      "value": "t40"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "13. Dump accumulator: see 4 notifications"
echo "========================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription for Room conditions: lightstatus, temperature
=====================================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 85

{
    "subscribeResponse": {
        "duration": "PT1H",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}


02. Create Room entity with lightstatus=L23: triggers notif (1)
===============================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 253

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "pressure",
                        "type": "clima",
                        "value": ""
                    },
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": ""
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Append Room temperature=t100: triggers notif (2)
====================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 257

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "temperature",
                        "type": "degree",
                        "value": ""
                    },
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": ""
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. Update subscription trottling to 6 seconds
==============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 87

{
    "subscribeResponse": {
        "subscriptionId": "REGEX([0-9a-f]{24})",
        "throttling": "PT6S"
    }
}


05. Wait >6 seconds
===================


06. Update Room lightstatus=L53: triggers notif (3)
===================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 253

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "pressure",
                        "type": "clima",
                        "value": ""
                    },
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": ""
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


07. Update Room lightstatus=L63: notif avoided by throttling
============================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 253

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "pressure",
                        "type": "clima",
                        "value": ""
                    },
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": ""
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


08. Wait >6 seconds to reset thottling
======================================


09. Update Room temperature=t39: triggers notif (4)
===================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 208

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "temperature",
                        "type": "degree",
                        "value": ""
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


10. Update Room pressure=p230: doesn't trigger notif
====================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 204

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "pressure",
                        "type": "clima",
                        "value": ""
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


11. Remove subscription
=======================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 93

{
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    },
    "subscriptionId": "REGEX([0-9a-f]{24})"
}


12. Update Room temperature=t40: no subscription to trigger
===========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 208

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "temperature",
                        "type": "degree",
                        "value": ""
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


13. Dump accumulator: see 4 notifications
=========================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 279
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": "L23"
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 333
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": "L23"
                    },
                    {
                        "name": "temperature",
                        "type": "degree",
                        "value": "t100"
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 333
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": "L53"
                    },
                    {
                        "name": "temperature",
                        "type": "degree",
                        "value": "t100"
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 332
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "lightstatus",
                        "type": "light",
                        "value": "L63"
                    },
                    {
                        "name": "temperature",
                        "type": "degree",
                        "value": "t39"
                    }
                ],
                "id": "OfficeRoom",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ],
    "originator": "localhost",
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
