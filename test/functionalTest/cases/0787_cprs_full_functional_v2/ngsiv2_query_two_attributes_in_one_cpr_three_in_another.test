# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Two Attributes In One CPr Three In Another

--SHELL-INIT--
dbInit CB
dbInit CP1
dbInit CP2
brokerStart CB
brokerStart CP1
brokerStart CP2

--SHELL--

#
# 01. Update/APPEND E1/T1/A1 in CP1
# 02. Update/APPEND E1/T1/A2 in CP1
# 03. Update/APPEND E1/T1/A3 in CP1
# 04. Update/APPEND E1/T1/A4 in CP2
# 05. Update/APPEND E1/T1/A5 in CP2
# 06. Register E1/T1/A1 in CB, provApp: CP1
# 07. Register E1/T1/A2 in CB, provApp: CP1
# 08. Register E1/T1/A3 in CB, provApp: CP1
# 09. Register E1/T1/A4 in CB, provApp: CP2
# 10. Register E1/T1/A5 in CB, provApp: CP2
# 11. Query E1/T1/A1+A2+A3+A4+A5 (A1-A3 in CP1, A4-A5 in CP2)
#


echo "01. Update/APPEND E1/T1/A1 in CP1"
echo "================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "A1 in CP1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP1_PORT
echo
echo


echo "02. Update/APPEND E1/T1/A2 in CP1"
echo "================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A2",
          "type": "string",
          "value": "A2 in CP1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP1_PORT
echo
echo


echo "03. Update/APPEND E1/T1/A3 in CP1"
echo "================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A3",
          "type": "string",
          "value": "A3 in CP1"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP1_PORT
echo
echo


echo "04. Update/APPEND E1/T1/A4 in CP2"
echo "================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A4",
          "type": "string",
          "value": "A4 in CP2"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP2_PORT
echo
echo


echo "05. Update/APPEND E1/T1/A5 in CP2"
echo "================================="
payload='{
  "contextElements": [
    {
      "type": "T1",
      "id":   "E1",
      "attributes": [
        {
          "name": "A5",
          "type": "string",
          "value": "A5 in CP2"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --port $CP2_PORT
echo
echo


echo "06. Register E1/T1/A1 in CB, provApp: CP1"
echo "========================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "07. Register E1/T1/A2 in CB, provApp: CP1"
echo "========================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A2",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "08. Register E1/T1/A3 in CB, provApp: CP1"
echo "========================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A3",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP1_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "09. Register E1/T1/A4 in CB, provApp: CP2"
echo "========================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A4",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP2_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "10. Register E1/T1/A5 in CB, provApp: CP2"
echo "========================================="
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T1",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A5",
        "type": "string"
      }
    ],
    "providingApplication": "http://localhost:'${CP2_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "11. Query E1/T1/A1+A2+A3+A4+A5 (A1-A3 in CP1, A4-A5 in CP2)"
echo "==========================================================="
payload='{
  "entities": [
    {
      "id":   "E1",
      "type": "T1"
    }
  ],
  "attributes": [
    "A1",
    "A2",
    "A3",
    "A4",
    "A5"
  ]
}'
orionCurl --url /v2/op/query --payload "$payload"
echo
echo


--REGEXPECT--
01. Update/APPEND E1/T1/A1 in CP1
=================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


02. Update/APPEND E1/T1/A2 in CP1
=================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Update/APPEND E1/T1/A3 in CP1
=================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A3",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. Update/APPEND E1/T1/A4 in CP2
=================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A4",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


05. Update/APPEND E1/T1/A5 in CP2
=================================
HTTP/1.1 200 OK
Content-Length: 189
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A5",
                        "type": "string",
                        "value": ""
                    }
                ],
                "id": "E1",
                "isPattern": "false",
                "type": "T1"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. Register E1/T1/A1 in CB, provApp: CP1
=========================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


07. Register E1/T1/A2 in CB, provApp: CP1
=========================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


08. Register E1/T1/A3 in CB, provApp: CP1
=========================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


09. Register E1/T1/A4 in CB, provApp: CP2
=========================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


10. Register E1/T1/A5 in CB, provApp: CP2
=========================================
HTTP/1.1 200 OK
Content-Length: 62
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}


11. Query E1/T1/A1+A2+A3+A4+A5 (A1-A3 in CP1, A4-A5 in CP2)
===========================================================
HTTP/1.1 200 OK
Content-Length: 310
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "string",
            "value": "A1 in CP1"
        },
        "A2": {
            "metadata": {},
            "type": "string",
            "value": "A2 in CP1"
        },
        "A3": {
            "metadata": {},
            "type": "string",
            "value": "A3 in CP1"
        },
        "A4": {
            "metadata": {},
            "type": "string",
            "value": "A4 in CP2"
        },
        "A5": {
            "metadata": {},
            "type": "string",
            "value": "A5 in CP2"
        },
        "id": "E1",
        "type": "T1"
    }
]


--TEARDOWN--
brokerStop CB
brokerStop CP1
brokerStop CP2
dbDrop CB
dbDrop CP1
dbDrop CP2
