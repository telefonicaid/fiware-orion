# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Extra locations feature

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription for entity E
# 02. Create entity E with actual loc (L1) and 2 extra locs (L2, L3)
# 03. GET entity E: see actual L1 (actual), L2 (extra), L3 (extra)
# 04. Dump & reset accumulator: see E with L1 (actual), L2 (extra), L3 (extra)
# 05. GET geoquery near 1m around L1, to check this is the actual location of the entity
# 06. Update E (with overrideMetadata) to remove ignoreType metadata in L2: see fail
# 07. Update E to add ignoreType metadata in L1: success
# 08. GET geoquery near 1m around L1, to check there is no result
# 09. Update E (with overrideMetadata) to remove ignoreType metadata in L2: success
# 10. GET geoquery near 1m around L2, to check this is the actual location of the entity
#

echo "01. Create subscription for entity E"
echo "===================================="
payload='{
  "subject": {
    "entities": [
      {
        "id" : "E"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create entity E with actual loc (L1) and 2 extra locs (L2, L3)"
echo "=================================================================="
payload='{
  "id": "E",
  "type": "T",
  "L1": {
    "value": { "type":"Point", "coordinates": [10,10] },
    "type": "geo:json"
  },
  "L2": {
    "value": { "type":"Point", "coordinates": [20,20] },
    "type": "geo:json",
    "metadata": {
      "ignoreType": {
        "value": true,
        "type": "Boolean"
      }
    }
  },
  "L3": {
    "value": { "type":"Point", "coordinates": [30,30] },
    "type": "geo:json",
    "metadata": {
      "ignoreType": {
        "value": true,
        "type": "Boolean"
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "${payload}"
echo
echo


echo "03. GET entity E: see actual L1 (actual), L2 (extra), L3 (extra)"
echo "================================================================"
orionCurl --url /v2/entities/E
echo
echo


echo "04. Dump & reset accumulator: see E with L1 (actual), L2 (extra), L3 (extra)"
echo "============================================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "05. GET geoquery near 1m around L1, to check this is the actual location of the entity"
echo "======================================================================================"
orionCurl --url '/v2/entities?georel=near;maxDistance:1&geometry=point&coords=10,10'
echo
echo


echo "06. Update E (with overrideMetadata) to remove ignoreType metadata in L2: see fail"
echo "=================================================================================="
payload='{
  "L2": {
    "value": { "type": "Point", "coordinates": [20,20] },
    "type": "geo:json"
  }
}'
orionCurl --url '/v2/entities/E/attrs?options=overrideMetadata' --payload "${payload}"
echo
echo


echo "07. Update E to add ignoreType metadata in L1: success"
echo "======================================================"
payload='{
  "L1": {
    "value": { "type": "Point", "coordinates": [10,10] },
    "type": "geo:json",
    "metadata": {
      "ignoreType": {
        "value": true,
        "type": "Boolean"
      }
    }
  }
}'
orionCurl --url /v2/entities/E/attrs --payload "${payload}"
echo
echo


echo "08. GET geoquery near 1m around L1, to check there is no result"
echo "==============================================================="
orionCurl --url '/v2/entities?georel=near;maxDistance:1&geometry=point&coords=10,10'
echo
echo


echo "09. Update E (with overrideMetadata) to remove ignoreType metadata in L2: success"
echo "================================================================================="
payload='{
  "L2": {
    "value": { "type": "Point", "coordinates": [20,20] },
    "type": "geo:json"
  }
}'
orionCurl --url '/v2/entities/E/attrs?options=overrideMetadata' --payload "${payload}"
echo
echo


echo "10. GET geoquery near 1m around L2, to check this is the actual location of the entity"
echo "======================================================================================"
orionCurl --url '/v2/entities?georel=near;maxDistance:1&geometry=point&coords=20,20'
echo
echo


--REGEXPECT--
01. Create subscription for entity E
====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E with actual loc (L1) and 2 extra locs (L2, L3)
==================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. GET entity E: see actual L1 (actual), L2 (extra), L3 (extra)
================================================================
HTTP/1.1 200 OK
Content-Length: 367
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "L1": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "coordinates": [
                10,
                10
            ],
            "type": "Point"
        }
    },
    "L2": {
        "metadata": {
            "ignoreType": {
                "type": "Boolean",
                "value": true
            }
        },
        "type": "geo:json",
        "value": {
            "coordinates": [
                20,
                20
            ],
            "type": "Point"
        }
    },
    "L3": {
        "metadata": {
            "ignoreType": {
                "type": "Boolean",
                "value": true
            }
        },
        "type": "geo:json",
        "value": {
            "coordinates": [
                30,
                30
            ],
            "type": "Point"
        }
    },
    "id": "E",
    "type": "T"
}


04. Dump & reset accumulator: see E with L1 (actual), L2 (extra), L3 (extra)
=============================================================================
POST http://127.0.0.1:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 422
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36}); cbnotif=1

{
    "data": [
        {
            "L1": {
                "metadata": {},
                "type": "geo:json",
                "value": {
                    "coordinates": [
                        10,
                        10
                    ],
                    "type": "Point"
                }
            },
            "L2": {
                "metadata": {
                    "ignoreType": {
                        "type": "Boolean",
                        "value": true
                    }
                },
                "type": "geo:json",
                "value": {
                    "coordinates": [
                        20,
                        20
                    ],
                    "type": "Point"
                }
            },
            "L3": {
                "metadata": {
                    "ignoreType": {
                        "type": "Boolean",
                        "value": true
                    }
                },
                "type": "geo:json",
                "value": {
                    "coordinates": [
                        30,
                        30
                    ],
                    "type": "Point"
                }
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


05. GET geoquery near 1m around L1, to check this is the actual location of the entity
======================================================================================
HTTP/1.1 200 OK
Content-Length: 369
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "L1": {
            "metadata": {},
            "type": "geo:json",
            "value": {
                "coordinates": [
                    10,
                    10
                ],
                "type": "Point"
            }
        },
        "L2": {
            "metadata": {
                "ignoreType": {
                    "type": "Boolean",
                    "value": true
                }
            },
            "type": "geo:json",
            "value": {
                "coordinates": [
                    20,
                    20
                ],
                "type": "Point"
            }
        },
        "L3": {
            "metadata": {
                "ignoreType": {
                    "type": "Boolean",
                    "value": true
                }
            },
            "type": "geo:json",
            "value": {
                "coordinates": [
                    30,
                    30
                ],
                "type": "Point"
            }
        },
        "id": "E",
        "type": "T"
    }
]


06. Update E (with overrideMetadata) to remove ignoreType metadata in L2: see fail
==================================================================================
HTTP/1.1 413 Payload Too Large
Content-Length: 202
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "You cannot use more than one geo location attribute when creating an entity. Use ignoreType metadata if you want to add additional informative locations.",
    "error": "NoResourcesAvailable"
}


07. Update E to add ignoreType metadata in L1: success
======================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. GET geoquery near 1m around L1, to check there is no result
===============================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


09. Update E (with overrideMetadata) to remove ignoreType metadata in L2: success
=================================================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



10. GET geoquery near 1m around L2, to check this is the actual location of the entity
======================================================================================
HTTP/1.1 200 OK
Content-Length: 369
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "L1": {
            "metadata": {
                "ignoreType": {
                    "type": "Boolean",
                    "value": true
                }
            },
            "type": "geo:json",
            "value": {
                "coordinates": [
                    10,
                    10
                ],
                "type": "Point"
            }
        },
        "L2": {
            "metadata": {},
            "type": "geo:json",
            "value": {
                "coordinates": [
                    20,
                    20
                ],
                "type": "Point"
            }
        },
        "L3": {
            "metadata": {
                "ignoreType": {
                    "type": "Boolean",
                    "value": true
                }
            },
            "type": "geo:json",
            "value": {
                "coordinates": [
                    30,
                    30
                ],
                "type": "Point"
            }
        },
        "id": "E",
        "type": "T"
    }
]


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
