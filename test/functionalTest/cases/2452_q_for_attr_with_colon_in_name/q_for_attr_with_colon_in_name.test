# Copyright 2017 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
q for attr with colon in name

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity E1 with attribute A:1
# 02. Create entity E2 with attribute A:2
# 03. GET /v2/entities?q=A:1, no hits (no attr named A)
# 04. GET /v2/entities?q='A:1', see the entity E1
# 05. GET /v2/entities?q=!'A:1', see the entity E2
# 06. GET /v2/entities?q=!'A:2', see the entity E1
# 07. GET /v2/entities?q='A:3', no hits
# 08. GET /v2/entities?q=!'A:3', see E1 and E2
#

echo "01. Create entity E1 with attribute A:1"
echo "======================================="
payload='{
  "id": "E1",
  "A:1": { "value": 1 }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Create entity E2 with attribute A:2"
echo "======================================="
payload='{
  "id": "E2",
  "A:2": { "value": 2 }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03. GET /v2/entities?q=A:1, no hits (no attr named A)"
echo "====================================================="
orionCurl --url "/v2/entities?q=A:1"
echo
echo


echo "04. GET /v2/entities?q='A:1', see the entity E1"
echo "==============================================="
orionCurl --url "/v2/entities?q='A:1'"
echo
echo


echo "05. GET /v2/entities?q=!'A:1', see the entity E2"
echo "================================================"
orionCurl --url "/v2/entities?q=!'A:1'"
echo
echo


echo "06. GET /v2/entities?q=!'A:2', see the entity E1"
echo "================================================"
orionCurl --url "/v2/entities?q=!'A:2'"
echo
echo


echo "07. GET /v2/entities?q='A:3', no hits"
echo "====================================="
orionCurl --url "/v2/entities?q='A:3'"
echo
echo


echo "08. GET /v2/entities?q=!'A:3', see E1 and E2"
echo "============================================"
orionCurl --url "/v2/entities?q=!'A:3'"
echo
echo


--REGEXPECT--
01. Create entity E1 with attribute A:1
=======================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E1?type=Thing
Content-Length: 0



02. Create entity E2 with attribute A:2
=======================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=Thing
Content-Length: 0



03. GET /v2/entities?q=A:1, no hits (no attr named A)
=====================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


04. GET /v2/entities?q='A:1', see the entity E1
===============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

[
    {
        "A:1": {
            "metadata": {},
            "type": "Number",
            "value": 1
        },
        "id": "E1",
        "type": "Thing"
    }
]


05. GET /v2/entities?q=!'A:1', see the entity E2
================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

[
    {
        "A:2": {
            "metadata": {},
            "type": "Number",
            "value": 2
        },
        "id": "E2",
        "type": "Thing"
    }
]


06. GET /v2/entities?q=!'A:2', see the entity E1
================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 76

[
    {
        "A:1": {
            "metadata": {},
            "type": "Number",
            "value": 1
        },
        "id": "E1",
        "type": "Thing"
    }
]


07. GET /v2/entities?q='A:3', no hits
=====================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 2

[]


08. GET /v2/entities?q=!'A:3', see E1 and E2
============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 151

[
    {
        "A:1": {
            "metadata": {},
            "type": "Number",
            "value": 1
        },
        "id": "E1",
        "type": "Thing"
    },
    {
        "A:2": {
            "metadata": {},
            "type": "Number",
            "value": 2
        },
        "id": "E2",
        "type": "Thing"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
