# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Errors related with geo:line

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

# Inspired by 0000_ngsi10_geolocation_query tests
# (all steps include a 'b' sub-step to check entity)
#
#
# 01. Create entity with geo:line without vector coordinates -> fail
# 02. Create entity with geo:line with 1 coordinate -> fail
# 03. Create entity with two geo:line -> fail
# 04. Create entity with one geo:line (attr1) -> OK
# 05. Update attr1 geo:line attribute -> OK
# 06. Append a new geo:line attribute (attr2) -> fail
# 07. Remove the geo:line attribute (attr1) -> OK
# 08. Append a new geo:line attribute (attr2) -> OK
# 09. Change attribute type to no-geo:line (attr2) -> OK
# 10. Append new geo:line attribute (attr3) -> OK
# 11. Change attr2 type to geo:line again -> fail
#

echo "01. Create entity with geo:line without vector coordinates -> fail"
echo "=================================================================="
payload='{
  "id": "E1",
  "attr1": {
    "value": "10, 10",
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "01b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "02. Create entity with geo:line with 1 coordinate -> fail"
echo "========================================================="
payload='{
  "id": "E1",
  "attr1": {
    "value": [ "10, 10" ],
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "03. Create entity with two geo:line -> fail"
echo "============================================"
payload='{
  "id": "E1",
  "attr1": {
    "value": [ "0, 0", "10, 10" ],
    "type": "geo:line"
  },
  "attr2": {
    "value": [ "20, 20", "30, 30" ],
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "03b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "04. Create entity with one geo:line (attr1) -> OK"
echo "================================================="
payload='{
  "id": "E1",
  "attr1": {
    "value": [ "0, 0", "10, 10" ],
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "04b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "05. Update attr1 geo:line attribute -> OK"
echo "========================================="
payload='{
  "attr1": {
    "value": [ "20, 20", "30, 30" ],
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X PATCH
echo
echo


echo "05b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "06. Append a new geo:line attribute (attr2) -> fail"
echo "==================================================="
payload='{
  "attr2": {
    "value": [ "40, 40", "50, 50" ],
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X POST
echo
echo


echo "06b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "07. Remove the geo:line attribute (attr1) -> OK"
echo "==============================================="
orionCurl --url /v2/entities/E1/attrs/attr1 -X DELETE
echo
echo


echo "07b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "08. Append a new geo:line attribute (attr2) -> OK"
echo "================================================="
payload='{
  "attr2": {
    "value": [ "50, 50", "60, 60" ],
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X POST
echo
echo


echo "08b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "09. Change attribute type to no-geo:line (attr2) -> OK"
echo "======================================================"
payload='{
  "attr2": {
    "value": "foo",
    "type": "no-geopoint"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X POST
echo
echo


echo "09b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "10. Append new geo:line attribute (attr3) -> OK"
echo "==============================================="
payload='{
  "attr3": {
    "value": [ "-10, 0", "7, 7" ],
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X POST
echo
echo


echo "10b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


echo "11. Change attr2 type to geo:line again -> fail"
echo "==============================================="
payload='{
  "attr2": {
    "value": [ "-20, 0", "8, 9" ],
    "type": "geo:line"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X POST
echo
echo


echo "11b. Check entity"
echo "================="
orionCurl --url /v2/entities/E1
echo
echo


--REGEXPECT--
01. Create entity with geo:line without vector coordinates -> fail
==================================================================
HTTP/1.1 400 Bad Request
Content-Length: 138
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "error parsing location attribute: geo:line, geo:box and geo:polygon needs array of strings as value",
    "error": "BadRequest"
}


01b. Check entity
=================
HTTP/1.1 404 Not Found
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


02. Create entity with geo:line with 1 coordinate -> fail
=========================================================
HTTP/1.1 400 Bad Request
Content-Length: 109
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "error parsing location attribute: geo:line uses at least 2 coordinates",
    "error": "BadRequest"
}


02b. Check entity
=================
HTTP/1.1 404 Not Found
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


03. Create entity with two geo:line -> fail
============================================
HTTP/1.1 413 Payload Too Large
Content-Length: 202
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "You cannot use more than one geo location attribute when creating an entity. Use ignoreType metadata if you want to add additional informative locations.",
    "error": "NoResourcesAvailable"
}


03b. Check entity
=================
HTTP/1.1 404 Not Found
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


04. Create entity with one geo:line (attr1) -> OK
=================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04b. Check entity
=================
HTTP/1.1 200 OK
Content-Length: 94
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "geo:line",
        "value": [
            "0, 0",
            "10, 10"
        ]
    },
    "id": "E1",
    "type": "Thing"
}


05. Update attr1 geo:line attribute -> OK
=========================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05b. Check entity
=================
HTTP/1.1 200 OK
Content-Length: 96
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "geo:line",
        "value": [
            "20, 20",
            "30, 30"
        ]
    },
    "id": "E1",
    "type": "Thing"
}


06. Append a new geo:line attribute (attr2) -> fail
===================================================
HTTP/1.1 413 Payload Too Large
Content-Length: 202
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "You cannot use more than one geo location attribute when creating an entity. Use ignoreType metadata if you want to add additional informative locations.",
    "error": "NoResourcesAvailable"
}


06b. Check entity
=================
HTTP/1.1 200 OK
Content-Length: 96
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr1": {
        "metadata": {},
        "type": "geo:line",
        "value": [
            "20, 20",
            "30, 30"
        ]
    },
    "id": "E1",
    "type": "Thing"
}


07. Remove the geo:line attribute (attr1) -> OK
===============================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07b. Check entity
=================
HTTP/1.1 200 OK
Content-Length: 26
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "E1",
    "type": "Thing"
}


08. Append a new geo:line attribute (attr2) -> OK
=================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08b. Check entity
=================
HTTP/1.1 200 OK
Content-Length: 96
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr2": {
        "metadata": {},
        "type": "geo:line",
        "value": [
            "50, 50",
            "60, 60"
        ]
    },
    "id": "E1",
    "type": "Thing"
}


09. Change attribute type to no-geo:line (attr2) -> OK
======================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



09b. Check entity
=================
HTTP/1.1 200 OK
Content-Length: 85
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr2": {
        "metadata": {},
        "type": "no-geopoint",
        "value": "foo"
    },
    "id": "E1",
    "type": "Thing"
}


10. Append new geo:line attribute (attr3) -> OK
===============================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



10b. Check entity
=================
HTTP/1.1 200 OK
Content-Length: 153
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr2": {
        "metadata": {},
        "type": "no-geopoint",
        "value": "foo"
    },
    "attr3": {
        "metadata": {},
        "type": "geo:line",
        "value": [
            "-10, 0",
            "7, 7"
        ]
    },
    "id": "E1",
    "type": "Thing"
}


11. Change attr2 type to geo:line again -> fail
===============================================
HTTP/1.1 413 Payload Too Large
Content-Length: 202
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "You cannot use more than one geo location attribute when creating an entity. Use ignoreType metadata if you want to add additional informative locations.",
    "error": "NoResourcesAvailable"
}


11b. Check entity
=================
HTTP/1.1 200 OK
Content-Length: 153
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "attr2": {
        "metadata": {},
        "type": "no-geopoint",
        "value": "foo"
    },
    "attr3": {
        "metadata": {},
        "type": "geo:line",
        "value": [
            "-10, 0",
            "7, 7"
        ]
    },
    "id": "E1",
    "type": "Thing"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
