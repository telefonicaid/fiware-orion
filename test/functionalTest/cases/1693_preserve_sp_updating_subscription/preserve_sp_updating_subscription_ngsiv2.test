# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Preserve service path updating subscriptions in NGSIv2

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create subscription in service path /sp1
# 02. Get subscriptions by /sp1 and get it
# 03. Update subscription with service path /sp1
# 04. Get subscriptions by /sp1 and get it
# 05. Update subscription with service path /sp2
# 06. Get subscriptions by /sp1 without results
# 07. Get subscriptions by /sp2 and get it
#

echo "01. Create subscription in service path /sp1"
echo "============================================"
payload='
{
    "subject": {
        "entities": [
            {
                "type": "Room",
                "idPattern": ".*"
            }
        ],
        "condition": {
            "attrs": [ "temperature" ]
         }
    },
    "notification": {
        "http": {
            "url": "http://localhost:1234"
        },
        "attrs": ["temperature"]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload" --servicePath /s1
echo
echo

idSubscription=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "02. Get subscriptions by /sp1 and get it"
echo "========================================"
orionCurl --url /v2/subscriptions --servicePath /s1
echo
echo


echo "03. Update subscription with service path /sp1"
echo "=============================================="
payload='
{
    "notification": {
        "http": {
            "url": "http://localhost:5678"
        },
        "attrs": [ "pressure" ]
    }
}
'
orionCurl --url "/v2/subscriptions/${idSubscription}" --payload "$payload" --servicePath /s1 -X PATCH
echo
echo


echo "04. Get subscriptions by /sp1 and get it"
echo "========================================"
orionCurl --url /v2/subscriptions --servicePath /s1
echo
echo


echo "05. Update subscription with service path /sp2"
echo "=============================================="
payload='
{
    "notification": {
        "http": {
            "url": "http://localhost:9999"
        },
        "attrs": [ "humidity" ]
    }
}
'
orionCurl --url "/v2/subscriptions/${idSubscription}" --payload "$payload" --servicePath /s2 -X PATCH
echo
echo


echo "06. Get subscriptions by /sp1 without results"
echo "============================================="
orionCurl --url /v2/subscriptions --servicePath /s1
echo
echo


echo "07. Get subscriptions by /sp2 and get it"
echo "========================================"
orionCurl --url /v2/subscriptions --servicePath /s2
echo
echo


--REGEXPECT--
01. Create subscription in service path /sp1
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Get subscriptions by /sp1 and get it
========================================
HTTP/1.1 200 OK
Content-Length: 334
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "expires": "2050-04-05T14:00:00.000Z",
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [
                "temperature"
            ],
            "attrsFormat": "normalized",
            "covered": false,
            "http": {
                "url": "http://localhost:1234"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [
                    "temperature"
                ]
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "Room"
                }
            ]
        }
    }
]


03. Update subscription with service path /sp1
==============================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Get subscriptions by /sp1 and get it
========================================
HTTP/1.1 200 OK
Content-Length: 331
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "expires": "2050-04-05T14:00:00.000Z",
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [
                "pressure"
            ],
            "attrsFormat": "normalized",
            "covered": false,
            "http": {
                "url": "http://localhost:5678"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [
                    "temperature"
                ]
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "Room"
                }
            ]
        }
    }
]


05. Update subscription with service path /sp2
==============================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Get subscriptions by /sp1 without results
=============================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


07. Get subscriptions by /sp2 and get it
========================================
HTTP/1.1 200 OK
Content-Length: 331
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "expires": "2050-04-05T14:00:00.000Z",
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [
                "humidity"
            ],
            "attrsFormat": "normalized",
            "covered": false,
            "http": {
                "url": "http://localhost:9999"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [
                    "temperature"
                ]
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "Room"
                }
            ]
        }
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
