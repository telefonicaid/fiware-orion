# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notifications of different sizes
--SHELL-INIT--
source harnessFunctions.sh

dbInit CB
brokerStart CB 183
accumulatorStart

# Taking into account that the notification size depends on (but is not exactly equal to)
# the document size, which in sequence depends on (but it is not exactly equal to)
# the size of the "inflated" attribute, the third parameter has been determined empirically
dbInsertEntity testharness E1 1900
dbInsertEntity testharness E2 2100
dbInsertEntity testharness E3 810000
dbInsertEntity testharness E4 840000

--SHELL--
source harnessFunctions.sh

# Close to the static buffer limit (~19 KB)
url="localhost:${BROKER_PORT}/NGSI10/subscribeContext"
payload='<?xml version="1.0"?>
<subscribeContextRequest>
  <entityIdList>
    <entityId type="T" isPattern="false">
      <id>E1</id>
    </entityId>
  </entityIdList>
  <attributeList/>'"
  <reference>http://127.0.0.1:${LISTENER_PORT}/notify</reference>
  "'<duration>PT1H</duration>
  <notifyConditions>
    <notifyCondition>
      <type>ONCHANGE</type>
      <condValueList>
        <condValue>A</condValue>
      </condValueList>
    </notifyCondition>
  </notifyConditions>
</subscribeContextRequest>'
curlIt "XML" ${url} "${payload}" "Content-Type: application/xml" "Accept: application/xml"
echo "1: ++++++++++++++++++++"
sleep 1

# Passing the static buffer limit (~21 KB)
payload='<?xml version="1.0"?>
<subscribeContextRequest>
  <entityIdList>
    <entityId type="T" isPattern="false">
      <id>E2</id>
    </entityId>
  </entityIdList>
  <attributeList/>'"
  <reference>http://127.0.0.1:${LISTENER_PORT}/notify</reference>
  "'<duration>PT1H</duration>
  <notifyConditions>
    <notifyCondition>
      <type>ONCHANGE</type>
      <condValueList>
        <condValue>A</condValue>
      </condValueList>
    </notifyCondition>
  </notifyConditions>
</subscribeContextRequest>'
curlIt "XML" ${url} "${payload}" "Content-Type: application/xml" "Accept: application/xml"
sleep 1
echo "2: ++++++++++++++++++++"

# Close to the dynamic buffer limit (~7.9 MB)
payload='<?xml version="1.0"?>
<subscribeContextRequest>
  <entityIdList>
    <entityId type="T" isPattern="false">
      <id>E3</id>
    </entityId>
  </entityIdList>
  <attributeList/>'"
  <reference>http://127.0.0.1:${LISTENER_PORT}/notify</reference>
  "'<duration>PT1H</duration>
  <notifyConditions>
    <notifyCondition>
      <type>ONCHANGE</type>
      <condValueList>
        <condValue>A</condValue>
      </condValueList>
    </notifyCondition>
  </notifyConditions>
</subscribeContextRequest>'
curlIt "XML" ${url} "${payload}" "Content-Type: application/xml" "Accept: application/xml"
sleep 1
echo "3: ++++++++++++++++++++"

# Passing the dynamic buffer limit, causing an error (~8.1 MB)
payload='<?xml version="1.0"?>
<subscribeContextRequest>
  <entityIdList>
    <entityId type="T" isPattern="false">
      <id>E4</id>
    </entityId>
  </entityIdList>
  <attributeList/>'"
  <reference>http://127.0.0.1:${LISTENER_PORT}/notify</reference>
  "'<duration>PT1H</duration>
  <notifyConditions>
    <notifyCondition>
      <type>ONCHANGE</type>
      <condValueList>
        <condValue>A</condValue>
      </condValueList>
    </notifyCondition>
  </notifyConditions>
</subscribeContextRequest>'
curlIt "XML" ${url} "${payload}" "Content-Type: application/xml" "Accept: application/xml"
echo "4: ++++++++++++++++++++"

# The number of notifications has to be 4 (the last one was not sent)
echo "** Notifications sent:"
curl localhost:9997/number -s -S

# The log has to show exactly 1 case of static buffer usage
echo "** Static buffer usages:"
grep "Sending to HTTP server" /tmp/contextBrokerLog | grep "sending static message of" | wc -l

# The log has to show exactly 2 cases of dynamic buffer usage
echo "** Dynamic buffer usages:"
grep "Sending to HTTP server" /tmp/contextBrokerLog | grep "sending dynamic message of" | wc -l

# The log has to show exactly 1 error about notification too large
echo "** Too large errors:"
grep "HTTP request to send is too large" /tmp/contextBrokerLog | wc -l

# Notification sizes. Note that if don't use the cut, some character in the log line prologue
# breaks the test harness: @, :, [, ], ~, /, (, ), etc.
echo "** Notification sizes:"
grep "Sending to HTTP server" /tmp/contextBrokerLog | awk -F\] '{ print $2 }'

--REGEXPECT--
HTTP/1.1 200 OK
Content-Length: 192
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<subscribeContextResponse>
  <subscribeResponse>
    <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
    <duration>PT1H</duration>
  </subscribeResponse>
</subscribeContextResponse>
1: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 192
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<subscribeContextResponse>
  <subscribeResponse>
    <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
    <duration>PT1H</duration>
  </subscribeResponse>
</subscribeContextResponse>
2: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 192
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<subscribeContextResponse>
  <subscribeResponse>
    <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
    <duration>PT1H</duration>
  </subscribeResponse>
</subscribeContextResponse>
3: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 192
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<subscribeContextResponse>
  <subscribeResponse>
    <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
    <duration>PT1H</duration>
  </subscribeResponse>
</subscribeContextResponse>
4: ++++++++++++++++++++
** Notifications sent:
3
** Static buffer usages:
1
** Dynamic buffer usages:
2
** Too large errors:
1
** Notification sizes:
 sendHttpSocket: Sending to HTTP server 1: sending static message of 19879 bytes to HTTP server
 sendHttpSocket: Sending to HTTP server 2: sending dynamic message of 21879 bytes to HTTP server
 sendHttpSocket: Sending to HTTP server 3: sending dynamic message of 8100881 bytes to HTTP server
--TEARDOWN--
source harnessFunctions.sh
cp /tmp/contextBrokerLog /tmp/contextBrokerLog.notification_different_sizes
brokerStop CB
accumulatorStop
